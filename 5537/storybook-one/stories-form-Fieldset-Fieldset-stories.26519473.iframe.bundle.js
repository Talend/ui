"use strict";(self.webpackChunk_talend_ui_storybook_one=self.webpackChunk_talend_ui_storybook_one||[]).push([[1587],{"../design-system/src/stories/form/Fieldset/Fieldset.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ConditionalFieldset:()=>ConditionalFieldset,Default:()=>Default,Error:()=>Error,Errors:()=>Errors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),react_hook_form__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react-hook-form/dist/index.esm.mjs"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../design-system/src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,title:"Form/Fieldset"},Default=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Frequency",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Select,{name:"repeat",label:"Repeat",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"At specific intervals"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"Foo"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"Bar"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Number,{label:"Minutes",suffix:"minutes",name:"minutes"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Time,{name:"repeat-from",label:"Repeat from",required:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Time,{name:"repeat-to",label:"Repeat to",required:!0})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Buttons,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.nR,{onClick:()=>{},children:"Cancel"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.$$,{type:"submit",onClick:()=>{},children:"Submit"})]})]}),Error=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Frequency",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Select,{name:"repeat",label:"Repeat",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"At specific intervals"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"Foo"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"Bar"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Number,{label:"Minutes",suffix:"minutes",name:"minutes"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Time,{hasError:!0,name:"repeat-from",label:"Repeat from",required:!0,description:"Repeat from is invalid"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Time,{name:"repeat-to",label:"Repeat to",required:!0})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Buttons,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.nR,{onClick:()=>{},children:"Cancel"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.$$,{type:"submit",onClick:()=>{},children:"Submit"})]})]}),Errors=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Frequency",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Select,{name:"repeat",label:"Repeat",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"At specific intervals"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"Foo"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("option",{children:"Bar"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Number,{label:"Minutes",suffix:"minutes",name:"minutes"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Time,{hasError:!0,name:"repeat-from",label:"Repeat from",required:!0,description:"Repeat from is invalid"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Time,{hasError:!0,name:"repeat-to",label:"Repeat to",required:!0,description:"Repeat to is invalid"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Buttons,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.nR,{onClick:()=>{},children:"Cancel"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.$$,{type:"submit",onClick:()=>{},children:"Submit"})]})]}),ConditionalFieldset=()=>{var _errors$accountName,_errors$numberOfSlots,_errors$name,_errors$email;const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),{register,watch,handleSubmit,unregister,formState}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.mN)(),{errors}=formState,withUserFormSelection=watch("withUser",!1),hasMultipleErrors=Object.keys(errors).length>1;(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{withUserFormSelection||(unregister("name"),unregister("email"))}),[withUserFormSelection]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV,{onSubmit:handleSubmit((data=>{setFormData(JSON.stringify(data))})),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Create an account",children:[hasMultipleErrors&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Nm,{description:"Every displayed field is required",withBackground:!0})}),formData&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.B$,{title:"Form submitted",description:formData,withBackground:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Text,{label:"Account name",suffix:".info",hasError:!!errors.accountName,description:!hasMultipleErrors&&(null===(_errors$accountName=errors.accountName)||void 0===_errors$accountName?void 0:_errors$accountName.message)||void 0,required:!0,...register("accountName",{required:"This field is required"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Number,{label:"Slots",hasError:!!errors.numberOfSlots,description:!hasMultipleErrors&&(null===(_errors$numberOfSlots=errors.numberOfSlots)||void 0===_errors$numberOfSlots?void 0:_errors$numberOfSlots.message)||void 0,required:!0,...register("numberOfSlots",{required:"This field is required"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.ToggleSwitch,{label:"Send invite to admin user",...register("withUser"),checked:withUserFormSelection})]}),withUserFormSelection&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Invite admin for this account",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Text,{label:"Username",hasError:"name"in errors&&!!errors.name,description:!hasMultipleErrors&&"name"in errors&&(null===(_errors$name=errors.name)||void 0===_errors$name?void 0:_errors$name.message)||void 0,...register("name",{required:"This field is required"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Email,{label:"User email",hasError:"email"in errors&&!!errors.email,description:!hasMultipleErrors&&"email"in errors&&(null===(_errors$email=errors.email)||void 0===_errors$email?void 0:_errors$email.message)||void 0,...register("email",{required:"This field is required"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Buttons,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.nR,{type:"reset",children:"Cancel"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.$$,{type:"submit",onClick:()=>{},children:"Submit"})]})]})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => {\n  return <Form>\n            <Form.Fieldset legend="Frequency">\n                <Form.Select name="repeat" label="Repeat">\n                    <option>At specific intervals</option>\n                    <option>Foo</option>\n                    <option>Bar</option>\n                </Form.Select>\n                <Form.Row>\n                    <Form.Number label="Minutes" suffix="minutes" name="minutes" />\n                    <Form.Time name="repeat-from" label="Repeat from" required />\n                    <Form.Time name="repeat-to" label="Repeat to" required />\n                </Form.Row>\n            </Form.Fieldset>\n            <Form.Buttons>\n                <ButtonSecondary onClick={() => {}}>Cancel</ButtonSecondary>\n                <ButtonPrimary type="submit" onClick={() => {}}>\n                    Submit\n                </ButtonPrimary>\n            </Form.Buttons>\n        </Form>;\n}',...Default.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'() => {\n  return <Form>\n            <Form.Fieldset legend="Frequency">\n                <Form.Select name="repeat" label="Repeat">\n                    <option>At specific intervals</option>\n                    <option>Foo</option>\n                    <option>Bar</option>\n                </Form.Select>\n                <Form.Row>\n                    <Form.Number label="Minutes" suffix="minutes" name="minutes" />\n                    <Form.Time hasError name="repeat-from" label="Repeat from" required description="Repeat from is invalid" />\n                    <Form.Time name="repeat-to" label="Repeat to" required />\n                </Form.Row>\n            </Form.Fieldset>\n            <Form.Buttons>\n                <ButtonSecondary onClick={() => {}}>Cancel</ButtonSecondary>\n                <ButtonPrimary type="submit" onClick={() => {}}>\n                    Submit\n                </ButtonPrimary>\n            </Form.Buttons>\n        </Form>;\n}',...Error.parameters?.docs?.source}}},Errors.parameters={...Errors.parameters,docs:{...Errors.parameters?.docs,source:{originalSource:'() => {\n  return <Form>\n            <Form.Fieldset legend="Frequency">\n                <Form.Select name="repeat" label="Repeat">\n                    <option>At specific intervals</option>\n                    <option>Foo</option>\n                    <option>Bar</option>\n                </Form.Select>\n                <Form.Row>\n                    <Form.Number label="Minutes" suffix="minutes" name="minutes" />\n                    <Form.Time hasError name="repeat-from" label="Repeat from" required description="Repeat from is invalid" />\n                    <Form.Time hasError name="repeat-to" label="Repeat to" required description="Repeat to is invalid" />\n                </Form.Row>\n            </Form.Fieldset>\n            <Form.Buttons>\n                <ButtonSecondary onClick={() => {}}>Cancel</ButtonSecondary>\n                <ButtonPrimary type="submit" onClick={() => {}}>\n                    Submit\n                </ButtonPrimary>\n            </Form.Buttons>\n        </Form>;\n}',...Errors.parameters?.docs?.source}}},ConditionalFieldset.parameters={...ConditionalFieldset.parameters,docs:{...ConditionalFieldset.parameters?.docs,source:{originalSource:"() => {\n  const [formData, setFormData] = useState<string | null>(null);\n  const {\n    register,\n    watch,\n    handleSubmit,\n    unregister,\n    formState\n  } = useForm<FormDataWithUser>();\n  const {\n    errors\n  } = formState;\n  const withUserFormSelection = watch('withUser', false);\n  const hasMultipleErrors = Object.keys(errors).length > 1;\n  useEffect(() => {\n    if (!withUserFormSelection) {\n      unregister('name');\n      unregister('email');\n    }\n  }, [withUserFormSelection]);\n  const onSubmit = (data: FormDataWithUser) => {\n    setFormData(JSON.stringify(data));\n  };\n  return <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Fieldset legend=\"Create an account\">\n                {hasMultipleErrors && <Form.Row>\n                        <InlineMessageDestructive description=\"Every displayed field is required\" withBackground />\n                    </Form.Row>}\n                {formData && <Form.Row>\n                        <InlineMessageInformation title=\"Form submitted\" description={formData} withBackground />\n                    </Form.Row>}\n                <Form.Row>\n                    <Form.Text label=\"Account name\" suffix=\".info\" hasError={!!errors.accountName} description={!hasMultipleErrors && errors.accountName?.message || undefined} required {...register('accountName', {\n          required: 'This field is required'\n        })} />\n                    <Form.Number label=\"Slots\" hasError={!!errors.numberOfSlots} description={!hasMultipleErrors && errors.numberOfSlots?.message || undefined} required {...register('numberOfSlots', {\n          required: 'This field is required'\n        })} />\n                </Form.Row>\n                <Form.ToggleSwitch label=\"Send invite to admin user\" {...register('withUser')} checked={withUserFormSelection} />\n            </Form.Fieldset>\n            {withUserFormSelection && <Form.Fieldset legend=\"Invite admin for this account\">\n                    <Form.Text label=\"Username\" hasError={'name' in errors && !!errors.name} description={!hasMultipleErrors && 'name' in errors && errors.name?.message || undefined} {...register('name', {\n        required: 'This field is required'\n      })} />\n                    <Form.Email label=\"User email\" hasError={'email' in errors && !!errors.email} description={!hasMultipleErrors && 'email' in errors && errors.email?.message || undefined} {...register('email', {\n        required: 'This field is required'\n      })} />\n                </Form.Fieldset>}\n            <Form.Buttons>\n                <ButtonSecondary type=\"reset\">Cancel</ButtonSecondary>\n                <ButtonPrimary type=\"submit\" onClick={() => {}}>\n                    Submit\n                </ButtonPrimary>\n            </Form.Buttons>\n        </Form>;\n}",...ConditionalFieldset.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Error","Errors","ConditionalFieldset"]}}]);