name: Lerna CI

on:
  pull_request:
  push:
    branches: [master, maintenance/*]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and test

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          check-latest: true
          registry-url: 'https://registry.npmjs.org/'
          scope: '@talend'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn install --frozen-lockfile

      # - name: Test
      #   run: yarn test

      - name: Lint
        continue-on-error: true
        id: lint
        run: |
          yarn lint
          node merge-report.js

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.2.0
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'eslint-report.json'

      - name: Prettier
        continue-on-error: true
        id: prettier
        run: |
          ./prettier.sh
          STATUS=$(git status --short output)
          echo "::set-output name=STATUS::$STATUS"

      - name: Commit prettier
        uses: actions-js/push@master
        if: steps.prettier.outputs.STATUS
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: 'chore: apply prettier on modified files'

      - uses: preactjs/compressed-size-action@v2
        if: github.ref != 'refs/heads/master'
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          build-script: 'prepublishOnly'
          pattern: './packages/*/dist/*.{js,css,json}'
          exclude: '{**/*.html,**/*.map,**/node_modules/**}'
