name: Release monorepo packages

on:
  push:
    branches: [master, maintenance/**]
    paths:
      - 'lerna.json'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: yarn
      - run: yarn test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: yarn
      - run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag-demo:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all commits and tags
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - id: set-variables
        run: ./.github/workflows/release-variables.sh # this sets env.TAG, env.CHANGELOG and env.DEMO_DOMAIN
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set-variables.outputs.TAG }}
          release_name: ${{ steps.set-variables.outputs.TAG }}
          body: ${{ steps.set-variables.outputs.CHANGELOG }}
          draft: false
          prerelease: false
      - run: yarn && yarn build-demo && npx surge --project .static --domain ${{ steps.set-variables.outputs.DEMO_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

  update-cdn-content:
    needs: publish-npm
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -XPOST -u "frassinier:${{ secrets.PERSONAL_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/talend/cdn-content/actions/workflows/download-talend-ui.yml/dispatches --data '{"ref": "main"}'
