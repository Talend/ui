"use strict";(self.webpackChunk_talend_react_containers=self.webpackChunk_talend_react_containers||[]).push([[534],{"./src/ActionIconToggle/ActionIconToggle.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ActionIconToggle_stories});var prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),lib_esm=__webpack_require__("../cmf/lib-esm/index.js"),components_lib_esm=__webpack_require__("../components/lib-esm/index.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function ContainerActionIconToggle(props){const newProps={...props};return newProps.onClick||(newProps.onClick=(event,data)=>{props.actionCreator?props.dispatchActionCreator(props.actionCreator,event,data):props.dispatch(props.payload)}),(0,jsx_runtime.jsx)(components_lib_esm.ActionIconToggle,{...newProps})}ContainerActionIconToggle.displayName="ContainerActionIconToggle",ContainerActionIconToggle.displayName="Container(ActionIconToggle)",ContainerActionIconToggle.propTypes={actionCreator:prop_types_default().string,dispatchActionCreator:prop_types_default().func,dispatch:prop_types_default().func,payload:prop_types_default().object};const ActionIconToggle=(0,lib_esm.TJ)({mapStateToProps:function mapStateToProps(state,ownProps){let props={};return ownProps.actionId&&(props=lib_esm.Ay.action.getActionInfo({registry:lib_esm.Ay.registry.getRegistry(),store:{getState:()=>state}},ownProps.actionId)),props},mergeProps:function mergeProps(stateProps,dispatchProps,ownProps){const props={...ownProps,...stateProps,...dispatchProps};return delete props.actionId,props},omitCMFProps:!0,withComponentRegistry:!0,withDispatch:!0,withDispatchActionCreator:!0,withComponentId:!0})(ContainerActionIconToggle);const ActionIconToggle_stories={parameters:{storySource:{source:"import PropTypes from 'prop-types';\n\nimport { cmfConnect } from '@talend/react-cmf';\nimport { Drawer } from '@talend/react-components';\n\nimport ActionIconToggle from '.';\n\nexport default {\n\ttitle: 'ActionIconToggle',\n};\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\topened: state.app.flags['action:icon:creator:flag'],\n\t};\n}\n\nfunction MyDrawer({ opened }) {\n\treturn opened ? (\n\t\t<Drawer>\n\t\t\t<form>\n\t\t\t\t<div>\n\t\t\t\t\t<input id=\"my-input\" type=\"text\" autoFocus />\n\t\t\t\t\t<label htmlFor=\"my-input\">Your name</label>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</Drawer>\n\t) : null;\n}\nMyDrawer.propTypes = { opened: PropTypes.bool };\nMyDrawer.displayName = 'MyDrawer';\nconst MyconnectedDrawer = cmfConnect({ mapStateToProps })(MyDrawer);\n\nexport const Default = () => (\n\t<div>\n\t\t<div style={{ padding: '1.875rem' }}>\n\t\t\t<p>Click on the icon toggle below</p>\n\t\t\t<ActionIconToggle actionId=\"action-icon-toggle:toggle\" />\n\t\t</div>\n\t\t<MyconnectedDrawer />\n\t</div>\n);\n",locationsMap:{default:{startLoc:{col:23,line:42},endLoc:{col:1,line:50},startBody:{col:23,line:42},endBody:{col:1,line:50}}}}},title:"ActionIconToggle"};function MyDrawer({opened}){return opened?(0,jsx_runtime.jsx)(components_lib_esm.Drawer,{children:(0,jsx_runtime.jsxs)("form",{children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("input",{id:"my-input",type:"text",autoFocus:!0}),(0,jsx_runtime.jsx)("label",{htmlFor:"my-input",children:"Your name"})]}),(0,jsx_runtime.jsx)("button",{className:"btn btn-primary",onClick:e=>{e.stopPropagation()},children:"Submit"})]})}):null}MyDrawer.propTypes={opened:prop_types_default().bool},MyDrawer.displayName="MyDrawer";const MyconnectedDrawer=(0,lib_esm.TJ)({mapStateToProps:function ActionIconToggle_stories_mapStateToProps(state){return{opened:state.app.flags["action:icon:creator:flag"]}}})(MyDrawer),Default=()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{style:{padding:"1.875rem"},children:[(0,jsx_runtime.jsx)("p",{children:"Click on the icon toggle below"}),(0,jsx_runtime.jsx)(ActionIconToggle,{actionId:"action-icon-toggle:toggle"})]}),(0,jsx_runtime.jsx)(MyconnectedDrawer,{})]});Default.displayName="Default",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <div>\n        <div style={{\n    padding: '1.875rem'\n  }}>\n            <p>Click on the icon toggle below</p>\n            <ActionIconToggle actionId=\"action-icon-toggle:toggle\" />\n        </div>\n        <MyconnectedDrawer />\n    </div>",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);