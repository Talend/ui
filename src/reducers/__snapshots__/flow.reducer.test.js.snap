// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FLOWDESIGNER_FLOW_ADD_ELEMENTS should batch many elements creation 1`] = `
Immutable.Map {
  "in": Immutable.Map {
    "nodeId": Immutable.Map {},
    "node2": Immutable.Map {},
  },
  "transformToApply": undefined,
  "parents": Immutable.Map {
    "nodeId": Immutable.Map {},
    "node2": Immutable.Map {},
  },
  "transform": Object {
    "k": 1,
    "x": 0,
    "y": 0,
  },
  "out": Immutable.Map {
    "nodeId": Immutable.Map {
      "portId": Immutable.Map {},
    },
    "node2": Immutable.Map {},
  },
  "nodes": Immutable.Map {
    "nodeId": Immutable.Record {
      "id": "nodeId",
      "type": undefined,
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Record {
        "position": Immutable.Record {
          "x": 10,
          "y": 10,
        },
        "nodeSize": Immutable.Record {
          "width": 10,
          "height": 10,
        },
        "nodeType": undefined,
        "label": "",
        "description": "",
        "properties": Immutable.Map {},
      },
      "getPosition": [Function],
      "getSize": [Function],
      "getNodeType": [Function],
    },
    "node2": Immutable.Record {
      "id": "node2",
      "type": undefined,
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Record {
        "position": Immutable.Record {
          "x": 10,
          "y": 10,
        },
        "nodeSize": Immutable.Record {
          "width": 10,
          "height": 10,
        },
        "nodeType": undefined,
        "label": "",
        "description": "",
        "properties": Immutable.Map {},
      },
      "getPosition": [Function],
      "getSize": [Function],
      "getNodeType": [Function],
    },
  },
  "ports": Immutable.Map {
    "portId": Immutable.Record {
      "id": "portId",
      "nodeId": "nodeId",
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Map {
        "properties": Immutable.Map {
          "index": 0,
          "type": "OUTGOING",
        },
        "position": Immutable.Record {
          "x": undefined,
          "y": undefined,
        },
      },
      "getPosition": [Function],
      "setPosition": [Function],
      "getPortType": [Function],
      "getPortDirection": [Function],
      "getPortFlowType": [Function],
      "getIndex": [Function],
      "setIndex": [Function],
    },
  },
  "childrens": Immutable.Map {
    "nodeId": Immutable.Map {},
    "node2": Immutable.Map {},
  },
  "nodeTypes": Immutable.Map {},
  "links": Immutable.Map {},
}
`;

exports[`FLOWDESIGNER_FLOW_ADD_ELEMENTS should batch one element creation 1`] = `
Immutable.Map {
  "in": Immutable.Map {
    "nodeId": Immutable.Map {},
  },
  "transformToApply": undefined,
  "parents": Immutable.Map {
    "nodeId": Immutable.Map {},
  },
  "transform": Object {
    "k": 1,
    "x": 0,
    "y": 0,
  },
  "out": Immutable.Map {
    "nodeId": Immutable.Map {},
  },
  "nodes": Immutable.Map {
    "nodeId": Immutable.Record {
      "id": "nodeId",
      "type": undefined,
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Record {
        "position": Immutable.Record {
          "x": 10,
          "y": 10,
        },
        "nodeSize": Immutable.Record {
          "width": 10,
          "height": 10,
        },
        "nodeType": undefined,
        "label": "",
        "description": "",
        "properties": Immutable.Map {},
      },
      "getPosition": [Function],
      "getSize": [Function],
      "getNodeType": [Function],
    },
  },
  "ports": Immutable.Map {},
  "childrens": Immutable.Map {
    "nodeId": Immutable.Map {},
  },
  "nodeTypes": Immutable.Map {},
  "links": Immutable.Map {},
}
`;

exports[`FLOWDESIGNER_FLOW_LOAD should reset old flow state and load news not touching flow config should load elements 1`] = `
Immutable.Map {
  "in": Immutable.Map {
    "nodeId": Immutable.Map {},
    "node2": Immutable.Map {},
  },
  "transformToApply": undefined,
  "parents": Immutable.Map {
    "nodeId": Immutable.Map {},
    "node2": Immutable.Map {},
  },
  "transform": Object {
    "k": 1,
    "x": 0,
    "y": 0,
  },
  "out": Immutable.Map {
    "nodeId": Immutable.Map {
      "portId": Immutable.Map {},
    },
    "node2": Immutable.Map {},
  },
  "nodes": Immutable.Map {
    "nodeId": Immutable.Record {
      "id": "nodeId",
      "type": undefined,
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Record {
        "position": Immutable.Record {
          "x": 10,
          "y": 10,
        },
        "nodeSize": Immutable.Record {
          "width": 10,
          "height": 10,
        },
        "nodeType": undefined,
        "label": "",
        "description": "",
        "properties": Immutable.Map {},
      },
      "getPosition": [Function],
      "getSize": [Function],
      "getNodeType": [Function],
    },
    "node2": Immutable.Record {
      "id": "node2",
      "type": undefined,
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Record {
        "position": Immutable.Record {
          "x": 10,
          "y": 10,
        },
        "nodeSize": Immutable.Record {
          "width": 10,
          "height": 10,
        },
        "nodeType": undefined,
        "label": "",
        "description": "",
        "properties": Immutable.Map {},
      },
      "getPosition": [Function],
      "getSize": [Function],
      "getNodeType": [Function],
    },
  },
  "ports": Immutable.Map {
    "portId": Immutable.Record {
      "id": "portId",
      "nodeId": "nodeId",
      "data": Immutable.Map {
        "properties": Immutable.Map {},
      },
      "graphicalAttributes": Immutable.Map {
        "properties": Immutable.Map {
          "index": 0,
          "type": "OUTGOING",
        },
        "position": Immutable.Record {
          "x": undefined,
          "y": undefined,
        },
      },
      "getPosition": [Function],
      "setPosition": [Function],
      "getPortType": [Function],
      "getPortDirection": [Function],
      "getPortFlowType": [Function],
      "getIndex": [Function],
      "setIndex": [Function],
    },
  },
  "childrens": Immutable.Map {
    "nodeId": Immutable.Map {},
    "node2": Immutable.Map {},
  },
  "nodeTypes": Immutable.Map {},
  "links": Immutable.Map {},
}
`;

exports[`FLOWDESIGNER_PAN_TO set a calculated transformation into transformToApply  1`] = `
Immutable.Map {
  "in": Immutable.Map {},
  "transformToApply": Transform {
    "k": 1,
    "x": -400,
    "y": -400,
  },
  "parents": Immutable.Map {},
  "transform": Object {
    "k": 1,
    "x": 0,
    "y": 0,
  },
  "out": Immutable.Map {},
  "nodes": Immutable.Map {},
  "ports": Immutable.Map {},
  "childrens": Immutable.Map {},
  "nodeTypes": Immutable.Map {},
  "links": Immutable.Map {},
}
`;
