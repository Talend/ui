"use strict";(self.webpackChunk_talend_ui_storybook_one=self.webpackChunk_talend_ui_storybook_one||[]).push([[1140],{"../design-system/src/stories/form/Field/Input/Input.Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,CheckboxControlled:()=>CheckboxControlled,CheckboxFillStates:()=>CheckboxFillStates,CheckboxFillStatesDisabled:()=>CheckboxFillStatesDisabled,CheckboxFillStatesReadonly:()=>CheckboxFillStatesReadonly,CheckboxReactHooksForm:()=>CheckboxReactHooksForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../design-system/src/index.ts"),react_hook_form__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react-hook-form/dist/index.esm.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Form/Fields/Checkbox",component:___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox},CheckboxFillStates=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.xs,{gap:"M",justify:"stretch",align:"stretch",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Checkbox"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Indeterminate Checkbox",indeterminate:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Checked Checkbox",checked:!0})]}),CheckboxFillStatesDisabled=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.xs,{gap:"M",justify:"stretch",align:"stretch",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Checkbox",disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Indeterminate Checkbox",indeterminate:!0,disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Checked Checkbox",checked:!0,disabled:!0})]}),CheckboxFillStatesReadonly=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.xs,{gap:"M",justify:"stretch",align:"stretch",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Checkbox",readOnly:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Indeterminate Checkbox",indeterminate:!0,readOnly:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"checkbox",label:"Checked Checkbox",checked:!0,readOnly:!0})]}),CheckboxReactHooksForm=()=>{const{register,handleSubmit}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)(),[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV,{onSubmit:handleSubmit(setFormData),children:[formData&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.B$,{title:"Form data",description:JSON.stringify(formData,null,2),withBackground:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Pick one or multiple options",required:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Option A",...register("option-a")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Option B",checked:!0,...register("option-b")})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Pick one or multiple inline options",required:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Row,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Inline option A",...register("inline-option-a")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Inline option B",checked:!0,...register("inline-option-b")})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Read only are sent",required:!0,readOnly:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Option C",...register("option-c")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Option D",checked:!0,...register("option-d")})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Disabled are not sent",required:!0,disabled:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Option E",...register("option-e",{disabled:!0})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Option F",checked:!0,...register("option-f",{disabled:!0})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Buttons,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.$$,{type:"submit",onClick:()=>{},children:"Submit"})})]})},CheckboxControlled=()=>{const{register,watch}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)(),optionA=watch("option-a");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.lV.Fieldset,{legend:"Control checkbox state",required:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{label:"Toggle all",...register("option-a")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{name:"option-b",label:"Controlled checkbox",checked:optionA})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Buttons,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.$$,{type:"submit",onClick:()=>{},children:"Submit"})})]})},Basic=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.lV.Checkbox,{...args});Basic.args={label:"Checkbox",indeterminate:!1,readOnly:!1,disabled:!1},Basic.argTypes={label:{description:"Checkbox label",control:{type:"text"}},indeterminate:{description:"Checkbox is indeterminate or  not",control:{type:"boolean"}},checked:{description:"Checkbox is checked or not",control:{type:"boolean"}},readOnly:{description:"Checkbox is read only or not",control:{type:"boolean"}},disabled:{description:"Checkbox is disabled or not",control:{type:"boolean"}}},CheckboxFillStates.parameters={...CheckboxFillStates.parameters,docs:{...CheckboxFillStates.parameters?.docs,source:{originalSource:'() => <StackVertical gap="M" justify="stretch" align="stretch">\n        <Form.Checkbox name="checkbox" label="Checkbox" />\n        <Form.Checkbox name="checkbox" label="Indeterminate Checkbox" indeterminate />\n        <Form.Checkbox name="checkbox" label="Checked Checkbox" checked />\n    </StackVertical>',...CheckboxFillStates.parameters?.docs?.source}}},CheckboxFillStatesDisabled.parameters={...CheckboxFillStatesDisabled.parameters,docs:{...CheckboxFillStatesDisabled.parameters?.docs,source:{originalSource:'() => <StackVertical gap="M" justify="stretch" align="stretch">\n        <Form.Checkbox name="checkbox" label="Checkbox" disabled />\n        <Form.Checkbox name="checkbox" label="Indeterminate Checkbox" indeterminate disabled />\n        <Form.Checkbox name="checkbox" label="Checked Checkbox" checked disabled />\n    </StackVertical>',...CheckboxFillStatesDisabled.parameters?.docs?.source}}},CheckboxFillStatesReadonly.parameters={...CheckboxFillStatesReadonly.parameters,docs:{...CheckboxFillStatesReadonly.parameters?.docs,source:{originalSource:'() => <StackVertical gap="M" justify="stretch" align="stretch">\n        <Form.Checkbox name="checkbox" label="Checkbox" readOnly />\n        <Form.Checkbox name="checkbox" label="Indeterminate Checkbox" indeterminate readOnly />\n        <Form.Checkbox name="checkbox" label="Checked Checkbox" checked readOnly />\n    </StackVertical>',...CheckboxFillStatesReadonly.parameters?.docs?.source}}},CheckboxReactHooksForm.parameters={...CheckboxReactHooksForm.parameters,docs:{...CheckboxReactHooksForm.parameters?.docs,source:{originalSource:'() => {\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [formData, setFormData] = useState<Inputs>();\n  return <Form onSubmit={handleSubmit(setFormData)}>\n            {formData && <InlineMessageInformation title="Form data" description={JSON.stringify(formData, null, 2)} withBackground />}\n            <Form.Fieldset legend="Pick one or multiple options" required>\n                <Form.Checkbox label="Option A" {...register(\'option-a\')} />\n                <Form.Checkbox label="Option B" checked {...register(\'option-b\')} />\n            </Form.Fieldset>\n            <Form.Fieldset legend="Pick one or multiple inline options" required>\n                <Form.Row>\n                    <Form.Checkbox label="Inline option A" {...register(\'inline-option-a\')} />\n                    <Form.Checkbox label="Inline option B" checked {...register(\'inline-option-b\')} />\n                </Form.Row>\n            </Form.Fieldset>\n            <Form.Fieldset legend="Read only are sent" required readOnly>\n                <Form.Checkbox label="Option C" {...register(\'option-c\')} />\n                <Form.Checkbox label="Option D" checked {...register(\'option-d\')} />\n            </Form.Fieldset>\n            <Form.Fieldset legend="Disabled are not sent" required disabled>\n                {/* @see https://github.com/react-hook-form/react-hook-form/issues/6690 */}\n                <Form.Checkbox label="Option E" {...register(\'option-e\', {\n        disabled: true\n      })} />\n                <Form.Checkbox label="Option F" checked {...register(\'option-f\', {\n        disabled: true\n      })} />\n            </Form.Fieldset>\n            <Form.Buttons>\n                <ButtonPrimary type="submit" onClick={() => {}}>\n                    Submit\n                </ButtonPrimary>\n            </Form.Buttons>\n        </Form>;\n}',...CheckboxReactHooksForm.parameters?.docs?.source}}},CheckboxControlled.parameters={...CheckboxControlled.parameters,docs:{...CheckboxControlled.parameters?.docs,source:{originalSource:'() => {\n  const {\n    register,\n    watch\n  } = useForm();\n  const optionA = watch(\'option-a\');\n  return <Form>\n            <Form.Fieldset legend="Control checkbox state" required>\n                <Form.Checkbox label="Toggle all" {...register(\'option-a\')} />\n                <Form.Checkbox name="option-b" label="Controlled checkbox" checked={optionA} />\n            </Form.Fieldset>\n            <Form.Buttons>\n                <ButtonPrimary type="submit" onClick={() => {}}>\n                    Submit\n                </ButtonPrimary>\n            </Form.Buttons>\n        </Form>;\n}',...CheckboxControlled.parameters?.docs?.source}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(args: any) => <Form.Checkbox {...args} />",...Basic.parameters?.docs?.source}}};const __namedExportsOrder=["CheckboxFillStates","CheckboxFillStatesDisabled","CheckboxFillStatesReadonly","CheckboxReactHooksForm","CheckboxControlled","Basic"]}}]);