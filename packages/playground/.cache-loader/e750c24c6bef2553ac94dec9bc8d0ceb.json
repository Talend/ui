{"remainingRequest":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/fields/MultiSelect/MultiSelect.component.js","dependencies":[{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/fields/MultiSelect/MultiSelect.component.js","mtime":1564558237589},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/cache-loader/dist/cjs.js","mtime":1581407659958},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js","mtime":1581407659368}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport MultiSelect from '@talend/react-components/lib/MultiSelect';\nimport FieldTemplate from '@talend/react-forms/lib/UIForm/fields/FieldTemplate';\nimport { generateDescriptionId, generateErrorId } from '@talend/react-forms/lib/UIForm/Message/generateId';\nimport callTrigger from '@talend/react-forms/lib/UIForm/trigger';\n\nvar MultiSelectField =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultiSelectField, _React$Component);\n\n  function MultiSelectField(props) {\n    var _this;\n\n    _classCallCheck(this, MultiSelectField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiSelectField).call(this, props));\n    _this.state = {\n      selected: props.value\n    };\n    _this.onTrigger = _this.onTrigger.bind(_assertThisInitialized(_this));\n    _this.onTriggerResult = _this.onTriggerResult.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.getTitleMap = _this.getTitleMap.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MultiSelectField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onTrigger({\n        type: 'didMount'\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.value !== this.props.value) {\n        // reset selected\n        this.setState({\n          selected: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: \"onTrigger\",\n    value: function onTrigger(event) {\n      var _this2 = this;\n\n      callTrigger(event, {\n        eventNames: [event.type],\n        triggersDefinitions: this.props.schema.triggers,\n        onTrigger: this.onTriggerResult,\n        onLoading: function onLoading(isLoading) {\n          return _this2.setState({\n            isLoading: isLoading\n          });\n        },\n        onResponse: function onResponse(data) {\n          return _this2.setState(data);\n        }\n      });\n    }\n  }, {\n    key: \"onTriggerResult\",\n    value: function onTriggerResult(event, trigger) {\n      return this.props.onTrigger(event, {\n        trigger: trigger,\n        schema: this.props.schema,\n        errors: this.props.errors,\n        properties: this.props.properties\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event, selected) {\n      var payload = {\n        schema: _objectSpread({}, this.props.schema, {\n          titleMap: this.getTitleMap()\n        }),\n        value: selected\n      };\n      this.props.onChange(event, payload);\n      this.props.onFinish(event, payload);\n    }\n  }, {\n    key: \"getTitleMap\",\n    value: function getTitleMap() {\n      if (this.state.titleMap) {\n        return this.state.titleMap;\n      }\n\n      var titleMap = this.props.schema.titleMap;\n\n      if (titleMap && Object.keys(titleMap).length > 0) {\n        return titleMap;\n      }\n\n      var _this$props$value = this.props.value,\n          value = _this$props$value === void 0 ? [] : _this$props$value;\n      var names = this.props.resolveName(value);\n      return value.map(function (nextVal, index) {\n        return {\n          name: names[index],\n          value: nextVal\n        };\n      });\n    }\n  }, {\n    key: \"getChildrenErrorMessage\",\n    value: function getChildrenErrorMessage() {\n      var errors = this.props.errors.errors;\n\n      if (!errors || errors.length === 0) {\n        return undefined;\n      }\n\n      var key = this.props.schema.key.toString();\n      return Object.entries(errors).filter(function (entry) {\n        return entry[0].startsWith(key);\n      }).map(function (entry) {\n        return entry[1];\n      }).join(', ');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          isValid = _this$props.isValid,\n          errorMessage = _this$props.errorMessage,\n          schema = _this$props.schema;\n      var descriptionId = generateDescriptionId(id);\n      var errorId = generateErrorId(id);\n      var errorMsg = errorMessage || this.getChildrenErrorMessage();\n      var isDeepValid = isValid && !errorMsg;\n      return React.createElement(FieldTemplate, {\n        description: schema.description,\n        descriptionId: descriptionId,\n        errorId: errorId,\n        errorMessage: errorMsg,\n        id: id,\n        isValid: isDeepValid,\n        label: schema.title,\n        required: schema.required\n      }, React.createElement(MultiSelect, {\n        id: id,\n        autoFocus: schema.autoFocus,\n        disabled: schema.disabled,\n        required: schema.required,\n        placeholder: schema.placeholder,\n        readOnly: schema.readOnly,\n        restricted: schema.restricted,\n        onBlur: this.onTrigger,\n        onChange: this.onChange,\n        onFocus: this.onTrigger,\n        options: this.getTitleMap(),\n        selected: this.props.value,\n        isLoading: this.state.isLoading\n      }));\n    }\n  }]);\n\n  return MultiSelectField;\n}(React.Component);\n\nexport { MultiSelectField as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  MultiSelectField.propTypes = {\n    id: PropTypes.string,\n    isValid: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    errors: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    onFinish: PropTypes.func.isRequired,\n    onTrigger: PropTypes.func.isRequired,\n    properties: PropTypes.object,\n    resolveName: PropTypes.func,\n    schema: PropTypes.shape({\n      autoFocus: PropTypes.bool,\n      description: PropTypes.string,\n      disabled: PropTypes.bool,\n      key: PropTypes.array,\n      placeholder: PropTypes.string,\n      readOnly: PropTypes.bool,\n      restricted: PropTypes.bool,\n      title: PropTypes.string,\n      titleMap: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired\n      })),\n      triggers: PropTypes.arrayOf(PropTypes.shape({\n        onEvent: PropTypes.string\n      }))\n    }),\n    value: PropTypes.arrayOf(PropTypes.string)\n  };\n}\n\nMultiSelectField.defaultProps = {\n  isValid: true,\n  schema: {},\n  value: [],\n  resolveName: function resolveName(value) {\n    return value;\n  }\n};",{"version":3,"sources":["/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/fields/MultiSelect/MultiSelect.component.js"],"names":["PropTypes","React","MultiSelect","FieldTemplate","generateDescriptionId","generateErrorId","callTrigger","MultiSelectField","props","state","selected","value","onTrigger","bind","onTriggerResult","onChange","getTitleMap","type","nextProps","setState","event","eventNames","triggersDefinitions","schema","triggers","onLoading","isLoading","onResponse","data","trigger","errors","properties","payload","titleMap","onFinish","Object","keys","length","names","resolveName","map","nextVal","index","name","undefined","key","toString","entries","filter","entry","startsWith","join","id","isValid","errorMessage","descriptionId","errorId","errorMsg","getChildrenErrorMessage","isDeepValid","description","title","required","autoFocus","disabled","placeholder","readOnly","restricted","Component","process","env","NODE_ENV","propTypes","string","bool","object","func","isRequired","shape","array","arrayOf","onEvent","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport MultiSelect from '@talend/react-components/lib/MultiSelect';\nimport FieldTemplate from '@talend/react-forms/lib/UIForm/fields/FieldTemplate';\nimport {\n\tgenerateDescriptionId,\n\tgenerateErrorId,\n} from '@talend/react-forms/lib/UIForm/Message/generateId';\nimport callTrigger from '@talend/react-forms/lib/UIForm/trigger';\n\nexport default class MultiSelectField extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { selected: props.value };\n\t\tthis.onTrigger = this.onTrigger.bind(this);\n\t\tthis.onTriggerResult = this.onTriggerResult.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.getTitleMap = this.getTitleMap.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onTrigger({ type: 'didMount' });\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.value !== this.props.value) {\n\t\t\t// reset selected\n\t\t\tthis.setState({ selected: nextProps.value });\n\t\t}\n\t}\n\n\tonTrigger(event) {\n\t\tcallTrigger(event, {\n\t\t\teventNames: [event.type],\n\t\t\ttriggersDefinitions: this.props.schema.triggers,\n\t\t\tonTrigger: this.onTriggerResult,\n\t\t\tonLoading: isLoading => this.setState({ isLoading }),\n\t\t\tonResponse: data => this.setState(data),\n\t\t});\n\t}\n\tonTriggerResult(event, trigger) {\n\t\treturn this.props.onTrigger(event, {\n\t\t\ttrigger,\n\t\t\tschema: this.props.schema,\n\t\t\terrors: this.props.errors,\n\t\t\tproperties: this.props.properties,\n\t\t});\n\t}\n\n\tonChange(event, selected) {\n\t\tconst payload = {\n\t\t\tschema: { ...this.props.schema, titleMap: this.getTitleMap() },\n\t\t\tvalue: selected,\n\t\t};\n\t\tthis.props.onChange(event, payload);\n\t\tthis.props.onFinish(event, payload);\n\t}\n\n\tgetTitleMap() {\n\t\tif (this.state.titleMap) {\n\t\t\treturn this.state.titleMap;\n\t\t}\n\n\t\tconst { titleMap } = this.props.schema;\n\t\tif (titleMap && Object.keys(titleMap).length > 0) {\n\t\t\treturn titleMap;\n\t\t}\n\n\t\tconst { value = [] } = this.props;\n\t\tconst names = this.props.resolveName(value);\n\t\treturn value.map((nextVal, index) => ({\n\t\t\tname: names[index],\n\t\t\tvalue: nextVal,\n\t\t}));\n\t}\n\n\tgetChildrenErrorMessage() {\n\t\tconst { errors } = this.props.errors;\n\t\tif (!errors || errors.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst key = this.props.schema.key.toString();\n\t\treturn Object.entries(errors)\n\t\t\t.filter(entry => entry[0].startsWith(key))\n\t\t\t.map(entry => entry[1])\n\t\t\t.join(', ');\n\t}\n\n\trender() {\n\t\tconst { id, isValid, errorMessage, schema } = this.props;\n\t\tconst descriptionId = generateDescriptionId(id);\n\t\tconst errorId = generateErrorId(id);\n\t\tconst errorMsg = errorMessage || this.getChildrenErrorMessage();\n\t\tconst isDeepValid = isValid && !errorMsg;\n\n\t\treturn (\n\t\t\t<FieldTemplate\n\t\t\t\tdescription={schema.description}\n\t\t\t\tdescriptionId={descriptionId}\n\t\t\t\terrorId={errorId}\n\t\t\t\terrorMessage={errorMsg}\n\t\t\t\tid={id}\n\t\t\t\tisValid={isDeepValid}\n\t\t\t\tlabel={schema.title}\n\t\t\t\trequired={schema.required}\n\t\t\t>\n\t\t\t\t<MultiSelect\n\t\t\t\t\tid={id}\n\t\t\t\t\tautoFocus={schema.autoFocus}\n\t\t\t\t\tdisabled={schema.disabled}\n\t\t\t\t\trequired={schema.required}\n\t\t\t\t\tplaceholder={schema.placeholder}\n\t\t\t\t\treadOnly={schema.readOnly}\n\t\t\t\t\trestricted={schema.restricted}\n\t\t\t\t\tonBlur={this.onTrigger}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tonFocus={this.onTrigger}\n\t\t\t\t\toptions={this.getTitleMap()}\n\t\t\t\t\tselected={this.props.value}\n\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t/>\n\t\t\t</FieldTemplate>\n\t\t);\n\t}\n}\n\nif (process.env.NODE_ENV !== 'production') {\n\tMultiSelectField.propTypes = {\n\t\tid: PropTypes.string,\n\t\tisValid: PropTypes.bool,\n\t\terrorMessage: PropTypes.string,\n\t\terrors: PropTypes.object,\n\t\tonChange: PropTypes.func.isRequired,\n\t\tonFinish: PropTypes.func.isRequired,\n\t\tonTrigger: PropTypes.func.isRequired,\n\t\tproperties: PropTypes.object,\n\t\tresolveName: PropTypes.func,\n\t\tschema: PropTypes.shape({\n\t\t\tautoFocus: PropTypes.bool,\n\t\t\tdescription: PropTypes.string,\n\t\t\tdisabled: PropTypes.bool,\n\t\t\tkey: PropTypes.array,\n\t\t\tplaceholder: PropTypes.string,\n\t\t\treadOnly: PropTypes.bool,\n\t\t\trestricted: PropTypes.bool,\n\t\t\ttitle: PropTypes.string,\n\t\t\ttitleMap: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tname: PropTypes.string.isRequired,\n\t\t\t\t\tvalue: PropTypes.string.isRequired,\n\t\t\t\t}),\n\t\t\t),\n\t\t\ttriggers: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tonEvent: PropTypes.string,\n\t\t\t\t}),\n\t\t\t),\n\t\t}),\n\t\tvalue: PropTypes.arrayOf(PropTypes.string),\n\t};\n}\n\nMultiSelectField.defaultProps = {\n\tisValid: true,\n\tschema: {},\n\tvalue: [],\n\tresolveName: value => value,\n};\n"]}]}