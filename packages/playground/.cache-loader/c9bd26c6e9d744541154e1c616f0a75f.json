{"remainingRequest":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/kit/defaultRegistry.js","dependencies":[{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/kit/defaultRegistry.js","mtime":1569577120558},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/cache-loader/dist/cjs.js","mtime":1581407659958},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js","mtime":1581407659368}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n *  Copyright (C) 2006-2018 Talend Inc. - www.talend.com\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport clonedeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport { removeError, addError, getError } from '@talend/react-forms/lib/UIForm/utils/errors';\nimport { mutateValue } from '@talend/react-forms/lib/UIForm/utils/properties';\n/**\n * Change errors on the target input\n * Add the error if trigger results in an error\n * Remove error if trigger has no error\n * @param errors The form errors map\n * @param schema The input schema\n * @param errorMessage The trigger error message\n * @returns {object} The new errors map\n */\n\nfunction getNewErrors(errors, schema, errorMessage) {\n  if (errorMessage) {\n    return addError(errors, schema, errorMessage);\n  } else if (getError(errors, schema) !== undefined) {\n    return removeError(errors, schema);\n  }\n\n  return errors;\n}\n/**\n * Add or Remove the input error depending on the trigger result\n * @param schema The input schema\n * @param body The trigger response body\n * @param errors The form errors map\n * @returns {{errors: *}} The new errors map\n */\n\n\nfunction validation(_ref) {\n  var schema = _ref.schema,\n      body = _ref.body,\n      _ref$errors = _ref.errors,\n      errors = _ref$errors === void 0 ? {} : _ref$errors;\n  var errorMessage = body.status === 'KO' ? body.comment : null;\n  return {\n    errors: getNewErrors(errors, schema, errorMessage)\n  };\n}\n\nfunction schemaReducer(acc, entry) {\n  // eslint-disable-next-line no-param-reassign\n  acc[entry.name] = entry.type;\n  return acc;\n}\n/**\n * Insert new form data\n * @param schema The input schema\n * @param body The trigger response body\n * @param properties The form data\n * @param trigger The trigger configuration\n * @param errors The form errors map\n * @returns {{properties: *, errors: Object}} The properties and errors map\n */\n\n\nfunction updateSchema(_ref2) {\n  var schema = _ref2.schema,\n      body = _ref2.body,\n      properties = _ref2.properties,\n      trigger = _ref2.trigger,\n      errors = _ref2.errors;\n  var newErrors = getNewErrors(errors, schema, body.error);\n  var newProperties = properties;\n\n  if (body.entries && trigger.options && trigger.options.length !== 0) {\n    newProperties = clonedeep(properties);\n    trigger.options.forEach(function (option) {\n      var splitted = option.path.split('.');\n      var key = splitted[splitted.length - 1];\n      var parent = get(newProperties, splitted.slice(0, -1).join('.'));\n\n      if (!parent || _typeof(parent) !== 'object') {\n        return;\n      }\n\n      if (option.type === 'array') {\n        parent[key] = body.entries.map(function (entry) {\n          return entry.name;\n        });\n      } else {\n        parent[key] = body.entries.reduce(schemaReducer, {});\n      }\n    });\n  }\n\n  return {\n    properties: newProperties,\n    errors: newErrors\n  };\n}\n\nfunction suggestions(_ref3) {\n  var body = _ref3.body;\n  // intended to be overriden by apps\n  return {\n    titleMap: (body.items || []).map(function (item) {\n      return {\n        name: item.label,\n        value: item.id\n      };\n    })\n  };\n}\n/**\n * extract from error object valuable information for the user\n * We have two cases:\n * - js error object: https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Error\n * - message sent from the backend: http 520 with description and may be code.\n * @param {Object} error the error object\n * @returns {string} the message\n */\n\n\nfunction extractErrorMessage(error) {\n  if (error.code && error.description) {\n    return \"\".concat(error.code !== 'ACTION_ERROR' ? \"[\".concat(error.code, \"]\") : '', \" \").concat(error.description);\n  } else if (error.description) {\n    return error.description;\n  } // in case of JS error message (fetch fails and others)\n\n\n  if (typeof error.message === 'string') {\n    return error.message;\n  } // fallback don't know what happens\n\n\n  return JSON.stringify(error);\n}\n/**\n * Update errors status\n * @param {Object} options with { errors, error, schema }\n * @return {Object} { errors } status\n */\n\n\nfunction onError(_ref4) {\n  var errors = _ref4.errors,\n      error = _ref4.error,\n      schema = _ref4.schema;\n  return {\n    errors: getNewErrors(errors, schema, extractErrorMessage(error))\n  };\n}\n/**\n * Update the content of the properties\n * @param body is the new value\n * @param trigger the trigger that call it\n * @example\nconst trigger = {\n\t\"action\":\"guessMe\",\n\t\"family\":\"test\",\n\t\"options\":[\n\t\t{\n\t\t\t\"path\":\"root.updatable_config\",\n\t\t\t\"type\":\"object\" // or \"string\"\n\t\t}\n\t],\n\t\"parameters\":[\n\t\t{\n\t\t\t\"key\":\"arg0.name\",\n\t\t\t\"path\":\"root.updatable_config.name\"\n\t\t}\n\t],\n\t\"type\":\"update\"\n};\n */\n\n\nfunction updateProperties(_ref5) {\n  var body = _ref5.body,\n      trigger = _ref5.trigger,\n      properties = _ref5.properties;\n  var targetPath = trigger.options[0].path;\n  var schema = {\n    key: targetPath.split('.')\n  };\n  var value = trigger.options[0].type === 'object' ? body : body.data;\n  return {\n    properties: mutateValue(properties, schema, value)\n  };\n}\n\nexport default {\n  // dynamic_values, server side\n  healthcheck: validation,\n  schema: updateSchema,\n  update: updateProperties,\n  validation: validation,\n  suggestions: suggestions,\n  error: onError\n};",{"version":3,"sources":["/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/kit/defaultRegistry.js"],"names":["clonedeep","get","removeError","addError","getError","mutateValue","getNewErrors","errors","schema","errorMessage","undefined","validation","body","status","comment","schemaReducer","acc","entry","name","type","updateSchema","properties","trigger","newErrors","error","newProperties","entries","options","length","forEach","option","splitted","path","split","key","parent","slice","join","map","reduce","suggestions","titleMap","items","item","label","value","id","extractErrorMessage","code","description","message","JSON","stringify","onError","updateProperties","targetPath","data","healthcheck","update"],"mappings":"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","sourcesContent":["/**\n *  Copyright (C) 2006-2018 Talend Inc. - www.talend.com\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport clonedeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport { removeError, addError, getError } from '@talend/react-forms/lib/UIForm/utils/errors';\nimport { mutateValue } from '@talend/react-forms/lib/UIForm/utils/properties';\n\n/**\n * Change errors on the target input\n * Add the error if trigger results in an error\n * Remove error if trigger has no error\n * @param errors The form errors map\n * @param schema The input schema\n * @param errorMessage The trigger error message\n * @returns {object} The new errors map\n */\nfunction getNewErrors(errors, schema, errorMessage) {\n\tif (errorMessage) {\n\t\treturn addError(errors, schema, errorMessage);\n\t} else if (getError(errors, schema) !== undefined) {\n\t\treturn removeError(errors, schema);\n\t}\n\treturn errors;\n}\n\n/**\n * Add or Remove the input error depending on the trigger result\n * @param schema The input schema\n * @param body The trigger response body\n * @param errors The form errors map\n * @returns {{errors: *}} The new errors map\n */\nfunction validation({ schema, body, errors = {} }) {\n\tconst errorMessage = body.status === 'KO' ? body.comment : null;\n\treturn { errors: getNewErrors(errors, schema, errorMessage) };\n}\n\nfunction schemaReducer(acc, entry) {\n\t// eslint-disable-next-line no-param-reassign\n\tacc[entry.name] = entry.type;\n\treturn acc;\n}\n\n/**\n * Insert new form data\n * @param schema The input schema\n * @param body The trigger response body\n * @param properties The form data\n * @param trigger The trigger configuration\n * @param errors The form errors map\n * @returns {{properties: *, errors: Object}} The properties and errors map\n */\nfunction updateSchema({ schema, body, properties, trigger, errors }) {\n\tconst newErrors = getNewErrors(errors, schema, body.error);\n\tlet newProperties = properties;\n\n\tif (body.entries && trigger.options && trigger.options.length !== 0) {\n\t\tnewProperties = clonedeep(properties);\n\t\ttrigger.options.forEach(option => {\n\t\t\tconst splitted = option.path.split('.');\n\t\t\tconst key = splitted[splitted.length - 1];\n\t\t\tconst parent = get(newProperties, splitted.slice(0, -1).join('.'));\n\t\t\tif (!parent || typeof parent !== 'object') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (option.type === 'array') {\n\t\t\t\tparent[key] = body.entries.map(entry => entry.name);\n\t\t\t} else {\n\t\t\t\tparent[key] = body.entries.reduce(schemaReducer, {});\n\t\t\t}\n\t\t});\n\t}\n\treturn {\n\t\tproperties: newProperties,\n\t\terrors: newErrors,\n\t};\n}\n\nfunction suggestions({ body }) {\n\t// intended to be overriden by apps\n\treturn { titleMap: (body.items || []).map(item => ({ name: item.label, value: item.id })) };\n}\n\n/**\n * extract from error object valuable information for the user\n * We have two cases:\n * - js error object: https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Error\n * - message sent from the backend: http 520 with description and may be code.\n * @param {Object} error the error object\n * @returns {string} the message\n */\nfunction extractErrorMessage(error) {\n\tif (error.code && error.description) {\n\t\treturn `${error.code !== 'ACTION_ERROR' ? `[${error.code}]` : ''} ${error.description}`;\n\t} else if (error.description) {\n\t\treturn error.description;\n\t}\n\t// in case of JS error message (fetch fails and others)\n\tif (typeof error.message === 'string') {\n\t\treturn error.message;\n\t}\n\t// fallback don't know what happens\n\treturn JSON.stringify(error);\n}\n\n/**\n * Update errors status\n * @param {Object} options with { errors, error, schema }\n * @return {Object} { errors } status\n */\nfunction onError({ errors, error, schema }) {\n\treturn { errors: getNewErrors(errors, schema, extractErrorMessage(error)) };\n}\n\n/**\n * Update the content of the properties\n * @param body is the new value\n * @param trigger the trigger that call it\n * @example\nconst trigger = {\n\t\"action\":\"guessMe\",\n\t\"family\":\"test\",\n\t\"options\":[\n\t\t{\n\t\t\t\"path\":\"root.updatable_config\",\n\t\t\t\"type\":\"object\" // or \"string\"\n\t\t}\n\t],\n\t\"parameters\":[\n\t\t{\n\t\t\t\"key\":\"arg0.name\",\n\t\t\t\"path\":\"root.updatable_config.name\"\n\t\t}\n\t],\n\t\"type\":\"update\"\n};\n */\nfunction updateProperties({ body, trigger, properties }) {\n\tconst targetPath = trigger.options[0].path;\n\tconst schema = { key: targetPath.split('.') };\n\tconst value = trigger.options[0].type === 'object' ? body : body.data;\n\treturn {\n\t\tproperties: mutateValue(properties, schema, value),\n\t};\n}\n\nexport default {\n\t// dynamic_values, server side\n\thealthcheck: validation,\n\tschema: updateSchema,\n\tupdate: updateProperties,\n\tvalidation,\n\tsuggestions,\n\terror: onError,\n};\n"]}]}