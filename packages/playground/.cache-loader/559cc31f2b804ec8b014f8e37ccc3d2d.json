{"remainingRequest":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/ComponentForm.component.js","dependencies":[{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/ComponentForm.component.js","mtime":1581407177582},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/cache-loader/dist/cjs.js","mtime":1581407659958},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js","mtime":1581407659368}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cmf, { cmfConnect } from '@talend/react-cmf';\nimport Form from '@talend/react-forms';\nimport { getValue } from '@talend/react-forms/lib/UIForm/utils/properties';\nimport omit from 'lodash/omit';\nimport get from 'lodash/get';\nimport { Map } from 'immutable';\nimport memoizeOne from 'memoize-one';\nimport kit from './kit';\nimport tcompFieldsWidgets from './fields';\nvar TO_OMIT = ['definitionURL', 'uiSpecPath', 'submitURL', 'triggerULR', 'lang', 'customTriggers', 'dispatchOnChange'].concat(_toConsumableArray(cmfConnect.INJECTED_PROPS));\nexport var DEFAULT_STATE = new Map({\n  dirty: false,\n  initialState: {}\n});\n/**\n * Convert immutable object to js object\n */\n\nexport function toJS(immutableObject) {\n  if (!immutableObject) {\n    return null;\n  }\n\n  return immutableObject.toJS();\n}\n/**\n * Insert titleMap name for corresponding value\n * Its key is prefixed by '$', this means that it's an internal property\n * @param schema The schema of the trigger input\n * @param properties All the form properties\n * @param value The input value\n */\n\nexport function resolveNameForTitleMap(_ref) {\n  var schema = _ref.schema,\n      properties = _ref.properties,\n      value = _ref.value;\n\n  if (!schema.titleMap) {\n    return;\n  } // Here we add a field side by side with the value\n  // to keep the title associated to the value\n\n\n  var valueIsArray = Array.isArray(value);\n  var uniformValue = valueIsArray ? value : [value];\n  var names = uniformValue.map(function (nextValue) {\n    return schema.titleMap.find(function (titleMap) {\n      return titleMap.value === nextValue;\n    });\n  }).map(function (entry) {\n    return entry && entry.name;\n  });\n  var parentKey = schema.key.slice();\n  var key = parentKey.pop();\n  var nameKey = \"$\".concat(key, \"_name\");\n  var parentValue = getValue(properties, {\n    key: parentKey\n  });\n\n  if (names.some(function (name) {\n    return name !== undefined;\n  })) {\n    parentValue[nameKey] = valueIsArray ? names : names[0];\n  } else {\n    delete parentValue[nameKey];\n  }\n}\nexport var TCompForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TCompForm, _React$Component);\n\n  function TCompForm(props) {\n    var _this;\n\n    _classCallCheck(this, TCompForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TCompForm).call(this, props));\n    _this.state = {};\n    _this.onTrigger = _this.onTrigger.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.onReset = _this.onReset.bind(_assertThisInitialized(_this));\n    _this.getUISpec = _this.getUISpec.bind(_assertThisInitialized(_this));\n    _this.setupTrigger = _this.setupTrigger.bind(_assertThisInitialized(_this));\n\n    _this.setupTrigger(props);\n\n    _this.getMemoizedJsonSchema = memoizeOne(toJS);\n    _this.getMemoizedUiSchema = memoizeOne(toJS);\n    _this.getMemoizedInitialState = memoizeOne(toJS);\n    return _this;\n  }\n\n  _createClass(TCompForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.state.get('properties') !== nextProps.state.get('properties')) {\n        this.setState({\n          properties: nextProps.state.get('properties').toJS()\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.triggerURL !== this.props.triggerURL || prevProps.customTriggers !== this.props.customTriggers) {\n        this.setupTrigger(this.props);\n      }\n\n      if (this.props.definitionURL !== prevProps.definitionURL) {\n        this.props.dispatch(_objectSpread({\n          type: TCompForm.ON_DEFINITION_URL_CHANGED\n        }, this.props));\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_, payload) {\n      if (!this.props.state.get('dirty')) {\n        this.props.setState({\n          dirty: true\n        });\n      }\n\n      resolveNameForTitleMap(payload);\n      this.setState({\n        properties: payload.properties\n      });\n\n      if (this.props.dispatchOnChange) {\n        this.props.dispatch(_objectSpread({\n          type: TCompForm.ON_CHANGE,\n          component: TCompForm.displayName,\n          componentId: this.props.componentId\n        }, payload));\n      }\n    }\n  }, {\n    key: \"onTrigger\",\n    value: function onTrigger(event, payload) {\n      var _this2 = this;\n\n      this.props.dispatch(_objectSpread({\n        type: TCompForm.ON_TRIGGER_BEGIN\n      }, payload)); // Trigger definitions from tacokit can precise the fields that are impacted by the trigger.\n      // Those fields are the jsonSchema path.\n      // trigger = { options: [{ path: 'user.firstname' }, { path: 'user.lastname' }] }\n\n      if (Array.isArray(get(payload, 'trigger.options'))) {\n        var updating = payload.trigger.options.map(function (op) {\n          return op.path;\n        });\n        this.setState({\n          updating: updating\n        });\n      }\n\n      return this.trigger(event, payload).then(function (data) {\n        _this2.props.dispatch(_objectSpread({\n          type: TCompForm.ON_TRIGGER_END\n        }, payload));\n\n        if (data.jsonSchema || data.uiSchema) {\n          _this2.props.setState(data);\n        }\n\n        return data;\n      }).finally(function () {\n        _this2.setState({\n          updating: []\n        });\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(_, properties) {\n      this.props.dispatch({\n        type: TCompForm.ON_SUBMIT,\n        component: TCompForm.displayName,\n        componentId: this.props.componentId,\n        properties: properties\n      });\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      var _this3 = this;\n\n      this.props.setState(function (prev) {\n        return prev.state.set('jsonSchema', _this3.props.state.getIn(['initialState', 'jsonSchema'])).set('uiSchema', _this3.props.state.getIn(['initialState', 'uiSchema'])).set('properties', _this3.props.state.getIn(['initialState', 'properties'])).set('dirty', false);\n      });\n      this.setState({\n        properties: this.props.state.getIn(['initialState', 'properties']).toJS(),\n        dirty: false\n      });\n    }\n  }, {\n    key: \"setupTrigger\",\n    value: function setupTrigger(props) {\n      var config = cmf.sagas.http.getDefaultConfig() || {};\n      this.trigger = kit.createTriggers({\n        url: props.triggerURL,\n        customRegistry: props.customTriggers,\n        headers: config.headers,\n        lang: props.lang,\n        security: {\n          CSRFTokenCookieKey: props.CSRFTokenCookieKey,\n          CSRFTokenHeaderKey: props.CSRFTokenHeaderKey\n        }\n      });\n    }\n  }, {\n    key: \"getUISpec\",\n    value: function getUISpec() {\n      return {\n        properties: this.state.properties,\n        jsonSchema: this.getMemoizedJsonSchema(this.props.state.get('jsonSchema')),\n        uiSchema: this.getMemoizedUiSchema(this.props.state.get('uiSchema'))\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var uiSpecs = this.getUISpec();\n\n      if (!uiSpecs.jsonSchema) {\n        var response = this.props.state.get('response');\n\n        if (response) {\n          return React.createElement(\"p\", {\n            className: \"danger\"\n          }, response.get('statusText'));\n        }\n\n        return React.createElement(Form, {\n          loading: true\n        });\n      }\n\n      var props = _objectSpread({}, omit(this.props, TO_OMIT), {\n        data: uiSpecs,\n        initialData: this.getMemoizedInitialState(this.props.state.get('initialState')),\n        onTrigger: this.onTrigger,\n        onChange: this.onChange,\n        onSubmit: this.onSubmit,\n        onReset: this.onReset,\n        widgets: _objectSpread({}, this.props.widgets, tcompFieldsWidgets),\n        updating: this.state.updating\n      });\n\n      return React.createElement(Form, props);\n    }\n  }]);\n\n  return TCompForm;\n}(React.Component);\nTCompForm.ON_CHANGE = 'TCOMP_FORM_CHANGE';\nTCompForm.ON_SUBMIT = 'TCOMP_FORM_SUBMIT';\nTCompForm.ON_SUBMIT_SUCCEED = 'TCOMP_FORM_SUBMIT_SUCCEED';\nTCompForm.ON_SUBMIT_FAILED = 'TCOMP_FORM_SUBMIT_FAILED';\nTCompForm.ON_TRIGGER_BEGIN = 'TCOMP_FORM_TRIGGER_BEGIN';\nTCompForm.ON_TRIGGER_END = 'TCOMP_FORM_TRIGGER_END';\nTCompForm.ON_DEFINITION_URL_CHANGED = 'TCOMP_FORM_DEFINITION_URL_CHANGE';\nTCompForm.displayName = 'ComponentForm';\nTCompForm.propTypes = _objectSpread({}, cmfConnect.propTypes, {\n  definitionURL: PropTypes.string.isRequired,\n  triggerURL: PropTypes.string.isRequired,\n  submitURL: PropTypes.string,\n  uiSpecPath: PropTypes.string,\n  lang: PropTypes.string,\n  customTriggers: PropTypes.object,\n  dispatchOnChange: PropTypes.bool,\n  CSRFTokenCookieKey: PropTypes.string,\n  CSRFTokenHeaderKey: PropTypes.string\n});\nexport default cmfConnect({\n  defaultState: DEFAULT_STATE,\n  defaultProps: {\n    saga: 'ComponentForm#default'\n  },\n  omitCMFProps: true,\n  withComponentRegistry: true,\n  withDispatch: true,\n  withDispatchActionCreator: true,\n  withComponentId: true\n})(TCompForm);",{"version":3,"sources":["/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/ComponentForm.component.js"],"names":["React","PropTypes","cmf","cmfConnect","Form","getValue","omit","get","Map","memoizeOne","kit","tcompFieldsWidgets","TO_OMIT","INJECTED_PROPS","DEFAULT_STATE","dirty","initialState","toJS","immutableObject","resolveNameForTitleMap","schema","properties","value","titleMap","valueIsArray","Array","isArray","uniformValue","names","map","nextValue","find","entry","name","parentKey","key","slice","pop","nameKey","parentValue","some","undefined","TCompForm","props","state","onTrigger","bind","onChange","onSubmit","onReset","getUISpec","setupTrigger","getMemoizedJsonSchema","getMemoizedUiSchema","getMemoizedInitialState","nextProps","setState","prevProps","triggerURL","customTriggers","definitionURL","dispatch","type","ON_DEFINITION_URL_CHANGED","_","payload","dispatchOnChange","ON_CHANGE","component","displayName","componentId","event","ON_TRIGGER_BEGIN","updating","trigger","options","op","path","then","data","ON_TRIGGER_END","jsonSchema","uiSchema","finally","ON_SUBMIT","prev","set","getIn","config","sagas","http","getDefaultConfig","createTriggers","url","customRegistry","headers","lang","security","CSRFTokenCookieKey","CSRFTokenHeaderKey","uiSpecs","response","initialData","widgets","Component","ON_SUBMIT_SUCCEED","ON_SUBMIT_FAILED","propTypes","string","isRequired","submitURL","uiSpecPath","object","bool","defaultState","defaultProps","saga","omitCMFProps","withComponentRegistry","withDispatch","withDispatchActionCreator","withComponentId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cmf, { cmfConnect } from '@talend/react-cmf';\nimport Form from '@talend/react-forms';\nimport { getValue } from '@talend/react-forms/lib/UIForm/utils/properties';\nimport omit from 'lodash/omit';\nimport get from 'lodash/get';\nimport { Map } from 'immutable';\nimport memoizeOne from 'memoize-one';\nimport kit from './kit';\nimport tcompFieldsWidgets from './fields';\n\nconst TO_OMIT = [\n\t'definitionURL',\n\t'uiSpecPath',\n\t'submitURL',\n\t'triggerULR',\n\t'lang',\n\t'customTriggers',\n\t'dispatchOnChange',\n\t...cmfConnect.INJECTED_PROPS,\n];\n\nexport const DEFAULT_STATE = new Map({\n\tdirty: false,\n\tinitialState: {},\n});\n\n/**\n * Convert immutable object to js object\n */\nexport function toJS(immutableObject) {\n\tif (!immutableObject) {\n\t\treturn null;\n\t}\n\treturn immutableObject.toJS();\n}\n\n/**\n * Insert titleMap name for corresponding value\n * Its key is prefixed by '$', this means that it's an internal property\n * @param schema The schema of the trigger input\n * @param properties All the form properties\n * @param value The input value\n */\nexport function resolveNameForTitleMap({ schema, properties, value }) {\n\tif (!schema.titleMap) {\n\t\treturn;\n\t}\n\n\t// Here we add a field side by side with the value\n\t// to keep the title associated to the value\n\tconst valueIsArray = Array.isArray(value);\n\tconst uniformValue = valueIsArray ? value : [value];\n\n\tconst names = uniformValue\n\t\t.map(nextValue => schema.titleMap.find(titleMap => titleMap.value === nextValue))\n\t\t.map(entry => entry && entry.name);\n\n\tconst parentKey = schema.key.slice();\n\tconst key = parentKey.pop();\n\tconst nameKey = `$${key}_name`;\n\tconst parentValue = getValue(properties, { key: parentKey });\n\n\tif (names.some(name => name !== undefined)) {\n\t\tparentValue[nameKey] = valueIsArray ? names : names[0];\n\t} else {\n\t\tdelete parentValue[nameKey];\n\t}\n}\n\nexport class TCompForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.onTrigger = this.onTrigger.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\tthis.onReset = this.onReset.bind(this);\n\t\tthis.getUISpec = this.getUISpec.bind(this);\n\t\tthis.setupTrigger = this.setupTrigger.bind(this);\n\t\tthis.setupTrigger(props);\n\n\t\tthis.getMemoizedJsonSchema = memoizeOne(toJS);\n\t\tthis.getMemoizedUiSchema = memoizeOne(toJS);\n\t\tthis.getMemoizedInitialState = memoizeOne(toJS);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.state.get('properties') !== nextProps.state.get('properties')) {\n\t\t\tthis.setState({ properties: nextProps.state.get('properties').toJS() });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n\t\t\tprevProps.triggerURL !== this.props.triggerURL ||\n\t\t\tprevProps.customTriggers !== this.props.customTriggers\n\t\t) {\n\t\t\tthis.setupTrigger(this.props);\n\t\t}\n\t\tif (this.props.definitionURL !== prevProps.definitionURL) {\n\t\t\tthis.props.dispatch({\n\t\t\t\ttype: TCompForm.ON_DEFINITION_URL_CHANGED,\n\t\t\t\t...this.props,\n\t\t\t});\n\t\t}\n\t}\n\n\tonChange(_, payload) {\n\t\tif (!this.props.state.get('dirty')) {\n\t\t\tthis.props.setState({ dirty: true });\n\t\t}\n\n\t\tresolveNameForTitleMap(payload);\n\t\tthis.setState({ properties: payload.properties });\n\n\t\tif (this.props.dispatchOnChange) {\n\t\t\tthis.props.dispatch({\n\t\t\t\ttype: TCompForm.ON_CHANGE,\n\t\t\t\tcomponent: TCompForm.displayName,\n\t\t\t\tcomponentId: this.props.componentId,\n\t\t\t\t...payload,\n\t\t\t});\n\t\t}\n\t}\n\n\tonTrigger(event, payload) {\n\t\tthis.props.dispatch({\n\t\t\ttype: TCompForm.ON_TRIGGER_BEGIN,\n\t\t\t...payload,\n\t\t});\n\t\t// Trigger definitions from tacokit can precise the fields that are impacted by the trigger.\n\t\t// Those fields are the jsonSchema path.\n\t\t// trigger = { options: [{ path: 'user.firstname' }, { path: 'user.lastname' }] }\n\t\tif (Array.isArray(get(payload, 'trigger.options'))) {\n\t\t\tconst updating = payload.trigger.options.map(op => op.path);\n\t\t\tthis.setState({ updating });\n\t\t}\n\t\treturn this.trigger(event, payload)\n\t\t\t.then(data => {\n\t\t\t\tthis.props.dispatch({\n\t\t\t\t\ttype: TCompForm.ON_TRIGGER_END,\n\t\t\t\t\t...payload,\n\t\t\t\t});\n\t\t\t\tif (data.jsonSchema || data.uiSchema) {\n\t\t\t\t\tthis.props.setState(data);\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.setState({ updating: [] });\n\t\t\t});\n\t}\n\n\tonSubmit(_, properties) {\n\t\tthis.props.dispatch({\n\t\t\ttype: TCompForm.ON_SUBMIT,\n\t\t\tcomponent: TCompForm.displayName,\n\t\t\tcomponentId: this.props.componentId,\n\t\t\tproperties,\n\t\t});\n\t}\n\n\tonReset() {\n\t\tthis.props.setState(prev =>\n\t\t\tprev.state\n\t\t\t\t.set('jsonSchema', this.props.state.getIn(['initialState', 'jsonSchema']))\n\t\t\t\t.set('uiSchema', this.props.state.getIn(['initialState', 'uiSchema']))\n\t\t\t\t.set('properties', this.props.state.getIn(['initialState', 'properties']))\n\t\t\t\t.set('dirty', false),\n\t\t);\n\t\tthis.setState({\n\t\t\tproperties: this.props.state.getIn(['initialState', 'properties']).toJS(),\n\t\t\tdirty: false,\n\t\t});\n\t}\n\n\tsetupTrigger(props) {\n\t\tconst config = cmf.sagas.http.getDefaultConfig() || {};\n\t\tthis.trigger = kit.createTriggers({\n\t\t\turl: props.triggerURL,\n\t\t\tcustomRegistry: props.customTriggers,\n\t\t\theaders: config.headers,\n\t\t\tlang: props.lang,\n\t\t\tsecurity: {\n\t\t\t\tCSRFTokenCookieKey: props.CSRFTokenCookieKey,\n\t\t\t\tCSRFTokenHeaderKey: props.CSRFTokenHeaderKey,\n\t\t\t},\n\t\t});\n\t}\n\n\tgetUISpec() {\n\t\treturn {\n\t\t\tproperties: this.state.properties,\n\t\t\tjsonSchema: this.getMemoizedJsonSchema(this.props.state.get('jsonSchema')),\n\t\t\tuiSchema: this.getMemoizedUiSchema(this.props.state.get('uiSchema')),\n\t\t};\n\t}\n\n\trender() {\n\t\tconst uiSpecs = this.getUISpec();\n\n\t\tif (!uiSpecs.jsonSchema) {\n\t\t\tconst response = this.props.state.get('response');\n\t\t\tif (response) {\n\t\t\t\treturn <p className=\"danger\">{response.get('statusText')}</p>;\n\t\t\t}\n\t\t\treturn <Form loading />;\n\t\t}\n\n\t\tconst props = {\n\t\t\t...omit(this.props, TO_OMIT),\n\t\t\tdata: uiSpecs,\n\t\t\tinitialData: this.getMemoizedInitialState(this.props.state.get('initialState')),\n\t\t\tonTrigger: this.onTrigger,\n\t\t\tonChange: this.onChange,\n\t\t\tonSubmit: this.onSubmit,\n\t\t\tonReset: this.onReset,\n\t\t\twidgets: { ...this.props.widgets, ...tcompFieldsWidgets },\n\t\t\tupdating: this.state.updating,\n\t\t};\n\n\t\treturn <Form {...props} />;\n\t}\n}\n\nTCompForm.ON_CHANGE = 'TCOMP_FORM_CHANGE';\nTCompForm.ON_SUBMIT = 'TCOMP_FORM_SUBMIT';\nTCompForm.ON_SUBMIT_SUCCEED = 'TCOMP_FORM_SUBMIT_SUCCEED';\nTCompForm.ON_SUBMIT_FAILED = 'TCOMP_FORM_SUBMIT_FAILED';\nTCompForm.ON_TRIGGER_BEGIN = 'TCOMP_FORM_TRIGGER_BEGIN';\nTCompForm.ON_TRIGGER_END = 'TCOMP_FORM_TRIGGER_END';\nTCompForm.ON_DEFINITION_URL_CHANGED = 'TCOMP_FORM_DEFINITION_URL_CHANGE';\nTCompForm.displayName = 'ComponentForm';\nTCompForm.propTypes = {\n\t...cmfConnect.propTypes,\n\tdefinitionURL: PropTypes.string.isRequired,\n\ttriggerURL: PropTypes.string.isRequired,\n\tsubmitURL: PropTypes.string,\n\tuiSpecPath: PropTypes.string,\n\tlang: PropTypes.string,\n\tcustomTriggers: PropTypes.object,\n\tdispatchOnChange: PropTypes.bool,\n\tCSRFTokenCookieKey: PropTypes.string,\n\tCSRFTokenHeaderKey: PropTypes.string,\n};\n\nexport default cmfConnect({\n\tdefaultState: DEFAULT_STATE,\n\n\tdefaultProps: {\n\t\tsaga: 'ComponentForm#default',\n\t},\n\n\tomitCMFProps: true,\n\twithComponentRegistry: true,\n\twithDispatch: true,\n\twithDispatchActionCreator: true,\n\twithComponentId: true,\n})(TCompForm);\n"]}]}