{"remainingRequest":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/ComponentForm.actions.js","dependencies":[{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/ComponentForm.actions.js","mtime":1570436226804},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/cache-loader/dist/cjs.js","mtime":1581407659958},{"path":"/Users/jmfrancois/github/talend/ui/packages/containers/sandbox/node_modules/babel-loader/lib/index.js","mtime":1581407659368}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport var COMPONENT_FORM_SET_DIRTY = 'COMPONENT_FORM_SET_DIRTY';\n/**\n * This action will change for a given componentForm name his dirty status\n * @param {string} componentId the component form id\n * @param {boolean} dirty the dirty state to apply\n */\n\nexport function setComponentFormDirtyState(componentId, dirty) {\n  if (typeof dirty !== 'boolean') {\n    throw new Error(\"ComponentForm dirty state should be a boolean, received \\\"\".concat(dirty, \"\\\"(\").concat(_typeof(dirty), \") instead\"));\n  }\n\n  return {\n    componentId: componentId,\n    dirty: dirty,\n    type: COMPONENT_FORM_SET_DIRTY\n  };\n}\nexport default {\n  setComponentFormDirtyState: setComponentFormDirtyState\n};",{"version":3,"sources":["/Users/jmfrancois/github/talend/ui/packages/containers/src/ComponentForm/ComponentForm.actions.js"],"names":["COMPONENT_FORM_SET_DIRTY","setComponentFormDirtyState","componentId","dirty","Error","type"],"mappings":";;AAAA,OAAO,IAAMA,wBAAwB,GAAG,0BAAjC;AAEP;;;;;;AAKA,OAAO,SAASC,0BAAT,CAAoCC,WAApC,EAAiDC,KAAjD,EAAwD;AAC9D,MAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AAC/B,UAAM,IAAIC,KAAJ,qEACuDD,KADvD,wBACwEA,KADxE,gBAAN;AAGA;;AAED,SAAO;AACND,IAAAA,WAAW,EAAXA,WADM;AAENC,IAAAA,KAAK,EAALA,KAFM;AAGNE,IAAAA,IAAI,EAAEL;AAHA,GAAP;AAKA;AAED,eAAe;AAAEC,EAAAA,0BAA0B,EAA1BA;AAAF,CAAf","sourcesContent":["export const COMPONENT_FORM_SET_DIRTY = 'COMPONENT_FORM_SET_DIRTY';\n\n/**\n * This action will change for a given componentForm name his dirty status\n * @param {string} componentId the component form id\n * @param {boolean} dirty the dirty state to apply\n */\nexport function setComponentFormDirtyState(componentId, dirty) {\n\tif (typeof dirty !== 'boolean') {\n\t\tthrow new Error(\n\t\t\t`ComponentForm dirty state should be a boolean, received \"${dirty}\"(${typeof dirty}) instead`,\n\t\t);\n\t}\n\n\treturn {\n\t\tcomponentId,\n\t\tdirty,\n\t\ttype: COMPONENT_FORM_SET_DIRTY,\n\t};\n}\n\nexport default { setComponentFormDirtyState };\n"]}]}