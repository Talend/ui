/// Define button colors based on its background
/// @access public
/// @param {Color} $btn-color [$btn-default-color] - button color
/// @param {Color} $btn-bg [$btn-default-bg] - button background color
/// @param {Color} $btn-bg-hover [$btn-default-bg-hover] - button background color when hover
/// @param {Color} $btn-bg-active [$btn-default-bg-active] - button background color when active
@mixin btn-colors($btn-color: $btn-default-color, $btn-bg: $btn-default-bg, $btn-bg-hover: $btn-default-bg-hover, $btn-bg-active: $btn-default-bg-active) {
	color: $btn-color;
	background-color: $btn-bg;

	&:focus,
	&.focus,
	&:hover {
		color: $btn-color;
		background-color: $btn-bg-hover;
	}

	&:active,
	&.active,
	.open > &.dropdown-toggle {
		color: $btn-color;
		background-color: $btn-bg-active;
		box-shadow: none;

		&:hover,
		&:focus,
		&.focus {
			background-color: $btn-bg-active;
		}
	}

	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&.focus {
			opacity: 0.54;
			cursor: not-allowed;
		}
	}
}

/// Define inverse button colors based on the button color
/// @access public
/// @param {Color} $btn-color [$btn-default-bg] - button color
/// @param {Color} $btn-color-hover [$btn-default-bg-hover] - button hover background
/// @param {Color} $btn-color-active [$btn-default-bg-active] - button active background
@mixin btn-inverse-colors($btn-color: $btn-default-bg, $btn-color-hover: $btn-default-bg-hover, $btn-color-active: $btn-default-bg-active) {
	color: $btn-color;
	background-color: transparent;
	border: 1px solid $btn-color;

	&:focus,
	&.focus,
	&:hover {
		color: $btn-color-hover;
		background-color: $lochmara100;
		border-color: $btn-color-hover;
	}

	&:active,
	&.active,
	.open > &.dropdown-toggle {
		color: $btn-color-active;
		background-color: $lochmara100;
		border-color: $btn-color-active;
		box-shadow: none;

		&:hover,
		&:focus,
		&.focus {
			color: $btn-color-active;
			background-color: $lochmara100;
			border-color: $btn-color-active;
		}
	}
}

/// Define gradient based webapp layouts
/// @access public
/// @param {Color} $brand-primary - primary color of product
/// @param {Color} $brand-secondary [$brand-primary] - secondary color of product
/// @param {String} $app-key - app key used by the icon as prefix in its name
@mixin layout-colors($brand-primary, $brand-secondary: $brand-primary, $app-key: '') {
	$logo-size: 31rem !default;

	[role='banner'] {
		nav {
			$gradient-angle: 'to right';
			background: linear-gradient(#{$gradient-angle}, $regal-blue 20%, $brand-primary 80%);
		}

		[role='heading'] {
			span:first-child {
				display: inline-flex;
				align-items: center;

				&:before {
					display: block;
					content: '';
					margin-right: $padding-small;
					height: $navbar-brand-logo-height;
					width: $navbar-brand-logo-height;
					background-repeat: no-repeat;
					@if ($app-key != '') {
						background-color: white;
						mask-image: #{'url(~@talend/icons/src/svg/products/' + $app-key + '-negative.svg)'};
					}
				}
			}

			svg + span:first-child {
				&:before {
					display: none;
				}
			}
		}

		[role='presentation'] {
			// Sorry, Bootstrap customization sucks
			.btn,
			.btn.open,
			.dropdown.open .btn {
				&,
				&:hover {
					background: none;
				}
			}

			.btn {
				&:hover,
				&:focus {
					box-shadow: 0 0 0 200px rgba(255, 255, 255, 0.12) inset;
				}
			}
		}
	}

	[role='navigation'] {
		$gradient-angle: 'to bottom';
		position: relative;
		height: 100%;
		overflow: hidden;
		background: linear-gradient(#{$gradient-angle}, $st-tropaz, $brand-primary 95%);

		.nav-inverse {
			background-color: transparent;
		}

		&:before {
			content: '';
			position: absolute;
			left: 0;
			bottom: -50px;
			height: $logo-size;
			width: $logo-size;
			background-repeat: no-repeat;
			@if ($app-key != '') {
				background-color: rgba(255, 255, 255, 0.1);
				mask-image: #{'url(~@talend/icons/src/svg/products/' + $app-key + '-negative.svg)'};
			}
		}

		&[aria-expanded='false']:before {
			content: none;
		}

		[role='presentation'] {
			&[aria-current] {
				$gradient-angle: 'to right';
				background: linear-gradient(#{$gradient-angle}, $green-talend -15%, $brand-secondary 45%);
			}

			&:hover {
				&:not([aria-current]) {
					background: none;
					box-shadow: 0 0 0 200px rgba(255, 255, 255, 0.12) inset;
				}
			}
		}
	}
}

@mixin btn-tertiary-colors($color: $btn-default-bg) {
	&.btn-tertiary {
		background-color: transparent;
		box-shadow: none;
		font-weight: $btn-tertiary-font-weight;
		line-height: $btn-tertiary-line-height;
		min-height: $btn-tertiary-line-height;
		padding: 0 $padding-small;
		transition: background 0.2s ease-in;
		color: $color;
		&:hover,
		&:focus {
			color: $color;
			background: tint($color, 90%);
		}
		&:active {
			background: tint($color, 80%);
		}
	}
}
