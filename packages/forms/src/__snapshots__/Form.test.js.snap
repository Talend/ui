// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Form/> actions should render form with custom css 1`] = `
<form
  acceptCharset={undefined}
  action={undefined}
  autoComplete={undefined}
  className="form"
  encType={undefined}
  id={undefined}
  method={undefined}
  name={undefined}
  noValidate={false}
  onSubmit={[Function]}
  target={undefined}
>
  <div
    className="form-group field field-object"
  >
    <fieldset>
      <legend
        id="root__title"
      >
        TestForm
      </legend>
      <div
        className="form-group field field-string"
      >
        <input
          autoFocus={false}
          className="form-control"
          disabled={false}
          id="root_name"
          label="Name"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder=""
          readOnly={false}
          required={false}
          type="text"
          value="John Doe"
        />
        <label
          className="control-label"
          htmlFor="root_name"
        >
          Name*
        </label>
        <div />
        <div />
        <div />
      </div>
      <div
        className="form-group field field-string"
      >
        <select
          autoFocus={false}
          className="form-control"
          disabled={false}
          id="root_roles"
          multiple={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          required={false}
          value=""
        >
          <option
            value=""
          >
            
          </option>
          <option
            value="dev"
          >
            dev
          </option>
          <option
            value="pm"
          >
            pm
          </option>
        </select>
        <label
          className="control-label"
          htmlFor="root_roles"
        >
          roles
        </label>
        <div />
        <div />
        <div />
      </div>
    </fieldset>
    <div />
    <div />
  </div>
  <div
    className="theme-form-actions"
  >
    <div
      className="form-actions buttons"
    >
      <button
        aria-label="Submit"
        className="theme-btn-disabled btn btn-primary"
        disabled={true}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="submit"
      >
        <span>
          Submit
        </span>
      </button>
      <button
        aria-label="Reset"
        className="btn btn-link"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="reset"
      >
        <span>
          Reset
        </span>
      </button>
    </div>
  </div>
</form>
`;

exports[`<Form/> actions should render pass-in form actions 1`] = `
Object {
  "action": Object {
    "children": Array [
      null,
      "Reset",
    ],
    "label": "Reset",
    "style": "link",
    "tReady": true,
    "type": "reset",
  },
  "edit": false,
  "errorSchema": Object {},
  "errors": Array [],
  "formData": Object {
    "admin": true,
    "name": "John Doe",
    "roles": undefined,
  },
  "idSchema": Object {
    "$id": "root",
    "admin": Object {
      "$id": "root_admin",
    },
    "name": Object {
      "$id": "root_name",
    },
    "roles": Object {
      "$id": "root_roles",
    },
  },
  "model": undefined,
  "schema": Object {
    "properties": Object {
      "admin": Object {
        "default": true,
        "title": "Admin",
        "type": "boolean",
      },
      "name": Object {
        "default": "John Doe",
        "title": "Name",
        "type": "string",
      },
      "roles": Object {
        "enum": Array [
          "dev",
          "pm",
        ],
        "enumName": Array [
          "Developer",
          "Project Manager",
        ],
        "title": "roles",
        "type": "string",
      },
    },
    "title": "TestForm",
    "type": "object",
  },
  "uiSchema": Object {
    "admin": Object {
      "ui:trigger": Array [
        "after",
      ],
    },
  },
}
`;
