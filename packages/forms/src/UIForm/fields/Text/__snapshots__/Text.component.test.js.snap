// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text field should render disabled input 1`] = `
<FieldTemplate
  description="my text input hint"
  descriptionId="myForm-description"
  errorId="myForm-error"
  errorMessage="My error message"
  id="myForm"
  isValid={true}
  label="My input title"
  labelAfter={true}
  required={true}
>
  <input
    aria-describedby="myForm-description myForm-error"
    aria-invalid={false}
    aria-required={true}
    autoFocus={true}
    className="form-control"
    disabled={true}
    id="myForm"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="Type something here"
    readOnly={false}
    type="text"
    value="toto"
  />
</FieldTemplate>
`;

exports[`Text field should render hidden input 1`] = `
<input
  id="myForm"
  type="hidden"
  value="toto"
/>
`;

exports[`Text field should render input 1`] = `
<FieldTemplate
  description="my text input hint"
  descriptionId="myForm-description"
  errorId="myForm-error"
  errorMessage="My error message"
  id="myForm"
  isValid={true}
  label="My input title"
  labelAfter={true}
  required={true}
>
  <input
    aria-describedby="myForm-description myForm-error"
    aria-invalid={false}
    aria-required={true}
    autoFocus={true}
    className="form-control"
    disabled={false}
    id="myForm"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="Type something here"
    readOnly={false}
    type="text"
    value="toto"
  />
</FieldTemplate>
`;

exports[`Text field should render input with tooltip 1`] = `
<FieldTemplate
  description="my text input hint"
  descriptionId={42}
  errorId={42}
  errorMessage={undefined}
  id={undefined}
  isValid={true}
  label="My input title"
  labelAfter={true}
  required={true}
>
  <OverlayTrigger
    defaultOverlayShown={false}
    overlay={
      <Popover
        bsClass="popover"
        placement="right"
      >
        <span>
          Foo
        </span>
      </Popover>
    }
    placement="right"
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <input
      aria-describedby="42 42"
      aria-invalid={false}
      aria-required={true}
      autoFocus={true}
      className="form-control"
      disabled={false}
      id={undefined}
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Type something here"
      readOnly={false}
      type="text"
      value=""
    />
  </OverlayTrigger>
</FieldTemplate>
`;

exports[`Text field should render password input 1`] = `
<FieldTemplate
  description="my text input hint"
  descriptionId="myForm-description"
  errorId="myForm-error"
  errorMessage="My error message"
  id="myForm"
  isValid={true}
  label="My input title"
  labelAfter={true}
  required={true}
>
  <input
    aria-describedby="myForm-description myForm-error"
    aria-invalid={false}
    aria-required={true}
    autoFocus={true}
    className="form-control"
    disabled={false}
    id="myForm"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="Type something here"
    readOnly={false}
    type="password"
    value="toto"
  />
</FieldTemplate>
`;

exports[`Text field should render readonly input 1`] = `
<FieldTemplate
  description="my text input hint"
  descriptionId="myForm-description"
  errorId="myForm-error"
  errorMessage="My error message"
  id="myForm"
  isValid={true}
  label="My input title"
  labelAfter={true}
  required={true}
>
  <input
    aria-describedby="myForm-description myForm-error"
    aria-invalid={false}
    aria-required={true}
    autoFocus={true}
    className="form-control"
    disabled={false}
    id="myForm"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="Type something here"
    readOnly={true}
    type="text"
    value="toto"
  />
</FieldTemplate>
`;
