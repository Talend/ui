// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListView field componentWillReceiveProps should update items on props.schema change 1`] = `
Object {
  "displayedItems": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": null,
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": false,
}
`;

exports[`ListView field componentWillReceiveProps should update items on props.schema change 2`] = `
Object {
  "displayedItems": Array [
    Object {
      "checked": true,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": true,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
    Object {
      "checked": true,
      "index": 4,
      "label": "Angola",
      "onChange": [Function],
      "value": "country5",
    },
    Object {
      "checked": true,
      "index": 5,
      "label": "Anguilla",
      "onChange": [Function],
      "value": "country6",
    },
  ],
  "emptyLabel": "Zero items !",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Some countries",
  "items": Array [
    Object {
      "checked": true,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": true,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
    Object {
      "checked": true,
      "index": 4,
      "label": "Angola",
      "onChange": [Function],
      "value": "country5",
    },
    Object {
      "checked": true,
      "index": 5,
      "label": "Anguilla",
      "onChange": [Function],
      "value": "country6",
    },
  ],
  "noResultLabel": "Zero item for your filter !",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": null,
  "searchPlaceholder": "Search this",
  "toggleAllChecked": true,
}
`;

exports[`ListView field componentWillReceiveProps should update items on props.value change 1`] = `
Object {
  "displayedItems": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": null,
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": false,
}
`;

exports[`ListView field componentWillReceiveProps should update items on props.value change 2`] = `
Object {
  "displayedItems": Array [
    Object {
      "checked": true,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": true,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": true,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": true,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": null,
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": true,
}
`;

exports[`ListView field filter should filter items on input change 1`] = `
<div
  class="tc-listview-items"
>
  <div
    id="autoSizer"
  >
    <div
      aria-label="grid"
      aria-readonly="true"
      class="ReactVirtualized__Grid ReactVirtualized__List tc-list-items"
      role="grid"
      tabindex="0"
      style="box-sizing: border-box; direction: ltr; height: 3000px; position: relative; width: 3000px; overflow-x: hidden; overflow-y: hidden;"
    >
      <div
        class="ReactVirtualized__Grid__innerScrollContainer"
        role="rowgroup"
        style="width: auto; height: 106px; max-width: 3000px; max-height: 106px; overflow: hidden; position: relative;"
      >
        <div
          class="tc-item-container toggle"
          style="height: 40px; left: 0px; position: absolute; top: 0px; width: 100%;"
        >
          <div
            class="checkbox"
          >
            <label
              for="my-list-view-toggle-all"
            >
              <input
                type="checkbox"
                id="my-list-view-toggle-all"
              />
              <strong>
                All
              </strong>
            </label>
          </div>
        </div>
        <div
          class="tc-item-container"
          style="height: 33px; left: 0px; position: absolute; top: 40px; width: 100%;"
        >
          <div
            id="my-list-view-1-item"
          >
            <div
              class="checkbox-container"
            >
              <div
                class="checkbox"
              >
                <label
                  for="checkbox-my-list-view-1-item"
                >
                  <input
                    type="checkbox"
                    id="checkbox-my-list-view-1-item"
                  />
                  <span
                    class="tc-listview-item-label"
                  >
                    <span>
                      Alban
                    </span>
                    <span>
                      <b>
                        ia
                      </b>
                    </span>
                    <span />
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          class="tc-item-container"
          style="height: 33px; left: 0px; position: absolute; top: 73px; width: 100%;"
        >
          <div
            id="my-list-view-2-item"
          >
            <div
              class="checkbox-container"
            >
              <div
                class="checkbox"
              >
                <label
                  for="checkbox-my-list-view-2-item"
                >
                  <input
                    type="checkbox"
                    id="checkbox-my-list-view-2-item"
                  />
                  <span
                    class="tc-listview-item-label"
                  >
                    <span>
                      Alger
                    </span>
                    <span>
                      <b>
                        ia
                      </b>
                    </span>
                    <span />
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`ListView field filter should show no result message 1`] = `
<div
  class="tc-listview"
>
  <header
    class="tc-listview-header"
  >
    <input
      type="text"
      placeholder="Search filter"
      aria-label="Search filter"
    />
    <button
      role="link"
      type="button"
      class="btn btn-link"
    >
      <svg
        class="tc-svg-icon"
        focusable="false"
        aria-hidden="true"
      >
        <use
          xlink:href="#talend-cross"
        />
      </svg>
    </button>
  </header>
  <span>
    No element matching your filter
  </span>
</div>
`;

exports[`ListView field filter should switch back to default mode on ESC keydown 1`] = `
Object {
  "displayMode": "DISPLAY_MODE_SEARCH",
  "displayedItems": Array [
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerInput": Array [
    Object {
      "icon": "talend-cross",
      "id": "abort",
      "label": "Abort",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": "ia",
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": true,
}
`;

exports[`ListView field filter should switch back to default mode on ESC keydown 2`] = `
Object {
  "displayMode": "DISPLAY_MODE_DEFAULT",
  "displayedItems": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerInput": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": undefined,
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": false,
}
`;

exports[`ListView field filter should switch back to default mode on abort button click 1`] = `
Object {
  "displayMode": "DISPLAY_MODE_SEARCH",
  "displayedItems": Array [
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerInput": Array [
    Object {
      "icon": "talend-cross",
      "id": "abort",
      "label": "Abort",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": "ia",
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": true,
}
`;

exports[`ListView field filter should switch back to default mode on abort button click 2`] = `
Object {
  "displayMode": "DISPLAY_MODE_DEFAULT",
  "displayedItems": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "emptyLabel": "No element",
  "getItemHeight": [Function],
  "headerDefault": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerInput": Array [
    Object {
      "icon": "talend-search",
      "id": "my-list-view-search",
      "label": "Search for specific values",
      "onClick": [Function],
    },
  ],
  "headerLabel": "Countries",
  "items": Array [
    Object {
      "checked": false,
      "index": 0,
      "label": "Afghanistan",
      "onChange": [Function],
      "value": "country1",
    },
    Object {
      "checked": true,
      "index": 1,
      "label": "Albania",
      "onChange": [Function],
      "value": "country2",
    },
    Object {
      "checked": true,
      "index": 2,
      "label": "Algeria",
      "onChange": [Function],
      "value": "country3",
    },
    Object {
      "checked": false,
      "index": 3,
      "label": "Andorra",
      "onChange": [Function],
      "value": "country4",
    },
  ],
  "noResultLabel": "No element matching your filter",
  "onAddKeyDown": [Function],
  "onInputChange": [Function],
  "onToggleAll": [Function],
  "required": true,
  "searchCriteria": undefined,
  "searchPlaceholder": "Search filter",
  "toggleAllChecked": false,
}
`;

exports[`ListView field filter should switch to input mode on search button click 1`] = `
<header
  class="tc-listview-header"
>
  <strong>
    <!-- react-text: 5 -->
    Countries
    <!-- /react-text -->
    <!-- react-text: 6 -->
    *
    <!-- /react-text -->
  </strong>
  <small>
    (2/4 selected)
  </small>
  <div
    class="actions"
  >
    <button
      role="link"
      type="button"
      class="btn btn-link"
    >
      <svg
        class="tc-svg-icon"
        focusable="false"
        aria-hidden="true"
      >
        <use
          xlink:href="#talend-search"
        />
      </svg>
    </button>
  </div>
</header>
`;

exports[`ListView field filter should switch to input mode on search button click 2`] = `
<header
  class="tc-listview-header"
>
  <input
    type="text"
    placeholder="Search filter"
    aria-label="Search filter"
  />
  <button
    role="link"
    type="button"
    class="btn btn-link"
  >
    <svg
      class="tc-svg-icon"
      focusable="false"
      aria-hidden="true"
    >
      <use
        xlink:href="#talend-cross"
      />
    </svg>
  </button>
</header>
`;

exports[`ListView field render should render ListView 1`] = `
<FieldTemplate
  description="This is the ListView field"
  errorMessage="This is wrong"
  id="my-list-view"
  isValid={true}
>
  <ListView
    displayedItems={
      Array [
        Object {
          "checked": false,
          "index": 0,
          "label": "Afghanistan",
          "onChange": [Function],
          "value": "country1",
        },
        Object {
          "checked": true,
          "index": 1,
          "label": "Albania",
          "onChange": [Function],
          "value": "country2",
        },
        Object {
          "checked": true,
          "index": 2,
          "label": "Algeria",
          "onChange": [Function],
          "value": "country3",
        },
        Object {
          "checked": false,
          "index": 3,
          "label": "Andorra",
          "onChange": [Function],
          "value": "country4",
        },
      ]
    }
    emptyLabel="No element"
    getItemHeight={[Function]}
    headerDefault={
      Array [
        Object {
          "icon": "talend-search",
          "id": "my-list-view-search",
          "label": "Search for specific values",
          "onClick": [Function],
        },
      ]
    }
    headerLabel="Countries"
    id="my-list-view"
    items={
      Array [
        Object {
          "checked": false,
          "index": 0,
          "label": "Afghanistan",
          "onChange": [Function],
          "value": "country1",
        },
        Object {
          "checked": true,
          "index": 1,
          "label": "Albania",
          "onChange": [Function],
          "value": "country2",
        },
        Object {
          "checked": true,
          "index": 2,
          "label": "Algeria",
          "onChange": [Function],
          "value": "country3",
        },
        Object {
          "checked": false,
          "index": 3,
          "label": "Andorra",
          "onChange": [Function],
          "value": "country4",
        },
      ]
    }
    noResultLabel="No element matching your filter"
    onAddKeyDown={[Function]}
    onInputChange={[Function]}
    onToggleAll={[Function]}
    required={true}
    searchCriteria={null}
    searchPlaceholder="Search filter"
    toggleAllChecked={false}
  />
</FieldTemplate>
`;

exports[`ListView field render should render no items message 1`] = `
<div
  class="tc-listview"
>
  <header
    class="tc-listview-header"
  >
    <strong>
      <!-- react-text: 5 -->
      Countries
      <!-- /react-text -->
      <!-- react-text: 6 -->
      *
      <!-- /react-text -->
    </strong>
    <div
      class="actions"
    >
      <button
        role="link"
        type="button"
        class="btn btn-link"
      >
        <svg
          class="tc-svg-icon"
          focusable="false"
          aria-hidden="true"
        >
          <use
            xlink:href="#talend-search"
          />
        </svg>
      </button>
    </div>
  </header>
  <span>
    No element
  </span>
</div>
`;
