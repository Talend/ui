// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select field should render disabled input 1`] = `
<FieldTemplate
  description="Select me"
  errorMessage="My Error Message"
  id="mySelect"
  isValid={true}
  label="My Select title"
  required={undefined}
>
  <Select
    arrowRenderer={[Function]}
    autoFocus={true}
    autosize={true}
    backspaceRemoves={true}
    backspaceToRemoveMessage="Press backspace to remove {label}"
    className="theme-override"
    clearAllText="Clear all"
    clearRenderer={[Function]}
    clearValueText="Clear value"
    clearable={true}
    closeOnSelect={true}
    deleteRemoves={true}
    delimiter=","
    disabled={true}
    escapeClearsValue={true}
    filterOptions={[Function]}
    id="mySelect"
    ignoreAccents={true}
    ignoreCase={true}
    inputProps={Object {}}
    isLoading={false}
    joinValues={false}
    labelKey="label"
    matchPos="any"
    matchProp="label"
    menuBuffer={0}
    menuRenderer={[Function]}
    multi={false}
    noResultsText="No results found"
    onBlurResetsInput={true}
    onChange={[Function]}
    onCloseResetsInput={true}
    onSelectResetsInput={true}
    openOnClick={true}
    optionComponent={[Function]}
    options={
      Array [
        Object {
          "label": "My foo title",
          "value": "foo",
        },
        Object {
          "label": "My bar title",
          "value": "bar",
        },
        Object {
          "label": "My lol title",
          "value": "lol",
        },
      ]
    }
    pageSize={5}
    placeholder="Please select a value"
    readOnly={false}
    removeSelected={true}
    required={false}
    rtl={false}
    scrollMenuIntoView={true}
    searchable={true}
    simpleValue={false}
    tabSelectsValue={true}
    trimFilter={true}
    value="lol"
    valueComponent={[Function]}
    valueKey="value"
  />
</FieldTemplate>
`;

exports[`Select field should render readOnly input 1`] = `
<FieldTemplate
  description="Select me"
  errorMessage="My Error Message"
  id="mySelect"
  isValid={true}
  label="My Select title"
  required={undefined}
>
  <Select
    arrowRenderer={[Function]}
    autoFocus={true}
    autosize={true}
    backspaceRemoves={true}
    backspaceToRemoveMessage="Press backspace to remove {label}"
    className="theme-override"
    clearAllText="Clear all"
    clearRenderer={[Function]}
    clearValueText="Clear value"
    clearable={true}
    closeOnSelect={true}
    deleteRemoves={true}
    delimiter=","
    disabled={false}
    escapeClearsValue={true}
    filterOptions={[Function]}
    id="mySelect"
    ignoreAccents={true}
    ignoreCase={true}
    inputProps={Object {}}
    isLoading={false}
    joinValues={false}
    labelKey="label"
    matchPos="any"
    matchProp="label"
    menuBuffer={0}
    menuRenderer={[Function]}
    multi={false}
    noResultsText="No results found"
    onBlurResetsInput={true}
    onChange={[Function]}
    onCloseResetsInput={true}
    onSelectResetsInput={true}
    openOnClick={true}
    optionComponent={[Function]}
    options={
      Array [
        Object {
          "label": "My foo title",
          "value": "foo",
        },
        Object {
          "label": "My bar title",
          "value": "bar",
        },
        Object {
          "label": "My lol title",
          "value": "lol",
        },
      ]
    }
    pageSize={5}
    placeholder="Please select a value"
    readOnly={true}
    removeSelected={true}
    required={false}
    rtl={false}
    scrollMenuIntoView={true}
    searchable={true}
    simpleValue={false}
    tabSelectsValue={true}
    trimFilter={true}
    value="lol"
    valueComponent={[Function]}
    valueKey="value"
  />
</FieldTemplate>
`;

exports[`Select field should render select multiple 1`] = `
<FieldTemplate
  description="Select me"
  errorMessage="My Error Message"
  id="mySelect"
  isValid={true}
  label="My Select title"
  required={undefined}
>
  <Select
    arrowRenderer={[Function]}
    autoFocus={true}
    autosize={true}
    backspaceRemoves={true}
    backspaceToRemoveMessage="Press backspace to remove {label}"
    className="theme-override"
    clearAllText="Clear all"
    clearRenderer={[Function]}
    clearValueText="Clear value"
    clearable={true}
    closeOnSelect={true}
    deleteRemoves={true}
    delimiter=","
    disabled={false}
    escapeClearsValue={true}
    filterOptions={[Function]}
    id="mySelect"
    ignoreAccents={true}
    ignoreCase={true}
    inputProps={Object {}}
    isLoading={false}
    joinValues={false}
    labelKey="label"
    matchPos="any"
    matchProp="label"
    menuBuffer={0}
    menuRenderer={[Function]}
    multi={true}
    noResultsText="No results found"
    onBlurResetsInput={true}
    onChange={[Function]}
    onCloseResetsInput={true}
    onSelectResetsInput={true}
    openOnClick={true}
    optionComponent={[Function]}
    options={
      Array [
        Object {
          "label": "My foo title",
          "value": "foo",
        },
        Object {
          "label": "My bar title",
          "value": "bar",
        },
        Object {
          "label": "My lol title",
          "value": "lol",
        },
      ]
    }
    pageSize={5}
    placeholder="Please select a value"
    readOnly={false}
    removeSelected={true}
    required={false}
    rtl={false}
    scrollMenuIntoView={true}
    searchable={true}
    simpleValue={false}
    tabSelectsValue={true}
    trimFilter={true}
    value={
      Array [
        "foo",
        "lol",
      ]
    }
    valueComponent={[Function]}
    valueKey="value"
  />
</FieldTemplate>
`;

exports[`Select field should render simple select 1`] = `
<FieldTemplate
  description="Select me"
  errorMessage="My Error Message"
  id="mySelect"
  isValid={true}
  label="My Select title"
  required={undefined}
>
  <Select
    arrowRenderer={[Function]}
    autoFocus={true}
    autosize={true}
    backspaceRemoves={true}
    backspaceToRemoveMessage="Press backspace to remove {label}"
    className="theme-override"
    clearAllText="Clear all"
    clearRenderer={[Function]}
    clearValueText="Clear value"
    clearable={true}
    closeOnSelect={true}
    deleteRemoves={true}
    delimiter=","
    disabled={false}
    escapeClearsValue={true}
    filterOptions={[Function]}
    id="mySelect"
    ignoreAccents={true}
    ignoreCase={true}
    inputProps={Object {}}
    isLoading={false}
    joinValues={false}
    labelKey="label"
    matchPos="any"
    matchProp="label"
    menuBuffer={0}
    menuRenderer={[Function]}
    multi={false}
    noResultsText="No results found"
    onBlurResetsInput={true}
    onChange={[Function]}
    onCloseResetsInput={true}
    onSelectResetsInput={true}
    openOnClick={true}
    optionComponent={[Function]}
    options={
      Array [
        Object {
          "label": "My foo title",
          "value": "foo",
        },
        Object {
          "label": "My bar title",
          "value": "bar",
        },
        Object {
          "label": "My lol title",
          "value": "lol",
        },
      ]
    }
    pageSize={5}
    placeholder="Please select a value"
    readOnly={false}
    removeSelected={true}
    required={false}
    rtl={false}
    scrollMenuIntoView={true}
    searchable={true}
    simpleValue={false}
    tabSelectsValue={true}
    trimFilter={true}
    value="lol"
    valueComponent={[Function]}
    valueKey="value"
  />
</FieldTemplate>
`;
