exports[`ColumnsWidget should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="tf-widget-columns undefined">
    <Column
        className="tf-column-columns"
        formData={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        schema={
            Object {
                "properties": Object {
                  "column1": Object {
                    "properties": Object {
                      "field1": Object {
                        "type": "string",
                      },
                      "field2": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 1",
                    "type": "object",
                  },
                  "column2": Object {
                    "properties": Object {
                      "field3": Object {
                        "type": "string",
                      },
                      "field4": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 2",
                    "type": "object",
                  },
                  "column3": Object {
                    "properties": Object {
                      "field5": Object {
                        "type": "string",
                      },
                      "field6": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 3",
                    "type": "object",
                  },
                },
                "type": "object",
              }
        } />
</div>,
  "nodes": Array [
    <div
      className="tf-widget-columns undefined">
      <Column
            className="tf-column-columns"
            formData={undefined}
            onBlur={[Function]}
            onChange={[Function]}
            schema={
                  Object {
                        "properties": Object {
                          "column1": Object {
                            "properties": Object {
                              "field1": Object {
                                "type": "string",
                              },
                              "field2": Object {
                                "type": "string",
                              },
                            },
                            "title": "Column 1",
                            "type": "object",
                          },
                          "column2": Object {
                            "properties": Object {
                              "field3": Object {
                                "type": "string",
                              },
                              "field4": Object {
                                "type": "string",
                              },
                            },
                            "title": "Column 2",
                            "type": "object",
                          },
                          "column3": Object {
                            "properties": Object {
                              "field5": Object {
                                "type": "string",
                              },
                              "field6": Object {
                                "type": "string",
                              },
                            },
                            "title": "Column 3",
                            "type": "object",
                          },
                        },
                        "type": "object",
                      }
            } />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ColumnsWidget
        formData={Object {}}
        onBlur={[Function]}
        onChange={[Function]}
        schema={
                Object {
                        "properties": Object {
                          "columns": Object {
                            "properties": Object {
                              "column1": Object {
                                "properties": Object {
                                  "field1": Object {
                                    "type": "string",
                                  },
                                  "field2": Object {
                                    "type": "string",
                                  },
                                },
                                "title": "Column 1",
                                "type": "object",
                              },
                              "column2": Object {
                                "properties": Object {
                                  "field3": Object {
                                    "type": "string",
                                  },
                                  "field4": Object {
                                    "type": "string",
                                  },
                                },
                                "title": "Column 2",
                                "type": "object",
                              },
                              "column3": Object {
                                "properties": Object {
                                  "field5": Object {
                                    "type": "string",
                                  },
                                  "field6": Object {
                                    "type": "string",
                                  },
                                },
                                "title": "Column 3",
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "required": Array [
                          "title",
                        ],
                        "title": "A list of tasks",
                        "type": "object",
                      }
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "formData": Object {},
          "onBlur": [Function],
          "onChange": [Function],
          "schema": Object {
            "properties": Object {
              "columns": Object {
                "properties": Object {
                  "column1": Object {
                    "properties": Object {
                      "field1": Object {
                        "type": "string",
                      },
                      "field2": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 1",
                    "type": "object",
                  },
                  "column2": Object {
                    "properties": Object {
                      "field3": Object {
                        "type": "string",
                      },
                      "field4": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 2",
                    "type": "object",
                  },
                  "column3": Object {
                    "properties": Object {
                      "field5": Object {
                        "type": "string",
                      },
                      "field6": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 3",
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "required": Array [
              "title",
            ],
            "title": "A list of tasks",
            "type": "object",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="tf-widget-columns undefined">
          <Column
                    className="tf-column-columns"
                    formData={undefined}
                    onBlur={[Function]}
                    onChange={[Function]}
                    schema={
                              Object {
                                        "properties": Object {
                                          "column1": Object {
                                            "properties": Object {
                                              "field1": Object {
                                                "type": "string",
                                              },
                                              "field2": Object {
                                                "type": "string",
                                              },
                                            },
                                            "title": "Column 1",
                                            "type": "object",
                                          },
                                          "column2": Object {
                                            "properties": Object {
                                              "field3": Object {
                                                "type": "string",
                                              },
                                              "field4": Object {
                                                "type": "string",
                                              },
                                            },
                                            "title": "Column 2",
                                            "type": "object",
                                          },
                                          "column3": Object {
                                            "properties": Object {
                                              "field5": Object {
                                                "type": "string",
                                              },
                                              "field6": Object {
                                                "type": "string",
                                              },
                                            },
                                            "title": "Column 3",
                                            "type": "object",
                                          },
                                        },
                                        "type": "object",
                                      }
                    } />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="tf-widget-columns undefined">
          <Column
                    className="tf-column-columns"
                    formData={undefined}
                    onBlur={[Function]}
                    onChange={[Function]}
                    schema={
                              Object {
                                        "properties": Object {
                                          "column1": Object {
                                            "properties": Object {
                                              "field1": Object {
                                                "type": "string",
                                              },
                                              "field2": Object {
                                                "type": "string",
                                              },
                                            },
                                            "title": "Column 1",
                                            "type": "object",
                                          },
                                          "column2": Object {
                                            "properties": Object {
                                              "field3": Object {
                                                "type": "string",
                                              },
                                              "field4": Object {
                                                "type": "string",
                                              },
                                            },
                                            "title": "Column 2",
                                            "type": "object",
                                          },
                                          "column3": Object {
                                            "properties": Object {
                                              "field5": Object {
                                                "type": "string",
                                              },
                                              "field6": Object {
                                                "type": "string",
                                              },
                                            },
                                            "title": "Column 3",
                                            "type": "object",
                                          },
                                        },
                                        "type": "object",
                                      }
                    } />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ColumnsWidget
    formData={Object {}}
    onBlur={[Function]}
    onChange={[Function]}
    schema={
        Object {
            "properties": Object {
              "columns": Object {
                "properties": Object {
                  "column1": Object {
                    "properties": Object {
                      "field1": Object {
                        "type": "string",
                      },
                      "field2": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 1",
                    "type": "object",
                  },
                  "column2": Object {
                    "properties": Object {
                      "field3": Object {
                        "type": "string",
                      },
                      "field4": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 2",
                    "type": "object",
                  },
                  "column3": Object {
                    "properties": Object {
                      "field5": Object {
                        "type": "string",
                      },
                      "field6": Object {
                        "type": "string",
                      },
                    },
                    "title": "Column 3",
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "required": Array [
              "title",
            ],
            "title": "A list of tasks",
            "type": "object",
          }
    } />,
}
`;
