// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnumerationWidget delete all 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "112",
        "values": Array [
          "titi",
          "tata",
        ],
      },
      Object {
        "id": "113",
        "values": Array [
          "titi2",
          "tata2",
        ],
      },
    ]
  }
  onChange={[Function]}
>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_DEFAULT"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              The list is empty
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should be in add mode 1`] = `
<EnumerationWidget>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_ADD"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_ADD"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <HeaderInput
            headerInput={
              Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check-plus",
                  "id": "validate-and-add",
                  "key": "validateAdd",
                  "label": "Validate and Add",
                  "onClick": [Function],
                },
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "key": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-cross",
                  "id": "abort",
                  "key": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ]
            }
            inputPlaceholder="New entry"
            inputRef={[Function]}
            onAddKeyDown={[Function]}
            onInputChange={[Function]}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <input
                autoFocus={true}
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="New entry"
                type="text"
              />
              <Action
                available={true}
                bsStyle="default"
                disabled={true}
                hideLabel={true}
                icon="talend-check-plus"
                inProgress={false}
                label="Validate and Add"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Validate and Add"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={true}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-check-plus"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-check-plus"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
              <Action
                available={true}
                bsStyle="default"
                disabled={true}
                hideLabel={true}
                icon="talend-check"
                inProgress={false}
                label="Validate"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Validate"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={true}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-check"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-check"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
              <Action
                available={true}
                bsStyle="default"
                disabled={false}
                hideLabel={true}
                icon="talend-cross"
                inProgress={false}
                label="Abort"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Abort"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={false}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-cross"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-cross"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
            </header>
          </HeaderInput>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_ADD"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_ADD"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              No results
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should be in default mode 1`] = `
<EnumerationWidget>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_DEFAULT"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              The list is empty
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should be in default mode 2`] = `
<EnumerationWidget
  schema={
    Object {
      "required": true,
    }
  }
>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={true}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={true}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={true}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
                *
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={true}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_DEFAULT"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              The list is empty
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should be in edit mode 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "111",
        "values": Array [
          "titi",
          "tata",
        ],
      },
    ]
  }
  onChange={[Function]}
>
  <div>
    <Enumeration
      currentEdit={
        Object {
          "validate": Object {
            "disabled": false,
          },
        }
      }
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={
        Array [
          Object {
            "displayMode": "DISPLAY_MODE_EDIT",
            "error": "",
            "id": "111",
            "isSelected": false,
            "values": Array [
              "titi",
              "tata",
            ],
          },
        ]
      }
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          currentEdit={
            Object {
              "validate": Object {
                "disabled": false,
              },
            }
          }
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "displayMode": "DISPLAY_MODE_EDIT",
                "error": "",
                "id": "111",
                "isSelected": false,
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          currentEdit={
            Object {
              "validate": Object {
                "disabled": false,
              },
            }
          }
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "displayMode": "DISPLAY_MODE_EDIT",
                "error": "",
                "id": "111",
                "isSelected": false,
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Items
            currentEdit={
              Object {
                "validate": Object {
                  "disabled": false,
                },
              }
            }
            items={
              Array [
                Object {
                  "displayMode": "DISPLAY_MODE_EDIT",
                  "error": "",
                  "id": "111",
                  "isSelected": false,
                  "values": Array [
                    "titi",
                    "tata",
                  ],
                },
              ]
            }
            itemsProp={
              Object {
                "actionsDefault": Array [
                  Object {
                    "disabled": false,
                    "icon": "talend-pencil",
                    "id": "edit",
                    "label": "Edit",
                    "onClick": [Function],
                  },
                  Object {
                    "icon": "talend-trash",
                    "id": "delete",
                    "label": "Remove value",
                    "onClick": [Function],
                  },
                ],
                "actionsEdit": Array [
                  Object {
                    "disabled": true,
                    "icon": "talend-check",
                    "id": "validate",
                    "label": "Validate",
                    "onClick": [Function],
                  },
                  Object {
                    "disabled": false,
                    "icon": "talend-cross",
                    "id": "abort",
                    "label": "Abort",
                    "onClick": [Function],
                  },
                ],
                "getItemHeight": [Function],
                "key": "values",
                "onAbortItem": [Function],
                "onChangeItem": [Function],
                "onLoadData": [Function],
                "onSelectItem": [Function],
                "onSubmitItem": [Function],
              }
            }
          >
            <ul
              className="undefined tc-enumeration-items"
              onScroll={[Function]}
            >
              <Component>
                <div
                  id="autoSizer"
                >
                  <List
                    actions={
                      Array [
                        Object {
                          "disabled": false,
                          "icon": "talend-pencil",
                          "id": "edit",
                          "label": "Edit",
                          "onClick": [Function],
                        },
                        Object {
                          "icon": "talend-trash",
                          "id": "delete",
                          "label": "Remove value",
                          "onClick": [Function],
                        },
                      ]
                    }
                    className="undefined"
                    estimatedRowSize={30}
                    height={30}
                    items={
                      Array [
                        Object {
                          "displayMode": "DISPLAY_MODE_EDIT",
                          "error": "",
                          "id": "111",
                          "isSelected": false,
                          "values": Array [
                            "titi",
                            "tata",
                          ],
                        },
                      ]
                    }
                    noRowsRenderer={[Function]}
                    onRowsRendered={[Function]}
                    onScroll={[Function]}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    rowCount={1}
                    rowHeight={[Function]}
                    rowRenderer={[Function]}
                    scrollToAlignment="auto"
                    scrollToIndex={-1}
                    style={Object {}}
                    width={30}
                  >
                    <Grid
                      actions={
                        Array [
                          Object {
                            "disabled": false,
                            "icon": "talend-pencil",
                            "id": "edit",
                            "label": "Edit",
                            "onClick": [Function],
                          },
                          Object {
                            "icon": "talend-trash",
                            "id": "delete",
                            "label": "Remove value",
                            "onClick": [Function],
                          },
                        ]
                      }
                      aria-label="grid"
                      autoContainerWidth={true}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className="ReactVirtualized__List undefined"
                      columnCount={1}
                      columnWidth={30}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={30}
                      items={
                        Array [
                          Object {
                            "displayMode": "DISPLAY_MODE_EDIT",
                            "error": "",
                            "id": "111",
                            "isSelected": false,
                            "values": Array [
                              "titi",
                              "tata",
                            ],
                          },
                        ]
                      }
                      noContentRenderer={[Function]}
                      noRowsRenderer={[Function]}
                      onRowsRendered={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowRenderer={[Function]}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToIndex={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={0}
                      width={30}
                    >
                      <div
                        aria-label="grid"
                        className="ReactVirtualized__Grid ReactVirtualized__List undefined"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 30,
                            "overflowX": "hidden",
                            "overflowY": "auto",
                            "position": "relative",
                            "width": 30,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          style={
                            Object {
                              "height": 33,
                              "maxHeight": 33,
                              "maxWidth": 30,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": "auto",
                            }
                          }
                        >
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <ItemEdit
                              currentEdit={
                                Object {
                                  "validate": Object {
                                    "disabled": false,
                                  },
                                }
                              }
                              id="0-item"
                              item={
                                Object {
                                  "displayMode": "DISPLAY_MODE_EDIT",
                                  "error": "",
                                  "id": "111",
                                  "index": 0,
                                  "isSelected": false,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": true,
                                        "icon": "talend-check",
                                        "id": "validate",
                                        "label": "Validate",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-cross",
                                        "id": "abort",
                                        "label": "Abort",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onAbortItem": [Function],
                                    "onChangeItem": [Function],
                                    "onSubmitItem": [Function],
                                  },
                                  "values": Array [
                                    "titi",
                                    "tata",
                                  ],
                                }
                              }
                            >
                              <li
                                className="undefined tc-enumeration-item"
                                id="0-item"
                              >
                                <input
                                  autoFocus={true}
                                  className="undefined tc-enumeration-item-label"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                />
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-check"
                                    inProgress={false}
                                    label="Validate"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Validate"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-check"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-check"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-cross"
                                    inProgress={false}
                                    label="Abort"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Abort"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-cross"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-cross"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </ItemEdit>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </List>
                </div>
              </Component>
            </ul>
          </Items>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should be in search mode 1`] = `
<EnumerationWidget>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_SEARCH"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_SEARCH"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <HeaderInput
            headerInput={
              Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check-plus",
                  "id": "validate-and-add",
                  "key": "validateAdd",
                  "label": "Validate and Add",
                  "onClick": [Function],
                },
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "key": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-cross",
                  "id": "abort",
                  "key": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ]
            }
            inputPlaceholder="Search"
            inputRef={[Function]}
            onAddKeyDown={[Function]}
            onInputChange={[Function]}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <input
                autoFocus={true}
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="Search"
                type="text"
              />
              <Action
                available={true}
                bsStyle="default"
                disabled={true}
                hideLabel={true}
                icon="talend-check-plus"
                inProgress={false}
                label="Validate and Add"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Validate and Add"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={true}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-check-plus"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-check-plus"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
              <Action
                available={true}
                bsStyle="default"
                disabled={true}
                hideLabel={true}
                icon="talend-check"
                inProgress={false}
                label="Validate"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Validate"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={true}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-check"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-check"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
              <Action
                available={true}
                bsStyle="default"
                disabled={false}
                hideLabel={true}
                icon="talend-cross"
                inProgress={false}
                label="Abort"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Abort"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={false}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-cross"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-cross"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
            </header>
          </HeaderInput>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_SEARCH"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_SEARCH"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              No results
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should delete an item 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "111",
        "values": Array [
          "titi",
          "tata",
        ],
      },
    ]
  }
  onChange={[Function]}
>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_DEFAULT"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              The list is empty
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should delete an item with callHandler 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "11212242",
        "values": Array [
          "titi",
          "tata",
        ],
      },
    ]
  }
  onChange={[Function]}
  registry={
    Object {
      "formContext": Object {
        "handleAction": [Function],
      },
    }
  }
>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={
        Array [
          Object {
            "id": "11212242",
            "values": Array [
              "titi",
              "tata",
            ],
          },
        ]
      }
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "icon": "talend-cross",
              "id": "loading",
              "inProgress": true,
              "label": "Loading",
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "id": "11212242",
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "icon": "talend-cross",
                  "id": "loading",
                  "inProgress": true,
                  "label": "Loading",
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "id": "11212242",
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "icon": "talend-cross",
                  "id": "loading",
                  "inProgress": true,
                  "label": "Loading",
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Items
            items={
              Array [
                Object {
                  "id": "11212242",
                  "values": Array [
                    "titi",
                    "tata",
                  ],
                },
              ]
            }
            itemsProp={
              Object {
                "actionsDefault": Array [
                  Object {
                    "icon": "talend-cross",
                    "id": "loading",
                    "inProgress": true,
                    "label": "Loading",
                  },
                ],
                "actionsEdit": Array [
                  Object {
                    "disabled": true,
                    "icon": "talend-check",
                    "id": "validate",
                    "label": "Validate",
                    "onClick": [Function],
                  },
                  Object {
                    "disabled": false,
                    "icon": "talend-cross",
                    "id": "abort",
                    "label": "Abort",
                    "onClick": [Function],
                  },
                ],
                "getItemHeight": [Function],
                "key": "values",
                "onAbortItem": [Function],
                "onChangeItem": [Function],
                "onLoadData": [Function],
                "onSelectItem": [Function],
                "onSubmitItem": [Function],
              }
            }
          >
            <ul
              className="undefined tc-enumeration-items"
              onScroll={[Function]}
            >
              <Component>
                <div
                  id="autoSizer"
                >
                  <List
                    actions={
                      Array [
                        Object {
                          "icon": "talend-cross",
                          "id": "loading",
                          "inProgress": true,
                          "label": "Loading",
                        },
                      ]
                    }
                    className="undefined"
                    estimatedRowSize={30}
                    height={30}
                    items={
                      Array [
                        Object {
                          "id": "11212242",
                          "values": Array [
                            "titi",
                            "tata",
                          ],
                        },
                      ]
                    }
                    noRowsRenderer={[Function]}
                    onRowsRendered={[Function]}
                    onScroll={[Function]}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    rowCount={1}
                    rowHeight={[Function]}
                    rowRenderer={[Function]}
                    scrollToAlignment="auto"
                    scrollToIndex={-1}
                    style={Object {}}
                    width={30}
                  >
                    <Grid
                      actions={
                        Array [
                          Object {
                            "icon": "talend-cross",
                            "id": "loading",
                            "inProgress": true,
                            "label": "Loading",
                          },
                        ]
                      }
                      aria-label="grid"
                      autoContainerWidth={true}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className="ReactVirtualized__List undefined"
                      columnCount={1}
                      columnWidth={30}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={30}
                      items={
                        Array [
                          Object {
                            "id": "11212242",
                            "values": Array [
                              "titi",
                              "tata",
                            ],
                          },
                        ]
                      }
                      noContentRenderer={[Function]}
                      noRowsRenderer={[Function]}
                      onRowsRendered={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowRenderer={[Function]}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToIndex={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={0}
                      width={30}
                    >
                      <div
                        aria-label="grid"
                        className="ReactVirtualized__Grid ReactVirtualized__List undefined"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 30,
                            "overflowX": "hidden",
                            "overflowY": "auto",
                            "position": "relative",
                            "width": 30,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          style={
                            Object {
                              "height": 33,
                              "maxHeight": 33,
                              "maxWidth": 30,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": "auto",
                            }
                          }
                        >
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="0-item"
                              item={
                                Object {
                                  "id": "11212242",
                                  "index": 0,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "icon": "talend-cross",
                                        "id": "loading",
                                        "inProgress": true,
                                        "label": "Loading",
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi",
                                    "tata",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "icon": "talend-cross",
                                      "id": "loading",
                                      "inProgress": true,
                                      "label": "Loading",
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="tc-enumeration-item"
                                id="0-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi,tata"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi,tata"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi,tata
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-cross"
                                    inProgress={true}
                                    label="Loading"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Loading"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={true}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={true}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <CircularProgress
                                            size="small"
                                          >
                                            <svg
                                              className=""
                                              focusable="false"
                                              viewBox="0 0 50 50"
                                            >
                                              <circle
                                                cx={25}
                                                cy={25}
                                                fill="none"
                                                r={20}
                                                style={
                                                  Object {
                                                    "strokeDasharray": 12.566370614359172,
                                                    "strokeDashoffset": 0,
                                                  }
                                                }
                                              />
                                            </svg>
                                          </CircularProgress>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </List>
                </div>
              </Component>
            </ul>
          </Items>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should select an item 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "111",
        "values": Array [
          "titi",
          "tata",
        ],
      },
    ]
  }
  onChange={[Function]}
>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_SELECTED"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={
        Array [
          Object {
            "displayMode": "DISPLAY_MODE_DEFAULT",
            "id": "111",
            "isSelected": true,
            "values": Array [
              "titi",
              "tata",
            ],
          },
        ]
      }
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_SELECTED"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "displayMode": "DISPLAY_MODE_DEFAULT",
                "id": "111",
                "isSelected": true,
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <HeaderSelected
            headerSelected={
              Array [
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove selected values",
                  "onClick": [Function],
                },
              ]
            }
            nbItemsSelected={1}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                1 selected value
              </span>
              <Action
                available={true}
                bsStyle="default"
                disabled={false}
                hideLabel={true}
                icon="talend-trash"
                inProgress={false}
                label="Remove selected values"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Remove selected values"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={false}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-trash"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-trash"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
            </header>
          </HeaderSelected>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_SELECTED"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "displayMode": "DISPLAY_MODE_DEFAULT",
                "id": "111",
                "isSelected": true,
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Items
            items={
              Array [
                Object {
                  "displayMode": "DISPLAY_MODE_DEFAULT",
                  "id": "111",
                  "isSelected": true,
                  "values": Array [
                    "titi",
                    "tata",
                  ],
                },
              ]
            }
            itemsProp={
              Object {
                "actionsDefault": Array [
                  Object {
                    "disabled": false,
                    "icon": "talend-pencil",
                    "id": "edit",
                    "label": "Edit",
                    "onClick": [Function],
                  },
                  Object {
                    "icon": "talend-trash",
                    "id": "delete",
                    "label": "Remove value",
                    "onClick": [Function],
                  },
                ],
                "actionsEdit": Array [
                  Object {
                    "disabled": true,
                    "icon": "talend-check",
                    "id": "validate",
                    "label": "Validate",
                    "onClick": [Function],
                  },
                  Object {
                    "disabled": false,
                    "icon": "talend-cross",
                    "id": "abort",
                    "label": "Abort",
                    "onClick": [Function],
                  },
                ],
                "getItemHeight": [Function],
                "key": "values",
                "onAbortItem": [Function],
                "onChangeItem": [Function],
                "onLoadData": [Function],
                "onSelectItem": [Function],
                "onSubmitItem": [Function],
              }
            }
          >
            <ul
              className="undefined tc-enumeration-items"
              onScroll={[Function]}
            >
              <Component>
                <div
                  id="autoSizer"
                >
                  <List
                    actions={
                      Array [
                        Object {
                          "disabled": false,
                          "icon": "talend-pencil",
                          "id": "edit",
                          "label": "Edit",
                          "onClick": [Function],
                        },
                        Object {
                          "icon": "talend-trash",
                          "id": "delete",
                          "label": "Remove value",
                          "onClick": [Function],
                        },
                      ]
                    }
                    className="undefined"
                    estimatedRowSize={30}
                    height={30}
                    items={
                      Array [
                        Object {
                          "displayMode": "DISPLAY_MODE_DEFAULT",
                          "id": "111",
                          "isSelected": true,
                          "values": Array [
                            "titi",
                            "tata",
                          ],
                        },
                      ]
                    }
                    noRowsRenderer={[Function]}
                    onRowsRendered={[Function]}
                    onScroll={[Function]}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    rowCount={1}
                    rowHeight={[Function]}
                    rowRenderer={[Function]}
                    scrollToAlignment="auto"
                    scrollToIndex={-1}
                    style={Object {}}
                    width={30}
                  >
                    <Grid
                      actions={
                        Array [
                          Object {
                            "disabled": false,
                            "icon": "talend-pencil",
                            "id": "edit",
                            "label": "Edit",
                            "onClick": [Function],
                          },
                          Object {
                            "icon": "talend-trash",
                            "id": "delete",
                            "label": "Remove value",
                            "onClick": [Function],
                          },
                        ]
                      }
                      aria-label="grid"
                      autoContainerWidth={true}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className="ReactVirtualized__List undefined"
                      columnCount={1}
                      columnWidth={30}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={30}
                      items={
                        Array [
                          Object {
                            "displayMode": "DISPLAY_MODE_DEFAULT",
                            "id": "111",
                            "isSelected": true,
                            "values": Array [
                              "titi",
                              "tata",
                            ],
                          },
                        ]
                      }
                      noContentRenderer={[Function]}
                      noRowsRenderer={[Function]}
                      onRowsRendered={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowRenderer={[Function]}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToIndex={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={0}
                      width={30}
                    >
                      <div
                        aria-label="grid"
                        className="ReactVirtualized__Grid ReactVirtualized__List undefined"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 30,
                            "overflowX": "hidden",
                            "overflowY": "auto",
                            "position": "relative",
                            "width": 30,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          style={
                            Object {
                              "height": 33,
                              "maxHeight": 33,
                              "maxWidth": 30,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": "auto",
                            }
                          }
                        >
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="0-item"
                              item={
                                Object {
                                  "displayMode": "DISPLAY_MODE_DEFAULT",
                                  "id": "111",
                                  "index": 0,
                                  "isSelected": true,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi",
                                    "tata",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="undefined tc-enumeration-item selected-item"
                                id="0-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi,tata"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi,tata"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi,tata
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </List>
                </div>
              </Component>
            </ul>
          </Items>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget should select multiple  items 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "111",
        "values": Array [
          "titi",
          "tata",
        ],
      },
      Object {
        "id": "112",
        "values": Array [
          "titi2",
          "tata2",
        ],
      },
    ]
  }
  onChange={[Function]}
>
  <div>
    <Enumeration
      displayMode="DISPLAY_MODE_SELECTED"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={
        Array [
          Object {
            "displayMode": "DISPLAY_MODE_DEFAULT",
            "id": "111",
            "isSelected": true,
            "values": Array [
              "titi",
              "tata",
            ],
          },
          Object {
            "displayMode": "DISPLAY_MODE_DEFAULT",
            "id": "112",
            "isSelected": true,
            "values": Array [
              "titi2",
              "tata2",
            ],
          },
        ]
      }
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_SELECTED"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "displayMode": "DISPLAY_MODE_DEFAULT",
                "id": "111",
                "isSelected": true,
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
              Object {
                "displayMode": "DISPLAY_MODE_DEFAULT",
                "id": "112",
                "isSelected": true,
                "values": Array [
                  "titi2",
                  "tata2",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <HeaderSelected
            headerSelected={
              Array [
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove selected values",
                  "onClick": [Function],
                },
              ]
            }
            nbItemsSelected={2}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                2 selected values
              </span>
              <Action
                available={true}
                bsStyle="default"
                disabled={false}
                hideLabel={true}
                icon="talend-trash"
                inProgress={false}
                label="Remove selected values"
                link={true}
                onClick={[Function]}
                tooltipPlacement="bottom"
              >
                <TooltipTrigger
                  label="Remove selected values"
                  tooltipPlacement="bottom"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="link"
                    disabled={false}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseOver={[Function]}
                    role="link"
                  >
                    <button
                      className="btn btn-link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                      type="button"
                    >
                      <Icon
                        name="talend-trash"
                      >
                        <svg
                          aria-hidden="true"
                          className="tc-svg-icon"
                          focusable="false"
                          title={null}
                        >
                          <use
                            xlinkHref="#talend-trash"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </Button>
                </TooltipTrigger>
              </Action>
            </header>
          </HeaderSelected>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_SELECTED"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "displayMode": "DISPLAY_MODE_DEFAULT",
                "id": "111",
                "isSelected": true,
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
              Object {
                "displayMode": "DISPLAY_MODE_DEFAULT",
                "id": "112",
                "isSelected": true,
                "values": Array [
                  "titi2",
                  "tata2",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Items
            items={
              Array [
                Object {
                  "displayMode": "DISPLAY_MODE_DEFAULT",
                  "id": "111",
                  "isSelected": true,
                  "values": Array [
                    "titi",
                    "tata",
                  ],
                },
                Object {
                  "displayMode": "DISPLAY_MODE_DEFAULT",
                  "id": "112",
                  "isSelected": true,
                  "values": Array [
                    "titi2",
                    "tata2",
                  ],
                },
              ]
            }
            itemsProp={
              Object {
                "actionsDefault": Array [
                  Object {
                    "disabled": false,
                    "icon": "talend-pencil",
                    "id": "edit",
                    "label": "Edit",
                    "onClick": [Function],
                  },
                  Object {
                    "icon": "talend-trash",
                    "id": "delete",
                    "label": "Remove value",
                    "onClick": [Function],
                  },
                ],
                "actionsEdit": Array [
                  Object {
                    "disabled": true,
                    "icon": "talend-check",
                    "id": "validate",
                    "label": "Validate",
                    "onClick": [Function],
                  },
                  Object {
                    "disabled": false,
                    "icon": "talend-cross",
                    "id": "abort",
                    "label": "Abort",
                    "onClick": [Function],
                  },
                ],
                "getItemHeight": [Function],
                "key": "values",
                "onAbortItem": [Function],
                "onChangeItem": [Function],
                "onLoadData": [Function],
                "onSelectItem": [Function],
                "onSubmitItem": [Function],
              }
            }
          >
            <ul
              className="undefined tc-enumeration-items"
              onScroll={[Function]}
            >
              <Component>
                <div
                  id="autoSizer"
                >
                  <List
                    actions={
                      Array [
                        Object {
                          "disabled": false,
                          "icon": "talend-pencil",
                          "id": "edit",
                          "label": "Edit",
                          "onClick": [Function],
                        },
                        Object {
                          "icon": "talend-trash",
                          "id": "delete",
                          "label": "Remove value",
                          "onClick": [Function],
                        },
                      ]
                    }
                    className="undefined"
                    estimatedRowSize={30}
                    height={30}
                    items={
                      Array [
                        Object {
                          "displayMode": "DISPLAY_MODE_DEFAULT",
                          "id": "111",
                          "isSelected": true,
                          "values": Array [
                            "titi",
                            "tata",
                          ],
                        },
                        Object {
                          "displayMode": "DISPLAY_MODE_DEFAULT",
                          "id": "112",
                          "isSelected": true,
                          "values": Array [
                            "titi2",
                            "tata2",
                          ],
                        },
                      ]
                    }
                    noRowsRenderer={[Function]}
                    onRowsRendered={[Function]}
                    onScroll={[Function]}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    rowCount={2}
                    rowHeight={[Function]}
                    rowRenderer={[Function]}
                    scrollToAlignment="auto"
                    scrollToIndex={-1}
                    style={Object {}}
                    width={30}
                  >
                    <Grid
                      actions={
                        Array [
                          Object {
                            "disabled": false,
                            "icon": "talend-pencil",
                            "id": "edit",
                            "label": "Edit",
                            "onClick": [Function],
                          },
                          Object {
                            "icon": "talend-trash",
                            "id": "delete",
                            "label": "Remove value",
                            "onClick": [Function],
                          },
                        ]
                      }
                      aria-label="grid"
                      autoContainerWidth={true}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className="ReactVirtualized__List undefined"
                      columnCount={1}
                      columnWidth={30}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={30}
                      items={
                        Array [
                          Object {
                            "displayMode": "DISPLAY_MODE_DEFAULT",
                            "id": "111",
                            "isSelected": true,
                            "values": Array [
                              "titi",
                              "tata",
                            ],
                          },
                          Object {
                            "displayMode": "DISPLAY_MODE_DEFAULT",
                            "id": "112",
                            "isSelected": true,
                            "values": Array [
                              "titi2",
                              "tata2",
                            ],
                          },
                        ]
                      }
                      noContentRenderer={[Function]}
                      noRowsRenderer={[Function]}
                      onRowsRendered={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowRenderer={[Function]}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToIndex={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={0}
                      width={30}
                    >
                      <div
                        aria-label="grid"
                        className="ReactVirtualized__Grid ReactVirtualized__List undefined"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 30,
                            "overflowX": "hidden",
                            "overflowY": "auto",
                            "position": "relative",
                            "width": 30,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          style={
                            Object {
                              "height": 66,
                              "maxHeight": 66,
                              "maxWidth": 30,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": "auto",
                            }
                          }
                        >
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="0-item"
                              item={
                                Object {
                                  "displayMode": "DISPLAY_MODE_DEFAULT",
                                  "id": "111",
                                  "index": 0,
                                  "isSelected": true,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi",
                                    "tata",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="undefined tc-enumeration-item selected-item"
                                id="0-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi,tata"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi,tata"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi,tata
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 33,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="1-item"
                              item={
                                Object {
                                  "displayMode": "DISPLAY_MODE_DEFAULT",
                                  "id": "112",
                                  "index": 1,
                                  "isSelected": true,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi2",
                                    "tata2",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="undefined tc-enumeration-item selected-item"
                                id="1-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi2,tata2"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi2,tata2"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi2,tata2
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </List>
                </div>
              </Component>
            </ul>
          </Items>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget upload file should add a upload icon 1`] = `
<EnumerationWidget
  schema={
    Object {
      "allowImport": true,
    }
  }
>
  <div>
    <input
      className="hidden"
      onChange={[Function]}
      type="file"
    />
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "displayMode": "dropdown",
            "icon": "talend-download",
            "id": "upload",
            "items": Array [
              Object {
                "id": "append-uploding",
                "label": "Add values from a file",
                "onClick": [Function],
              },
              Object {
                "id": "append-uploding",
                "label": "Overwrite existing values",
                "onClick": [Function],
              },
            ],
            "label": "Import values from a file",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={Array []}
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "displayMode": "dropdown",
                "icon": "talend-download",
                "id": "upload",
                "items": Array [
                  Object {
                    "id": "append-uploding",
                    "label": "Add values from a file",
                    "onClick": [Function],
                  },
                  Object {
                    "id": "append-uploding",
                    "label": "Overwrite existing values",
                    "onClick": [Function],
                  },
                ],
                "label": "Import values from a file",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "displayMode": "dropdown",
                  "icon": "talend-download",
                  "id": "upload",
                  "items": Array [
                    Object {
                      "id": "append-uploding",
                      "label": "Add values from a file",
                      "onClick": [Function],
                    },
                    Object {
                      "id": "append-uploding",
                      "label": "Overwrite existing values",
                      "onClick": [Function],
                    },
                  ],
                  "label": "Import values from a file",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <ActionDropdown
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  hideLabel={true}
                  icon="talend-download"
                  items={
                    Array [
                      Object {
                        "id": "append-uploding",
                        "label": "Add values from a file",
                        "onClick": [Function],
                      },
                      Object {
                        "id": "append-uploding",
                        "label": "Overwrite existing values",
                        "onClick": [Function],
                      },
                    ]
                  }
                  label="Import values from a file"
                  link={true}
                  noCaret={true}
                  onClick={[Function]}
                  pullRight={true}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Import values from a file"
                    tooltipPlacement="top"
                  >
                    <DropdownButton
                      bsStyle="link"
                      btooltipPlacement="bottom"
                      noCaret={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseOver={[Function]}
                      onSelect={[Function]}
                      pullRight={true}
                      role="button"
                      title={
                        <span>
                          <Icon
                            name="talend-download"
                          />
                        </span>
                      }
                    >
                      <Uncontrolled(Dropdown)
                        bsStyle="link"
                        onSelect={[Function]}
                        pullRight={true}
                        role="button"
                      >
                        <Dropdown
                          bsClass="dropdown"
                          bsStyle="link"
                          componentClass={[Function]}
                          onSelect={[Function]}
                          onToggle={[Function]}
                          pullRight={true}
                          role="button"
                        >
                          <ButtonGroup
                            block={false}
                            bsClass="btn-group"
                            bsStyle="link"
                            className="dropdown"
                            justified={false}
                            vertical={false}
                          >
                            <div
                              className="dropdown btn-group btn-group-link"
                            >
                              <DropdownToggle
                                bsClass="dropdown-toggle"
                                bsRole="toggle"
                                bsStyle="link"
                                btooltipPlacement="bottom"
                                noCaret={true}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onMouseOver={[Function]}
                                open={false}
                                role="button"
                                useAnchor={false}
                              >
                                <Button
                                  active={false}
                                  aria-expanded={false}
                                  aria-haspopup={true}
                                  block={false}
                                  bsClass="btn"
                                  bsStyle="link"
                                  btooltipPlacement="bottom"
                                  className="dropdown-toggle"
                                  disabled={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseOver={[Function]}
                                  role="button"
                                >
                                  <button
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    btooltipPlacement="bottom"
                                    className="dropdown-toggle btn btn-link"
                                    disabled={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseOver={[Function]}
                                    role="button"
                                    type="button"
                                  >
                                    <span>
                                      <Icon
                                        name="talend-download"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="tc-svg-icon"
                                          focusable="false"
                                          title={null}
                                        >
                                          <use
                                            xlinkHref="#talend-download"
                                          />
                                        </svg>
                                      </Icon>
                                    </span>
                                  </button>
                                </Button>
                              </DropdownToggle>
                              <DropdownMenu
                                bsClass="dropdown-menu"
                                bsRole="menu"
                                onClose={[Function]}
                                onSelect={[Function]}
                                pullRight={true}
                              >
                                <RootCloseWrapper
                                  disabled={true}
                                  event="click"
                                  onRootClose={[Function]}
                                >
                                  <ul
                                    className="dropdown-menu dropdown-menu-right"
                                    role="menu"
                                  >
                                    <MenuItem
                                      bsClass="dropdown"
                                      disabled={false}
                                      divider={false}
                                      eventKey={
                                        Object {
                                          "id": "append-uploding",
                                          "label": "Add values from a file",
                                          "onClick": [Function],
                                        }
                                      }
                                      header={false}
                                      id="append-uploding"
                                      label="Add values from a file"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onSelect={[Function]}
                                    >
                                      <li
                                        className=""
                                        role="presentation"
                                      >
                                        <SafeAnchor
                                          componentClass="a"
                                          id="append-uploding"
                                          label="Add values from a file"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex="-1"
                                        >
                                          <a
                                            href="#"
                                            id="append-uploding"
                                            label="Add values from a file"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex="-1"
                                          >
                                            Add values from a file
                                          </a>
                                        </SafeAnchor>
                                      </li>
                                    </MenuItem>
                                    <MenuItem
                                      bsClass="dropdown"
                                      disabled={false}
                                      divider={false}
                                      eventKey={
                                        Object {
                                          "id": "append-uploding",
                                          "label": "Overwrite existing values",
                                          "onClick": [Function],
                                        }
                                      }
                                      header={false}
                                      id="append-uploding"
                                      label="Overwrite existing values"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onSelect={[Function]}
                                    >
                                      <li
                                        className=""
                                        role="presentation"
                                      >
                                        <SafeAnchor
                                          componentClass="a"
                                          id="append-uploding"
                                          label="Overwrite existing values"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex="-1"
                                        >
                                          <a
                                            href="#"
                                            id="append-uploding"
                                            label="Overwrite existing values"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex="-1"
                                          >
                                            Overwrite existing values
                                          </a>
                                        </SafeAnchor>
                                      </li>
                                    </MenuItem>
                                  </ul>
                                </RootCloseWrapper>
                              </DropdownMenu>
                            </div>
                          </ButtonGroup>
                        </Dropdown>
                      </Uncontrolled(Dropdown)>
                    </DropdownButton>
                  </TooltipTrigger>
                </ActionDropdown>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "displayMode": "dropdown",
                "icon": "talend-download",
                "id": "upload",
                "items": Array [
                  Object {
                    "id": "append-uploding",
                    "label": "Add values from a file",
                    "onClick": [Function],
                  },
                  Object {
                    "id": "append-uploding",
                    "label": "Overwrite existing values",
                    "onClick": [Function],
                  },
                ],
                "label": "Import values from a file",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={Array []}
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <EmptyListPlaceholder
            displayMode="DISPLAY_MODE_DEFAULT"
          >
            <p
              className="undefined tc-enumeration-hint"
            >
              The list is empty
            </p>
          </EmptyListPlaceholder>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget upload file should trigger a event when the user clicks on the upload action, shows a loading and return to initial state when we call the success callback 1`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "111",
        "values": Array [
          "titi",
          "tata",
        ],
      },
      Object {
        "id": "112",
        "values": Array [
          "titi2",
          "tata2",
        ],
      },
    ]
  }
  id="enumeration"
  registry={
    Object {
      "formContext": Object {
        "handleAction": [Function],
      },
    }
  }
  schema={
    Object {
      "allowImport": true,
    }
  }
>
  <div>
    <input
      className="hidden"
      onChange={[Function]}
      type="file"
    />
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "icon": "talend-cross",
            "id": "loading",
            "inProgress": true,
            "label": "Loading",
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={
        Array [
          Object {
            "id": "111",
            "values": Array [
              "titi",
              "tata",
            ],
          },
          Object {
            "id": "112",
            "values": Array [
              "titi2",
              "tata2",
            ],
          },
        ]
      }
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "icon": "talend-cross",
                "id": "loading",
                "inProgress": true,
                "label": "Loading",
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "id": "111",
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
              Object {
                "id": "112",
                "values": Array [
                  "titi2",
                  "tata2",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "icon": "talend-cross",
                  "id": "loading",
                  "inProgress": true,
                  "label": "Loading",
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-cross"
                  inProgress={true}
                  label="Loading"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Loading"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={true}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <CircularProgress
                          size="small"
                        >
                          <svg
                            className=""
                            focusable="false"
                            viewBox="0 0 50 50"
                          >
                            <circle
                              cx={25}
                              cy={25}
                              fill="none"
                              r={20}
                              style={
                                Object {
                                  "strokeDasharray": 12.566370614359172,
                                  "strokeDashoffset": 0,
                                }
                              }
                            />
                          </svg>
                        </CircularProgress>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "icon": "talend-cross",
                "id": "loading",
                "inProgress": true,
                "label": "Loading",
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "id": "111",
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
              Object {
                "id": "112",
                "values": Array [
                  "titi2",
                  "tata2",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Items
            items={
              Array [
                Object {
                  "id": "111",
                  "values": Array [
                    "titi",
                    "tata",
                  ],
                },
                Object {
                  "id": "112",
                  "values": Array [
                    "titi2",
                    "tata2",
                  ],
                },
              ]
            }
            itemsProp={
              Object {
                "actionsDefault": Array [
                  Object {
                    "disabled": false,
                    "icon": "talend-pencil",
                    "id": "edit",
                    "label": "Edit",
                    "onClick": [Function],
                  },
                  Object {
                    "icon": "talend-trash",
                    "id": "delete",
                    "label": "Remove value",
                    "onClick": [Function],
                  },
                ],
                "actionsEdit": Array [
                  Object {
                    "disabled": true,
                    "icon": "talend-check",
                    "id": "validate",
                    "label": "Validate",
                    "onClick": [Function],
                  },
                  Object {
                    "disabled": false,
                    "icon": "talend-cross",
                    "id": "abort",
                    "label": "Abort",
                    "onClick": [Function],
                  },
                ],
                "getItemHeight": [Function],
                "key": "values",
                "onAbortItem": [Function],
                "onChangeItem": [Function],
                "onLoadData": [Function],
                "onSelectItem": [Function],
                "onSubmitItem": [Function],
              }
            }
          >
            <ul
              className="undefined tc-enumeration-items"
              onScroll={[Function]}
            >
              <Component>
                <div
                  id="autoSizer"
                >
                  <List
                    actions={
                      Array [
                        Object {
                          "disabled": false,
                          "icon": "talend-pencil",
                          "id": "edit",
                          "label": "Edit",
                          "onClick": [Function],
                        },
                        Object {
                          "icon": "talend-trash",
                          "id": "delete",
                          "label": "Remove value",
                          "onClick": [Function],
                        },
                      ]
                    }
                    className="undefined"
                    estimatedRowSize={30}
                    height={30}
                    items={
                      Array [
                        Object {
                          "id": "111",
                          "values": Array [
                            "titi",
                            "tata",
                          ],
                        },
                        Object {
                          "id": "112",
                          "values": Array [
                            "titi2",
                            "tata2",
                          ],
                        },
                      ]
                    }
                    noRowsRenderer={[Function]}
                    onRowsRendered={[Function]}
                    onScroll={[Function]}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    rowCount={2}
                    rowHeight={[Function]}
                    rowRenderer={[Function]}
                    scrollToAlignment="auto"
                    scrollToIndex={-1}
                    style={Object {}}
                    width={30}
                  >
                    <Grid
                      actions={
                        Array [
                          Object {
                            "disabled": false,
                            "icon": "talend-pencil",
                            "id": "edit",
                            "label": "Edit",
                            "onClick": [Function],
                          },
                          Object {
                            "icon": "talend-trash",
                            "id": "delete",
                            "label": "Remove value",
                            "onClick": [Function],
                          },
                        ]
                      }
                      aria-label="grid"
                      autoContainerWidth={true}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className="ReactVirtualized__List undefined"
                      columnCount={1}
                      columnWidth={30}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={30}
                      items={
                        Array [
                          Object {
                            "id": "111",
                            "values": Array [
                              "titi",
                              "tata",
                            ],
                          },
                          Object {
                            "id": "112",
                            "values": Array [
                              "titi2",
                              "tata2",
                            ],
                          },
                        ]
                      }
                      noContentRenderer={[Function]}
                      noRowsRenderer={[Function]}
                      onRowsRendered={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowRenderer={[Function]}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToIndex={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={0}
                      width={30}
                    >
                      <div
                        aria-label="grid"
                        className="ReactVirtualized__Grid ReactVirtualized__List undefined"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 30,
                            "overflowX": "hidden",
                            "overflowY": "auto",
                            "position": "relative",
                            "width": 30,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          style={
                            Object {
                              "height": 66,
                              "maxHeight": 66,
                              "maxWidth": 30,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": "auto",
                            }
                          }
                        >
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="0-item"
                              item={
                                Object {
                                  "id": "111",
                                  "index": 0,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi",
                                    "tata",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="tc-enumeration-item"
                                id="0-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi,tata"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi,tata"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi,tata
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 33,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="1-item"
                              item={
                                Object {
                                  "id": "112",
                                  "index": 1,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi2",
                                    "tata2",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="tc-enumeration-item"
                                id="1-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi2,tata2"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi2,tata2"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi2,tata2
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </List>
                </div>
              </Component>
            </ul>
          </Items>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;

exports[`EnumerationWidget upload file should trigger a event when the user clicks on the upload action, shows a loading and return to initial state when we call the success callback 2`] = `
<EnumerationWidget
  formData={
    Array [
      Object {
        "id": "111",
        "values": Array [
          "titi",
          "tata",
        ],
      },
      Object {
        "id": "112",
        "values": Array [
          "titi2",
          "tata2",
        ],
      },
    ]
  }
  id="enumeration"
  registry={
    Object {
      "formContext": Object {
        "handleAction": [Function],
      },
    }
  }
  schema={
    Object {
      "allowImport": true,
    }
  }
>
  <div>
    <input
      className="hidden"
      onChange={[Function]}
      type="file"
    />
    <Enumeration
      displayMode="DISPLAY_MODE_DEFAULT"
      headerDefault={
        Array [
          Object {
            "disabled": false,
            "icon": "talend-search",
            "id": "search",
            "label": "Search for specific values",
            "onClick": [Function],
          },
          Object {
            "displayMode": "dropdown",
            "icon": "talend-download",
            "id": "upload",
            "items": Array [
              Object {
                "id": "append-uploding",
                "label": "Add values from a file",
                "onClick": [Function],
              },
              Object {
                "id": "append-uploding",
                "label": "Overwrite existing values",
                "onClick": [Function],
              },
            ],
            "label": "Import values from a file",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-plus",
            "id": "add",
            "label": "Add item",
            "onClick": [Function],
          },
        ]
      }
      headerInput={
        Array [
          Object {
            "disabled": true,
            "icon": "talend-check-plus",
            "id": "validate-and-add",
            "key": "validateAdd",
            "label": "Validate and Add",
            "onClick": [Function],
          },
          Object {
            "disabled": true,
            "icon": "talend-check",
            "id": "validate",
            "key": "validate",
            "label": "Validate",
            "onClick": [Function],
          },
          Object {
            "icon": "talend-cross",
            "id": "abort",
            "key": "abort",
            "label": "Abort",
            "onClick": [Function],
          },
        ]
      }
      headerSelected={
        Array [
          Object {
            "icon": "talend-trash",
            "id": "delete",
            "label": "Remove selected values",
            "onClick": [Function],
          },
        ]
      }
      inputRef={[Function]}
      items={
        Array [
          Object {
            "id": "111",
            "values": Array [
              "titi",
              "tata",
            ],
          },
          Object {
            "id": "112",
            "values": Array [
              "titi2",
              "tata2",
            ],
          },
        ]
      }
      itemsProp={
        Object {
          "actionsDefault": Array [
            Object {
              "disabled": false,
              "icon": "talend-pencil",
              "id": "edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "talend-trash",
              "id": "delete",
              "label": "Remove value",
              "onClick": [Function],
            },
          ],
          "actionsEdit": Array [
            Object {
              "disabled": true,
              "icon": "talend-check",
              "id": "validate",
              "label": "Validate",
              "onClick": [Function],
            },
            Object {
              "disabled": false,
              "icon": "talend-cross",
              "id": "abort",
              "label": "Abort",
              "onClick": [Function],
            },
          ],
          "getItemHeight": [Function],
          "key": "values",
          "onAbortItem": [Function],
          "onChangeItem": [Function],
          "onLoadData": [Function],
          "onSelectItem": [Function],
          "onSubmitItem": [Function],
        }
      }
      onAddKeyDown={[Function]}
      onInputChange={[Function]}
      required={false}
      setFormData={[Function]}
    >
      <div
        className="undefined tc-enumeration"
      >
        <HeaderEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "displayMode": "dropdown",
                "icon": "talend-download",
                "id": "upload",
                "items": Array [
                  Object {
                    "id": "append-uploding",
                    "label": "Add values from a file",
                    "onClick": [Function],
                  },
                  Object {
                    "id": "append-uploding",
                    "label": "Overwrite existing values",
                    "onClick": [Function],
                  },
                ],
                "label": "Import values from a file",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "id": "111",
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
              Object {
                "id": "112",
                "values": Array [
                  "titi2",
                  "tata2",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Header
            headerDefault={
              Array [
                Object {
                  "disabled": false,
                  "icon": "talend-search",
                  "id": "search",
                  "label": "Search for specific values",
                  "onClick": [Function],
                },
                Object {
                  "displayMode": "dropdown",
                  "icon": "talend-download",
                  "id": "upload",
                  "items": Array [
                    Object {
                      "id": "append-uploding",
                      "label": "Add values from a file",
                      "onClick": [Function],
                    },
                    Object {
                      "id": "append-uploding",
                      "label": "Overwrite existing values",
                      "onClick": [Function],
                    },
                  ],
                  "label": "Import values from a file",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-plus",
                  "id": "add",
                  "label": "Add item",
                  "onClick": [Function],
                },
              ]
            }
            required={false}
          >
            <header
              className="undefined tc-enumeration-header"
            >
              <span>
                Values
              </span>
              <div
                className="actions"
              >
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-search"
                  inProgress={false}
                  label="Search for specific values"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Search for specific values"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-search"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-search"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
                <ActionDropdown
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  hideLabel={true}
                  icon="talend-download"
                  items={
                    Array [
                      Object {
                        "id": "append-uploding",
                        "label": "Add values from a file",
                        "onClick": [Function],
                      },
                      Object {
                        "id": "append-uploding",
                        "label": "Overwrite existing values",
                        "onClick": [Function],
                      },
                    ]
                  }
                  label="Import values from a file"
                  link={true}
                  noCaret={true}
                  onClick={[Function]}
                  pullRight={true}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Import values from a file"
                    tooltipPlacement="top"
                  >
                    <DropdownButton
                      bsStyle="link"
                      btooltipPlacement="bottom"
                      noCaret={true}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseOver={[Function]}
                      onSelect={[Function]}
                      pullRight={true}
                      role="button"
                      title={
                        <span>
                          <Icon
                            name="talend-download"
                          />
                        </span>
                      }
                    >
                      <Uncontrolled(Dropdown)
                        bsStyle="link"
                        onSelect={[Function]}
                        pullRight={true}
                        role="button"
                      >
                        <Dropdown
                          bsClass="dropdown"
                          bsStyle="link"
                          componentClass={[Function]}
                          onSelect={[Function]}
                          onToggle={[Function]}
                          pullRight={true}
                          role="button"
                        >
                          <ButtonGroup
                            block={false}
                            bsClass="btn-group"
                            bsStyle="link"
                            className="dropdown"
                            justified={false}
                            vertical={false}
                          >
                            <div
                              className="dropdown btn-group btn-group-link"
                            >
                              <DropdownToggle
                                bsClass="dropdown-toggle"
                                bsRole="toggle"
                                bsStyle="link"
                                btooltipPlacement="bottom"
                                noCaret={true}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onMouseOver={[Function]}
                                open={false}
                                role="button"
                                useAnchor={false}
                              >
                                <Button
                                  active={false}
                                  aria-expanded={false}
                                  aria-haspopup={true}
                                  block={false}
                                  bsClass="btn"
                                  bsStyle="link"
                                  btooltipPlacement="bottom"
                                  className="dropdown-toggle"
                                  disabled={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseOver={[Function]}
                                  role="button"
                                >
                                  <button
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    btooltipPlacement="bottom"
                                    className="dropdown-toggle btn btn-link"
                                    disabled={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseOver={[Function]}
                                    role="button"
                                    type="button"
                                  >
                                    <span>
                                      <Icon
                                        name="talend-download"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="tc-svg-icon"
                                          focusable="false"
                                          title={null}
                                        >
                                          <use
                                            xlinkHref="#talend-download"
                                          />
                                        </svg>
                                      </Icon>
                                    </span>
                                  </button>
                                </Button>
                              </DropdownToggle>
                              <DropdownMenu
                                bsClass="dropdown-menu"
                                bsRole="menu"
                                onClose={[Function]}
                                onSelect={[Function]}
                                pullRight={true}
                              >
                                <RootCloseWrapper
                                  disabled={true}
                                  event="click"
                                  onRootClose={[Function]}
                                >
                                  <ul
                                    className="dropdown-menu dropdown-menu-right"
                                    role="menu"
                                  >
                                    <MenuItem
                                      bsClass="dropdown"
                                      disabled={false}
                                      divider={false}
                                      eventKey={
                                        Object {
                                          "id": "append-uploding",
                                          "label": "Add values from a file",
                                          "onClick": [Function],
                                        }
                                      }
                                      header={false}
                                      id="append-uploding"
                                      label="Add values from a file"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onSelect={[Function]}
                                    >
                                      <li
                                        className=""
                                        role="presentation"
                                      >
                                        <SafeAnchor
                                          componentClass="a"
                                          id="append-uploding"
                                          label="Add values from a file"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex="-1"
                                        >
                                          <a
                                            href="#"
                                            id="append-uploding"
                                            label="Add values from a file"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex="-1"
                                          >
                                            Add values from a file
                                          </a>
                                        </SafeAnchor>
                                      </li>
                                    </MenuItem>
                                    <MenuItem
                                      bsClass="dropdown"
                                      disabled={false}
                                      divider={false}
                                      eventKey={
                                        Object {
                                          "id": "append-uploding",
                                          "label": "Overwrite existing values",
                                          "onClick": [Function],
                                        }
                                      }
                                      header={false}
                                      id="append-uploding"
                                      label="Overwrite existing values"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onSelect={[Function]}
                                    >
                                      <li
                                        className=""
                                        role="presentation"
                                      >
                                        <SafeAnchor
                                          componentClass="a"
                                          id="append-uploding"
                                          label="Overwrite existing values"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex="-1"
                                        >
                                          <a
                                            href="#"
                                            id="append-uploding"
                                            label="Overwrite existing values"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex="-1"
                                          >
                                            Overwrite existing values
                                          </a>
                                        </SafeAnchor>
                                      </li>
                                    </MenuItem>
                                  </ul>
                                </RootCloseWrapper>
                              </DropdownMenu>
                            </div>
                          </ButtonGroup>
                        </Dropdown>
                      </Uncontrolled(Dropdown)>
                    </DropdownButton>
                  </TooltipTrigger>
                </ActionDropdown>
                <Action
                  available={true}
                  bsStyle="default"
                  btooltipPlacement="bottom"
                  disabled={false}
                  hideLabel={true}
                  icon="talend-plus"
                  inProgress={false}
                  label="Add item"
                  link={true}
                  onClick={[Function]}
                  tooltipPlacement="top"
                >
                  <TooltipTrigger
                    label="Add item"
                    tooltipPlacement="top"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      disabled={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseOver={[Function]}
                      role="link"
                    >
                      <button
                        className="btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseOver={[Function]}
                        role="link"
                        type="button"
                      >
                        <Icon
                          name="talend-plus"
                        >
                          <svg
                            aria-hidden="true"
                            className="tc-svg-icon"
                            focusable="false"
                            title={null}
                          >
                            <use
                              xlinkHref="#talend-plus"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </Button>
                  </TooltipTrigger>
                </Action>
              </div>
            </header>
          </Header>
        </HeaderEnumeration>
        <ItemsEnumeration
          displayMode="DISPLAY_MODE_DEFAULT"
          headerDefault={
            Array [
              Object {
                "disabled": false,
                "icon": "talend-search",
                "id": "search",
                "label": "Search for specific values",
                "onClick": [Function],
              },
              Object {
                "displayMode": "dropdown",
                "icon": "talend-download",
                "id": "upload",
                "items": Array [
                  Object {
                    "id": "append-uploding",
                    "label": "Add values from a file",
                    "onClick": [Function],
                  },
                  Object {
                    "id": "append-uploding",
                    "label": "Overwrite existing values",
                    "onClick": [Function],
                  },
                ],
                "label": "Import values from a file",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-plus",
                "id": "add",
                "label": "Add item",
                "onClick": [Function],
              },
            ]
          }
          headerInput={
            Array [
              Object {
                "disabled": true,
                "icon": "talend-check-plus",
                "id": "validate-and-add",
                "key": "validateAdd",
                "label": "Validate and Add",
                "onClick": [Function],
              },
              Object {
                "disabled": true,
                "icon": "talend-check",
                "id": "validate",
                "key": "validate",
                "label": "Validate",
                "onClick": [Function],
              },
              Object {
                "icon": "talend-cross",
                "id": "abort",
                "key": "abort",
                "label": "Abort",
                "onClick": [Function],
              },
            ]
          }
          headerSelected={
            Array [
              Object {
                "icon": "talend-trash",
                "id": "delete",
                "label": "Remove selected values",
                "onClick": [Function],
              },
            ]
          }
          inputRef={[Function]}
          items={
            Array [
              Object {
                "id": "111",
                "values": Array [
                  "titi",
                  "tata",
                ],
              },
              Object {
                "id": "112",
                "values": Array [
                  "titi2",
                  "tata2",
                ],
              },
            ]
          }
          itemsProp={
            Object {
              "actionsDefault": Array [
                Object {
                  "disabled": false,
                  "icon": "talend-pencil",
                  "id": "edit",
                  "label": "Edit",
                  "onClick": [Function],
                },
                Object {
                  "icon": "talend-trash",
                  "id": "delete",
                  "label": "Remove value",
                  "onClick": [Function],
                },
              ],
              "actionsEdit": Array [
                Object {
                  "disabled": true,
                  "icon": "talend-check",
                  "id": "validate",
                  "label": "Validate",
                  "onClick": [Function],
                },
                Object {
                  "disabled": false,
                  "icon": "talend-cross",
                  "id": "abort",
                  "label": "Abort",
                  "onClick": [Function],
                },
              ],
              "getItemHeight": [Function],
              "key": "values",
              "onAbortItem": [Function],
              "onChangeItem": [Function],
              "onLoadData": [Function],
              "onSelectItem": [Function],
              "onSubmitItem": [Function],
            }
          }
          onAddKeyDown={[Function]}
          onInputChange={[Function]}
          required={false}
          setFormData={[Function]}
        >
          <Items
            items={
              Array [
                Object {
                  "id": "111",
                  "values": Array [
                    "titi",
                    "tata",
                  ],
                },
                Object {
                  "id": "112",
                  "values": Array [
                    "titi2",
                    "tata2",
                  ],
                },
              ]
            }
            itemsProp={
              Object {
                "actionsDefault": Array [
                  Object {
                    "disabled": false,
                    "icon": "talend-pencil",
                    "id": "edit",
                    "label": "Edit",
                    "onClick": [Function],
                  },
                  Object {
                    "icon": "talend-trash",
                    "id": "delete",
                    "label": "Remove value",
                    "onClick": [Function],
                  },
                ],
                "actionsEdit": Array [
                  Object {
                    "disabled": true,
                    "icon": "talend-check",
                    "id": "validate",
                    "label": "Validate",
                    "onClick": [Function],
                  },
                  Object {
                    "disabled": false,
                    "icon": "talend-cross",
                    "id": "abort",
                    "label": "Abort",
                    "onClick": [Function],
                  },
                ],
                "getItemHeight": [Function],
                "key": "values",
                "onAbortItem": [Function],
                "onChangeItem": [Function],
                "onLoadData": [Function],
                "onSelectItem": [Function],
                "onSubmitItem": [Function],
              }
            }
          >
            <ul
              className="undefined tc-enumeration-items"
              onScroll={[Function]}
            >
              <Component>
                <div
                  id="autoSizer"
                >
                  <List
                    actions={
                      Array [
                        Object {
                          "disabled": false,
                          "icon": "talend-pencil",
                          "id": "edit",
                          "label": "Edit",
                          "onClick": [Function],
                        },
                        Object {
                          "icon": "talend-trash",
                          "id": "delete",
                          "label": "Remove value",
                          "onClick": [Function],
                        },
                      ]
                    }
                    className="undefined"
                    estimatedRowSize={30}
                    height={30}
                    items={
                      Array [
                        Object {
                          "id": "111",
                          "values": Array [
                            "titi",
                            "tata",
                          ],
                        },
                        Object {
                          "id": "112",
                          "values": Array [
                            "titi2",
                            "tata2",
                          ],
                        },
                      ]
                    }
                    noRowsRenderer={[Function]}
                    onRowsRendered={[Function]}
                    onScroll={[Function]}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    rowCount={2}
                    rowHeight={[Function]}
                    rowRenderer={[Function]}
                    scrollToAlignment="auto"
                    scrollToIndex={-1}
                    style={Object {}}
                    width={30}
                  >
                    <Grid
                      actions={
                        Array [
                          Object {
                            "disabled": false,
                            "icon": "talend-pencil",
                            "id": "edit",
                            "label": "Edit",
                            "onClick": [Function],
                          },
                          Object {
                            "icon": "talend-trash",
                            "id": "delete",
                            "label": "Remove value",
                            "onClick": [Function],
                          },
                        ]
                      }
                      aria-label="grid"
                      autoContainerWidth={true}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className="ReactVirtualized__List undefined"
                      columnCount={1}
                      columnWidth={30}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={30}
                      items={
                        Array [
                          Object {
                            "id": "111",
                            "values": Array [
                              "titi",
                              "tata",
                            ],
                          },
                          Object {
                            "id": "112",
                            "values": Array [
                              "titi2",
                              "tata2",
                            ],
                          },
                        ]
                      }
                      noContentRenderer={[Function]}
                      noRowsRenderer={[Function]}
                      onRowsRendered={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowRenderer={[Function]}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToIndex={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={0}
                      width={30}
                    >
                      <div
                        aria-label="grid"
                        className="ReactVirtualized__Grid ReactVirtualized__List undefined"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 30,
                            "overflowX": "hidden",
                            "overflowY": "auto",
                            "position": "relative",
                            "width": 30,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          style={
                            Object {
                              "height": 66,
                              "maxHeight": 66,
                              "maxWidth": 30,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": "auto",
                            }
                          }
                        >
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="0-item"
                              item={
                                Object {
                                  "id": "111",
                                  "index": 0,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi",
                                    "tata",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="tc-enumeration-item"
                                id="0-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi,tata"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi,tata"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi,tata
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                          <div
                            className="undefined tc-item-container"
                            style={
                              Object {
                                "height": 33,
                                "left": 0,
                                "position": "absolute",
                                "top": 33,
                                "width": "100%",
                              }
                            }
                          >
                            <Item
                              id="1-item"
                              item={
                                Object {
                                  "id": "112",
                                  "index": 1,
                                  "itemProps": Object {
                                    "actions": Array [
                                      Object {
                                        "disabled": false,
                                        "icon": "talend-pencil",
                                        "id": "edit",
                                        "label": "Edit",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "icon": "talend-trash",
                                        "id": "delete",
                                        "label": "Remove value",
                                        "onClick": [Function],
                                      },
                                    ],
                                    "key": "values",
                                    "onSelectItem": [Function],
                                  },
                                  "values": Array [
                                    "titi2",
                                    "tata2",
                                  ],
                                }
                              }
                              itemProps={
                                Object {
                                  "actions": Array [
                                    Object {
                                      "disabled": false,
                                      "icon": "talend-pencil",
                                      "id": "edit",
                                      "label": "Edit",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "icon": "talend-trash",
                                      "id": "delete",
                                      "label": "Remove value",
                                      "onClick": [Function],
                                    },
                                  ],
                                  "key": "values",
                                  "onSelectItem": [Function],
                                }
                              }
                            >
                              <li
                                className="tc-enumeration-item"
                                id="1-item"
                              >
                                <Action
                                  available={true}
                                  bsStyle="default"
                                  className="undefined tc-enumeration-item-label"
                                  disabled={false}
                                  inProgress={false}
                                  label="titi2,tata2"
                                  onClick={[Function]}
                                  tooltip={true}
                                  tooltipPlacement="top"
                                >
                                  <TooltipTrigger
                                    label="titi2,tata2"
                                    tooltipPlacement="top"
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="undefined tc-enumeration-item-label"
                                      disabled={false}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOver={[Function]}
                                      role={null}
                                    >
                                      <button
                                        className="undefined tc-enumeration-item-label btn btn-default"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role={null}
                                        type="button"
                                      >
                                        <span>
                                          titi2,tata2
                                        </span>
                                      </button>
                                    </Button>
                                  </TooltipTrigger>
                                </Action>
                                <div
                                  className="undefined tc-enumeration-item-actions"
                                >
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-pencil"
                                    inProgress={false}
                                    label="Edit"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Edit"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-pencil"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-pencil"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                  <Action
                                    available={true}
                                    bsStyle="default"
                                    disabled={false}
                                    hideLabel={true}
                                    icon="talend-trash"
                                    inProgress={false}
                                    label="Remove value"
                                    link={true}
                                    onClick={[Function]}
                                    tooltipPlacement="bottom"
                                  >
                                    <TooltipTrigger
                                      label="Remove value"
                                      tooltipPlacement="bottom"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="link"
                                        disabled={false}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseOver={[Function]}
                                        role="link"
                                      >
                                        <button
                                          className="btn btn-link"
                                          disabled={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseOver={[Function]}
                                          role="link"
                                          type="button"
                                        >
                                          <Icon
                                            name="talend-trash"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="tc-svg-icon"
                                              focusable="false"
                                              title={null}
                                            >
                                              <use
                                                xlinkHref="#talend-trash"
                                              />
                                            </svg>
                                          </Icon>
                                        </button>
                                      </Button>
                                    </TooltipTrigger>
                                  </Action>
                                </div>
                              </li>
                            </Item>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </List>
                </div>
              </Component>
            </ul>
          </Items>
        </ItemsEnumeration>
      </div>
    </Enumeration>
  </div>
</EnumerationWidget>
`;
