// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActionBar should render a btn-group 1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={
      Array [
        Object {
          "actions": Array [
            Object {
              "hideLabel": true,
              "icon": "talend-cog",
              "label": "hidden mean tooltips",
              "onClick": [Function],
            },
            Object {
              "hideLabel": true,
              "icon": "talend-badge",
              "label": "you are a super star",
              "onClick": [Function],
            },
          ],
          "displayMode": "btnGroup",
        },
      ]
    }
    getComponent={undefined}
    left={true}
    selected={undefined}
  />
</nav>
`;

exports[`ActionBar should render no-selected actions, all on left  1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={
      Array [
        Object {
          "bsStyle": "primary",
          "icon": "fa fa-asterisk",
          "label": "Primary",
          "onClick": [Function],
        },
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "displayMode": "splitDropdown",
          "emptyDropdownLabel": "No option",
          "icon": "fa fa-plus",
          "items": Array [
            Object {
              "label": "From Local",
              "onClick": [Function],
            },
            Object {
              "label": "From Remote",
              "onClick": [Function],
            },
          ],
          "label": "Add File",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    left={true}
    selected={0}
  />
</nav>
`;

exports[`ActionBar should render no-selected actions, all on right 1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={
      Array [
        Object {
          "bsStyle": "primary",
          "icon": "fa fa-asterisk",
          "label": "Primary",
          "onClick": [Function],
        },
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "displayMode": "splitDropdown",
          "emptyDropdownLabel": "No option",
          "icon": "fa fa-plus",
          "items": Array [
            Object {
              "label": "From Local",
              "onClick": [Function],
            },
            Object {
              "label": "From Remote",
              "onClick": [Function],
            },
          ],
          "label": "Add File",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    right={true}
    selected={0}
  />
</nav>
`;

exports[`ActionBar should render no-selected actions, some on left, the other on right 1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={
      Array [
        Object {
          "bsStyle": "primary",
          "icon": "fa fa-asterisk",
          "label": "Primary",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    left={true}
    selected={0}
  />
  <SwitchActions
    actions={
      Array [
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "displayMode": "splitDropdown",
          "emptyDropdownLabel": "No option",
          "icon": "fa fa-plus",
          "items": Array [
            Object {
              "label": "From Local",
              "onClick": [Function],
            },
            Object {
              "label": "From Remote",
              "onClick": [Function],
            },
          ],
          "label": "Add File",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    right={true}
    selected={0}
  />
</nav>
`;

exports[`ActionBar should render selected count and multi-selected actions, all on left 1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={
      Array [
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "displayMode": "splitDropdown",
          "emptyDropdownLabel": "No option",
          "icon": "fa fa-plus",
          "items": Array [
            Object {
              "label": "From Local",
              "onClick": [Function],
            },
            Object {
              "label": "From Remote",
              "onClick": [Function],
            },
          ],
          "label": "Add File",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    left={true}
    selected={1}
  />
</nav>
`;

exports[`ActionBar should render selected count and multi-selected actions, all on right 1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={Array []}
    getComponent={undefined}
    left={true}
    selected={1}
  />
  <SwitchActions
    actions={
      Array [
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "displayMode": "splitDropdown",
          "emptyDropdownLabel": "No option",
          "icon": "fa fa-plus",
          "items": Array [
            Object {
              "label": "From Local",
              "onClick": [Function],
            },
            Object {
              "label": "From Remote",
              "onClick": [Function],
            },
          ],
          "label": "Add File",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    right={true}
    selected={1}
  />
</nav>
`;

exports[`ActionBar should render selected count and multi-selected actions, count and some actions on left, the other on right 1`] = `
<nav
  className="theme-tc-actionbar-container tc-actionbar-container nav"
>
  <SwitchActions
    actions={
      Array [
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    left={true}
    selected={1}
  />
  <SwitchActions
    actions={
      Array [
        Object {
          "icon": "fa fa-asterisk",
          "label": "Secondary",
          "onClick": [Function],
        },
        Object {
          "displayMode": "splitDropdown",
          "emptyDropdownLabel": "No option",
          "icon": "fa fa-plus",
          "items": Array [
            Object {
              "label": "From Local",
              "onClick": [Function],
            },
            Object {
              "label": "From Remote",
              "onClick": [Function],
            },
          ],
          "label": "Add File",
          "onClick": [Function],
        },
      ]
    }
    getComponent={undefined}
    right={true}
    selected={1}
  />
</nav>
`;

exports[`ActionBar.Count should render if selected 1`] = `
<span
  className="theme-tc-actionbar-selected-count tc-actionbar-selected-count"
>
  1
   selected
</span>
`;

exports[`ActionBar.SwitchActions should not render selected on right 1`] = `
<Content
  center={undefined}
  left={undefined}
  right={true}
>
  
</Content>
`;

exports[`ActionBar.SwitchActions should render one Action on navbar-left 1`] = `
<Content
  center={undefined}
  left={true}
  right={undefined}
>
  <Action
    label="action"
  />
</Content>
`;

exports[`ActionBar.SwitchActions should render one Action on navbar-left with selected 1`] = `
<Content
  center={undefined}
  left={true}
  right={undefined}
>
  <Count
    selected={3}
  />
  <Action
    label="action"
  />
</Content>
`;

exports[`ActionBar.SwitchActions should render one Action on navbar-right 1`] = `
<Content
  center={undefined}
  left={undefined}
  right={true}
>
  <Action
    label="action"
  />
</Content>
`;
