// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Items should render 1`] = `
<ItemsComponent
  getItemHeight={[Function]}
  isSwitchBox={false}
  items={
    Array [
      Object {
        "label": "Lorem ipsum dolor sit amet 0",
      },
      Object {
        "checked": true,
        "label": "Lorem ipsum dolor sit amet 1",
      },
      Object {
        "label": "Lorem ipsum dolor sit amet 2",
      },
    ]
  }
  showToggleAll={true}
  t={[Function]}
>
  <div
    className="theme-tc-listview-items tc-listview-items"
  >
    <Component>
      <div
        id="autoSizer"
      >
        <List
          autoHeight={false}
          className="theme-tc-list-items tc-list-items"
          estimatedRowSize={30}
          height={30}
          items={
            Array [
              Object {
                "label": "Lorem ipsum dolor sit amet 0",
              },
              Object {
                "checked": true,
                "label": "Lorem ipsum dolor sit amet 1",
              },
              Object {
                "label": "Lorem ipsum dolor sit amet 2",
              },
            ]
          }
          noRowsRenderer={[Function]}
          onRowsRendered={[Function]}
          onScroll={[Function]}
          overscanIndicesGetter={[Function]}
          overscanRowCount={10}
          rowCount={4}
          rowHeight={[Function]}
          rowRenderer={[Function]}
          scrollToAlignment="auto"
          scrollToIndex={-1}
          style={Object {}}
          width={30}
        >
          <Grid
            aria-label="grid"
            aria-readonly={true}
            autoContainerWidth={true}
            autoHeight={false}
            autoWidth={false}
            cellRangeRenderer={[Function]}
            cellRenderer={[Function]}
            className="ReactVirtualized__List theme-tc-list-items tc-list-items"
            columnCount={1}
            columnWidth={30}
            containerRole="rowgroup"
            containerStyle={Object {}}
            estimatedColumnSize={100}
            estimatedRowSize={30}
            getScrollbarSize={[Function]}
            height={30}
            items={
              Array [
                Object {
                  "label": "Lorem ipsum dolor sit amet 0",
                },
                Object {
                  "checked": true,
                  "label": "Lorem ipsum dolor sit amet 1",
                },
                Object {
                  "label": "Lorem ipsum dolor sit amet 2",
                },
              ]
            }
            noContentRenderer={[Function]}
            noRowsRenderer={[Function]}
            onRowsRendered={[Function]}
            onScroll={[Function]}
            onScrollbarPresenceChange={[Function]}
            onSectionRendered={[Function]}
            overscanColumnCount={0}
            overscanIndicesGetter={[Function]}
            overscanRowCount={10}
            role="grid"
            rowCount={4}
            rowHeight={[Function]}
            rowRenderer={[Function]}
            scrollToAlignment="auto"
            scrollToColumn={-1}
            scrollToIndex={-1}
            scrollToRow={-1}
            scrollingResetTimeInterval={150}
            style={Object {}}
            tabIndex={0}
            width={30}
          >
            <div
              aria-label="grid"
              aria-readonly={true}
              className="ReactVirtualized__Grid ReactVirtualized__List theme-tc-list-items tc-list-items"
              onScroll={[Function]}
              role="grid"
              style={
                Object {
                  "WebkitOverflowScrolling": "touch",
                  "boxSizing": "border-box",
                  "direction": "ltr",
                  "height": 30,
                  "overflowX": "hidden",
                  "overflowY": "auto",
                  "position": "relative",
                  "width": 30,
                  "willChange": "transform",
                }
              }
              tabIndex={0}
            >
              <div
                className="ReactVirtualized__Grid__innerScrollContainer"
                role="rowgroup"
                style={
                  Object {
                    "height": 166,
                    "maxHeight": 166,
                    "maxWidth": 30,
                    "overflow": "hidden",
                    "pointerEvents": "",
                    "position": "relative",
                    "width": "auto",
                  }
                }
              >
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="0-0"
                  rowIndex={0}
                >
                  <div
                    className="theme-tc-item-container theme-toggle tc-item-container toggle"
                    key="0-0"
                    style={
                      Object {
                        "height": 40,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <div
                      className="checkbox"
                    >
                      <label
                        htmlFor="tc-listview-toggle-all"
                      >
                        <input
                          id="tc-listview-toggle-all"
                          type="checkbox"
                        />
                        <strong>
                          Select all
                        </strong>
                      </label>
                    </div>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="1-0"
                  rowIndex={1}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="1-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 40,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      isSwitchBox={false}
                      item={
                        Object {
                          "label": "Lorem ipsum dolor sit amet 0",
                        }
                      }
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        isSwitchBox={false}
                        item={
                          Object {
                            "label": "Lorem ipsum dolor sit amet 0",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          isSwitchBox={false}
                          item={
                            Object {
                              "label": "Lorem ipsum dolor sit amet 0",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div>
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label>
                                  <input
                                    aria-label="Select Lorem ipsum dolor sit amet 0"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor sit amet 0
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="2-0"
                  rowIndex={2}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="2-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 82,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      isSwitchBox={false}
                      item={
                        Object {
                          "checked": true,
                          "label": "Lorem ipsum dolor sit amet 1",
                        }
                      }
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        isSwitchBox={false}
                        item={
                          Object {
                            "checked": true,
                            "label": "Lorem ipsum dolor sit amet 1",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          isSwitchBox={false}
                          item={
                            Object {
                              "checked": true,
                              "label": "Lorem ipsum dolor sit amet 1",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div>
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label>
                                  <input
                                    aria-label="Deselect Lorem ipsum dolor sit amet 1"
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor sit amet 1
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="3-0"
                  rowIndex={3}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="3-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 124,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      isSwitchBox={false}
                      item={
                        Object {
                          "label": "Lorem ipsum dolor sit amet 2",
                        }
                      }
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        isSwitchBox={false}
                        item={
                          Object {
                            "label": "Lorem ipsum dolor sit amet 2",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          isSwitchBox={false}
                          item={
                            Object {
                              "label": "Lorem ipsum dolor sit amet 2",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div>
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label>
                                  <input
                                    aria-label="Select Lorem ipsum dolor sit amet 2"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor sit amet 2
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
              </div>
            </div>
          </Grid>
        </List>
      </div>
    </Component>
  </div>
</ItemsComponent>
`;

exports[`Items should render with nested items 1`] = `
<ItemsComponent
  getItemHeight={[Function]}
  isSwitchBox={false}
  items={
    Array [
      Object {
        "label": "Lorem ipsum dolor default",
      },
      Object {
        "checked": true,
        "children": Array [
          Object {
            "label": "Lorem ipsum dolor sit amet 0",
          },
          Object {
            "checked": true,
            "label": "Lorem ipsum dolor sit amet 1",
          },
          Object {
            "label": "Lorem ipsum dolor sit amet 2",
          },
        ],
        "label": "Lorem ipsum dolor Parent",
      },
    ]
  }
  showToggleAll={true}
  t={[Function]}
>
  <div
    className="theme-tc-listview-items tc-listview-items"
  >
    <Component>
      <div
        id="autoSizer"
      >
        <List
          autoHeight={false}
          className="theme-tc-list-items tc-list-items"
          estimatedRowSize={30}
          height={30}
          items={
            Array [
              Object {
                "label": "Lorem ipsum dolor default",
              },
              Object {
                "checked": true,
                "children": Array [
                  Object {
                    "label": "Lorem ipsum dolor sit amet 0",
                  },
                  Object {
                    "checked": true,
                    "label": "Lorem ipsum dolor sit amet 1",
                  },
                  Object {
                    "label": "Lorem ipsum dolor sit amet 2",
                  },
                ],
                "label": "Lorem ipsum dolor Parent",
              },
            ]
          }
          noRowsRenderer={[Function]}
          onRowsRendered={[Function]}
          onScroll={[Function]}
          overscanIndicesGetter={[Function]}
          overscanRowCount={10}
          rowCount={3}
          rowHeight={[Function]}
          rowRenderer={[Function]}
          scrollToAlignment="auto"
          scrollToIndex={-1}
          style={Object {}}
          width={30}
        >
          <Grid
            aria-label="grid"
            aria-readonly={true}
            autoContainerWidth={true}
            autoHeight={false}
            autoWidth={false}
            cellRangeRenderer={[Function]}
            cellRenderer={[Function]}
            className="ReactVirtualized__List theme-tc-list-items tc-list-items"
            columnCount={1}
            columnWidth={30}
            containerRole="rowgroup"
            containerStyle={Object {}}
            estimatedColumnSize={100}
            estimatedRowSize={30}
            getScrollbarSize={[Function]}
            height={30}
            items={
              Array [
                Object {
                  "label": "Lorem ipsum dolor default",
                },
                Object {
                  "checked": true,
                  "children": Array [
                    Object {
                      "label": "Lorem ipsum dolor sit amet 0",
                    },
                    Object {
                      "checked": true,
                      "label": "Lorem ipsum dolor sit amet 1",
                    },
                    Object {
                      "label": "Lorem ipsum dolor sit amet 2",
                    },
                  ],
                  "label": "Lorem ipsum dolor Parent",
                },
              ]
            }
            noContentRenderer={[Function]}
            noRowsRenderer={[Function]}
            onRowsRendered={[Function]}
            onScroll={[Function]}
            onScrollbarPresenceChange={[Function]}
            onSectionRendered={[Function]}
            overscanColumnCount={0}
            overscanIndicesGetter={[Function]}
            overscanRowCount={10}
            role="grid"
            rowCount={3}
            rowHeight={[Function]}
            rowRenderer={[Function]}
            scrollToAlignment="auto"
            scrollToColumn={-1}
            scrollToIndex={-1}
            scrollToRow={-1}
            scrollingResetTimeInterval={150}
            style={Object {}}
            tabIndex={0}
            width={30}
          >
            <div
              aria-label="grid"
              aria-readonly={true}
              className="ReactVirtualized__Grid ReactVirtualized__List theme-tc-list-items tc-list-items"
              onScroll={[Function]}
              role="grid"
              style={
                Object {
                  "WebkitOverflowScrolling": "touch",
                  "boxSizing": "border-box",
                  "direction": "ltr",
                  "height": 30,
                  "overflowX": "hidden",
                  "overflowY": "auto",
                  "position": "relative",
                  "width": 30,
                  "willChange": "transform",
                }
              }
              tabIndex={0}
            >
              <div
                className="ReactVirtualized__Grid__innerScrollContainer"
                role="rowgroup"
                style={
                  Object {
                    "height": 124,
                    "maxHeight": 124,
                    "maxWidth": 30,
                    "overflow": "hidden",
                    "pointerEvents": "",
                    "position": "relative",
                    "width": "auto",
                  }
                }
              >
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 3,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="0-0"
                  rowIndex={0}
                >
                  <div
                    className="theme-tc-item-container theme-toggle tc-item-container toggle"
                    key="0-0"
                    style={
                      Object {
                        "height": 40,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <div
                      className="checkbox"
                    >
                      <label
                        htmlFor="tc-listview-toggle-all"
                      >
                        <input
                          id="tc-listview-toggle-all"
                          type="checkbox"
                        />
                        <strong>
                          Select all
                        </strong>
                      </label>
                    </div>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 3,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="1-0"
                  rowIndex={1}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="1-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 40,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      isSwitchBox={false}
                      item={
                        Object {
                          "label": "Lorem ipsum dolor default",
                        }
                      }
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        isSwitchBox={false}
                        item={
                          Object {
                            "label": "Lorem ipsum dolor default",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          isSwitchBox={false}
                          item={
                            Object {
                              "label": "Lorem ipsum dolor default",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div>
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label>
                                  <input
                                    aria-label="Select Lorem ipsum dolor default"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor default
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 3,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="2-0"
                  rowIndex={2}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="2-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 82,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      isSwitchBox={false}
                      item={
                        Object {
                          "checked": true,
                          "children": Array [
                            Object {
                              "label": "Lorem ipsum dolor sit amet 0",
                            },
                            Object {
                              "checked": true,
                              "label": "Lorem ipsum dolor sit amet 1",
                            },
                            Object {
                              "label": "Lorem ipsum dolor sit amet 2",
                            },
                          ],
                          "label": "Lorem ipsum dolor Parent",
                        }
                      }
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        isSwitchBox={false}
                        item={
                          Object {
                            "checked": true,
                            "children": Array [
                              Object {
                                "label": "Lorem ipsum dolor sit amet 0",
                              },
                              Object {
                                "checked": true,
                                "label": "Lorem ipsum dolor sit amet 1",
                              },
                              Object {
                                "label": "Lorem ipsum dolor sit amet 2",
                              },
                            ],
                            "label": "Lorem ipsum dolor Parent",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          isSwitchBox={false}
                          item={
                            Object {
                              "checked": true,
                              "children": Array [
                                Object {
                                  "label": "Lorem ipsum dolor sit amet 0",
                                },
                                Object {
                                  "checked": true,
                                  "label": "Lorem ipsum dolor sit amet 1",
                                },
                                Object {
                                  "label": "Lorem ipsum dolor sit amet 2",
                                },
                              ],
                              "label": "Lorem ipsum dolor Parent",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div>
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox switch-nested"
                              >
                                <label>
                                  <input
                                    aria-label="Deselect Lorem ipsum dolor Parent"
                                    checked={true}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor Parent
                                  </span>
                                </label>
                                <div
                                  className="checkbox-nested-expand"
                                >
                                  <Action
                                    bsStyle="link"
                                    hideLabel={true}
                                    icon="talend-caret-down"
                                    label="Expand Lorem ipsum dolor Parent"
                                    onClick={[Function]}
                                  >
                                    <Translate(ActionButton)
                                      bsStyle="link"
                                      hideLabel={true}
                                      icon="talend-caret-down"
                                      label="Expand Lorem ipsum dolor Parent"
                                      onClick={[Function]}
                                    >
                                      <I18n
                                        bindI18n="languageChanged loaded"
                                        bindStore="added removed"
                                        bsStyle="link"
                                        hideLabel={true}
                                        i18n={Object {}}
                                        icon="talend-caret-down"
                                        label="Expand Lorem ipsum dolor Parent"
                                        ns={
                                          Array [
                                            "tui-components",
                                          ]
                                        }
                                        nsMode="default"
                                        onClick={[Function]}
                                        translateFuncName="t"
                                        usePureComponent={false}
                                        wait={false}
                                        withRef={false}
                                      >
                                        <ActionButton
                                          available={true}
                                          bsStyle="link"
                                          disabled={false}
                                          hideLabel={true}
                                          i18n={Object {}}
                                          icon="talend-caret-down"
                                          inProgress={false}
                                          label="Expand Lorem ipsum dolor Parent"
                                          loading={false}
                                          onClick={[Function]}
                                          t={[Function]}
                                          tReady={false}
                                          tooltipPlacement="top"
                                        >
                                          <TooltipTrigger
                                            label="Expand Lorem ipsum dolor Parent"
                                            tooltipPlacement="top"
                                          >
                                            <Button
                                              active={false}
                                              aria-label="Expand Lorem ipsum dolor Parent"
                                              block={false}
                                              bsClass="btn"
                                              bsStyle="link"
                                              className="btn-icon-only"
                                              disabled={false}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseOver={[Function]}
                                              role={null}
                                            >
                                              <button
                                                aria-label="Expand Lorem ipsum dolor Parent"
                                                className="btn-icon-only btn btn-link"
                                                disabled={false}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseOver={[Function]}
                                                role={null}
                                                type="button"
                                              >
                                                <Icon
                                                  key="icon"
                                                  name="talend-caret-down"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="theme-tc-svg-icon tc-svg-icon"
                                                    focusable="false"
                                                    name="talend-caret-down"
                                                    title={null}
                                                  >
                                                    <use
                                                      xlinkHref="#talend-caret-down"
                                                    />
                                                  </svg>
                                                </Icon>
                                              </button>
                                            </Button>
                                          </TooltipTrigger>
                                        </ActionButton>
                                      </I18n>
                                    </Translate(ActionButton)>
                                  </Action>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
              </div>
            </div>
          </Grid>
        </List>
      </div>
    </Component>
  </div>
</ItemsComponent>
`;

exports[`Items should render with provided id 1`] = `
<ItemsComponent
  getItemHeight={[Function]}
  id="my-widget"
  isSwitchBox={false}
  items={
    Array [
      Object {
        "label": "Lorem ipsum dolor sit amet 0",
      },
      Object {
        "checked": true,
        "label": "Lorem ipsum dolor sit amet 1",
      },
      Object {
        "label": "Lorem ipsum dolor sit amet 2",
      },
    ]
  }
  showToggleAll={true}
  t={[Function]}
>
  <div
    className="theme-tc-listview-items tc-listview-items"
  >
    <Component>
      <div
        id="autoSizer"
      >
        <List
          autoHeight={false}
          className="theme-tc-list-items tc-list-items"
          estimatedRowSize={30}
          height={30}
          items={
            Array [
              Object {
                "label": "Lorem ipsum dolor sit amet 0",
              },
              Object {
                "checked": true,
                "label": "Lorem ipsum dolor sit amet 1",
              },
              Object {
                "label": "Lorem ipsum dolor sit amet 2",
              },
            ]
          }
          noRowsRenderer={[Function]}
          onRowsRendered={[Function]}
          onScroll={[Function]}
          overscanIndicesGetter={[Function]}
          overscanRowCount={10}
          rowCount={4}
          rowHeight={[Function]}
          rowRenderer={[Function]}
          scrollToAlignment="auto"
          scrollToIndex={-1}
          style={Object {}}
          width={30}
        >
          <Grid
            aria-label="grid"
            aria-readonly={true}
            autoContainerWidth={true}
            autoHeight={false}
            autoWidth={false}
            cellRangeRenderer={[Function]}
            cellRenderer={[Function]}
            className="ReactVirtualized__List theme-tc-list-items tc-list-items"
            columnCount={1}
            columnWidth={30}
            containerRole="rowgroup"
            containerStyle={Object {}}
            estimatedColumnSize={100}
            estimatedRowSize={30}
            getScrollbarSize={[Function]}
            height={30}
            items={
              Array [
                Object {
                  "label": "Lorem ipsum dolor sit amet 0",
                },
                Object {
                  "checked": true,
                  "label": "Lorem ipsum dolor sit amet 1",
                },
                Object {
                  "label": "Lorem ipsum dolor sit amet 2",
                },
              ]
            }
            noContentRenderer={[Function]}
            noRowsRenderer={[Function]}
            onRowsRendered={[Function]}
            onScroll={[Function]}
            onScrollbarPresenceChange={[Function]}
            onSectionRendered={[Function]}
            overscanColumnCount={0}
            overscanIndicesGetter={[Function]}
            overscanRowCount={10}
            role="grid"
            rowCount={4}
            rowHeight={[Function]}
            rowRenderer={[Function]}
            scrollToAlignment="auto"
            scrollToColumn={-1}
            scrollToIndex={-1}
            scrollToRow={-1}
            scrollingResetTimeInterval={150}
            style={Object {}}
            tabIndex={0}
            width={30}
          >
            <div
              aria-label="grid"
              aria-readonly={true}
              className="ReactVirtualized__Grid ReactVirtualized__List theme-tc-list-items tc-list-items"
              onScroll={[Function]}
              role="grid"
              style={
                Object {
                  "WebkitOverflowScrolling": "touch",
                  "boxSizing": "border-box",
                  "direction": "ltr",
                  "height": 30,
                  "overflowX": "hidden",
                  "overflowY": "auto",
                  "position": "relative",
                  "width": 30,
                  "willChange": "transform",
                }
              }
              tabIndex={0}
            >
              <div
                className="ReactVirtualized__Grid__innerScrollContainer"
                role="rowgroup"
                style={
                  Object {
                    "height": 166,
                    "maxHeight": 166,
                    "maxWidth": 30,
                    "overflow": "hidden",
                    "pointerEvents": "",
                    "position": "relative",
                    "width": "auto",
                  }
                }
              >
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="0-0"
                  rowIndex={0}
                >
                  <div
                    className="theme-tc-item-container theme-toggle tc-item-container toggle"
                    key="0-0"
                    style={
                      Object {
                        "height": 40,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <div
                      className="checkbox"
                    >
                      <label
                        htmlFor="my-widget-toggle-all"
                      >
                        <input
                          id="my-widget-toggle-all"
                          type="checkbox"
                        />
                        <strong>
                          Select all
                        </strong>
                      </label>
                    </div>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="1-0"
                  rowIndex={1}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="1-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 40,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      id="my-widget-1-item"
                      isSwitchBox={false}
                      item={
                        Object {
                          "label": "Lorem ipsum dolor sit amet 0",
                        }
                      }
                      key="my-widget-1-item"
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        id="my-widget-1-item"
                        isSwitchBox={false}
                        item={
                          Object {
                            "label": "Lorem ipsum dolor sit amet 0",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          id="my-widget-1-item"
                          isSwitchBox={false}
                          item={
                            Object {
                              "label": "Lorem ipsum dolor sit amet 0",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div
                            id="my-widget-1-item"
                          >
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label
                                  htmlFor="checkbox-my-widget-1-item"
                                >
                                  <input
                                    aria-label="Select Lorem ipsum dolor sit amet 0"
                                    id="checkbox-my-widget-1-item"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor sit amet 0
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="2-0"
                  rowIndex={2}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="2-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 82,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      id="my-widget-2-item"
                      isSwitchBox={false}
                      item={
                        Object {
                          "checked": true,
                          "label": "Lorem ipsum dolor sit amet 1",
                        }
                      }
                      key="my-widget-2-item"
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        id="my-widget-2-item"
                        isSwitchBox={false}
                        item={
                          Object {
                            "checked": true,
                            "label": "Lorem ipsum dolor sit amet 1",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          id="my-widget-2-item"
                          isSwitchBox={false}
                          item={
                            Object {
                              "checked": true,
                              "label": "Lorem ipsum dolor sit amet 1",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div
                            id="my-widget-2-item"
                          >
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label
                                  htmlFor="checkbox-my-widget-2-item"
                                >
                                  <input
                                    aria-label="Deselect Lorem ipsum dolor sit amet 1"
                                    checked={true}
                                    id="checkbox-my-widget-2-item"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor sit amet 1
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
                <CellMeasurer
                  cache={
                    CellMeasurerCache {
                      "_cellHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_cellWidthCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "_columnCount": 1,
                      "_columnWidthCache": Object {},
                      "_defaultHeight": 42,
                      "_defaultWidth": 100,
                      "_hasFixedHeight": false,
                      "_hasFixedWidth": true,
                      "_keyMapper": [Function],
                      "_minHeight": 0,
                      "_minWidth": 0,
                      "_rowCount": 4,
                      "_rowHeightCache": Object {
                        "0-0": 0,
                        "1-0": 0,
                        "2-0": 0,
                        "3-0": 0,
                      },
                      "columnWidth": [Function],
                      "rowHeight": [Function],
                    }
                  }
                  columnIndex={0}
                  key="3-0"
                  rowIndex={3}
                >
                  <div
                    className="theme-tc-item-container theme-false tc-item-container"
                    key="3-0"
                    style={
                      Object {
                        "height": 42,
                        "left": 0,
                        "position": "absolute",
                        "top": 124,
                        "width": "100%",
                      }
                    }
                  >
                    <Translate(Item)
                      id="my-widget-3-item"
                      isSwitchBox={false}
                      item={
                        Object {
                          "label": "Lorem ipsum dolor sit amet 2",
                        }
                      }
                      key="my-widget-3-item"
                      measure={[Function]}
                    >
                      <I18n
                        bindI18n="languageChanged loaded"
                        bindStore="added removed"
                        i18n={Object {}}
                        id="my-widget-3-item"
                        isSwitchBox={false}
                        item={
                          Object {
                            "label": "Lorem ipsum dolor sit amet 2",
                          }
                        }
                        measure={[Function]}
                        ns={
                          Array [
                            "tui-components",
                          ]
                        }
                        nsMode="default"
                        translateFuncName="t"
                        usePureComponent={false}
                        wait={false}
                        withRef={false}
                      >
                        <Item
                          i18n={Object {}}
                          id="my-widget-3-item"
                          isSwitchBox={false}
                          item={
                            Object {
                              "label": "Lorem ipsum dolor sit amet 2",
                            }
                          }
                          measure={[Function]}
                          t={[Function]}
                          tReady={false}
                        >
                          <div
                            id="my-widget-3-item"
                          >
                            <div
                              className="checkbox-container"
                            >
                              <div
                                className="checkbox"
                              >
                                <label
                                  htmlFor="checkbox-my-widget-3-item"
                                >
                                  <input
                                    aria-label="Select Lorem ipsum dolor sit amet 2"
                                    id="checkbox-my-widget-3-item"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <span
                                    className="theme-tc-listview-item-label tc-listview-item-label"
                                  >
                                    Lorem ipsum dolor sit amet 2
                                  </span>
                                </label>
                              </div>
                            </div>
                          </div>
                        </Item>
                      </I18n>
                    </Translate(Item)>
                  </div>
                </CellMeasurer>
              </div>
            </div>
          </Grid>
        </List>
      </div>
    </Component>
  </div>
</ItemsComponent>
`;
