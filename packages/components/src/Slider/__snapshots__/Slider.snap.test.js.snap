// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slider component snaps renderers should render Slider 1`] = `
<div>
  <div
    className="theme-tc-slider tc-slider"
  >
    <Slider
      className="theme-tc-slider-rc-slider tc-slider-rc-slider"
      emptyValueLabel="no label"
      id="selectable"
      max={100}
      min={0}
      range={false}
      step={1}
    />
  </div>
</div>
`;

exports[`Slider component snaps renderers should render Slider disabled 1`] = `
<div>
  <div
    className="theme-tc-slider tc-slider"
  >
    <Slider
      className="theme-tc-slider-rc-slider tc-slider-rc-slider"
      defaultValue={0}
      disabled={true}
      handleRender={[Function]}
      max={100}
      min={0}
      range={false}
      step={1}
      value={76}
    />
  </div>
  <div
    className="theme-tc-slider-captions tc-slider-captions"
  >
    <Action
      className="theme-tc-slider-captions-element tc-slider-captions-element"
      data-feature="action"
      disabled={true}
      hideLabel={true}
      icon="talend-smiley-angry"
      id="icon1"
      label="Click Me"
      link={true}
      onClick={[Function]}
    />
    <Action
      className="theme-tc-slider-captions-element tc-slider-captions-element"
      data-feature="action"
      disabled={true}
      hideLabel={true}
      icon="talend-smiley-neutral"
      id="icon2"
      label="Click Me"
      link={true}
      onClick={[Function]}
    />
    <Action
      className="theme-tc-slider-captions-element tc-slider-captions-element theme-selected selected"
      data-feature="action"
      disabled={true}
      hideLabel={true}
      icon="talend-smiley-satisfied"
      id="icon3"
      label="Click Me"
      link={true}
      onClick={[Function]}
    />
  </div>
</div>
`;

exports[`Slider component snaps renderers should render Slider with captionActions 1`] = `
<div>
  <div
    className="theme-tc-slider tc-slider"
  >
    <Slider
      className="theme-tc-slider-rc-slider tc-slider-rc-slider"
      defaultValue={0}
      handleRender={[Function]}
      max={100}
      min={0}
      range={false}
      step={1}
      value={76}
    />
  </div>
  <div
    className="theme-tc-slider-captions tc-slider-captions"
  >
    <Action
      className="theme-tc-slider-captions-element tc-slider-captions-element"
      data-feature="action"
      hideLabel={true}
      icon="talend-smiley-angry"
      id="icon1"
      label="Click Me"
      link={true}
      onClick={[Function]}
    />
    <Action
      className="theme-tc-slider-captions-element tc-slider-captions-element"
      data-feature="action"
      hideLabel={true}
      icon="talend-smiley-neutral"
      id="icon2"
      label="Click Me"
      link={true}
      onClick={[Function]}
    />
    <Action
      className="theme-tc-slider-captions-element tc-slider-captions-element theme-selected selected"
      data-feature="action"
      hideLabel={true}
      icon="talend-smiley-satisfied"
      id="icon3"
      label="Click Me"
      link={true}
      onClick={[Function]}
    />
  </div>
</div>
`;

exports[`Slider component snaps renderers should render Slider with captionTextStepNumber 1`] = `
<div>
  <div
    className="theme-tc-slider tc-slider"
  >
    <Slider
      className="theme-tc-slider-rc-slider tc-slider-rc-slider"
      defaultValue={0}
      handleRender={[Function]}
      id="selectable"
      label="Heeey"
      max={100}
      min={0}
      range={false}
      step={1}
      value={45}
    />
  </div>
  <div
    className="theme-tc-slider-captions tc-slider-captions"
  >
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      0%
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      25%
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      50%
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      75%
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      100%
    </div>
  </div>
</div>
`;

exports[`Slider component snaps renderers should render Slider with icons on status 1`] = `
<div>
  <div
    className="theme-tc-slider tc-slider"
  >
    <Slider
      className="theme-tc-slider-rc-slider tc-slider-rc-slider"
      defaultValue={0}
      handleRender={[Function]}
      id="selectable"
      label="Heeey"
      max={100}
      min={0}
      range={false}
      step={1}
      value={45}
    />
  </div>
  <div
    className="theme-tc-slider-captions tc-slider-captions"
  >
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      <Icon
        className=""
        name="talend-smiley-rating"
      />
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      <Icon
        className=""
        name="talend-most-trusted"
      />
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      <Icon
        className="theme-selected selected"
        name="talend-network"
      />
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      <Icon
        className=""
        name="talend-streams"
      />
    </div>
    <div
      className="theme-tc-slider-captions-element tc-slider-captions-element"
    >
      <Icon
        className=""
        name="talend-tdc-negative"
      />
    </div>
  </div>
</div>
`;

exports[`Slider component snaps renderers should render a range 1`] = `
<div>
  <div
    className="theme-tc-slider tc-slider"
  >
    <Slider
      className="theme-tc-slider-rc-slider tc-slider-rc-slider"
      defaultValue={0}
      handleRender={[Function]}
      id="selectable"
      max={100}
      min={0}
      range={true}
      step={1}
      value={
        [
          10,
          25,
        ]
      }
    />
  </div>
</div>
`;
