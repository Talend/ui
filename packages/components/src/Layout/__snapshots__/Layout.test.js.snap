// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout should render Layout OneColumn 1`] = `
<div
  className="tc-layout"
>
  <div
    className="tc-layout-header"
  >
    <h1>
      Header
    </h1>
  </div>
  <div
    className="tc-layout-one-column"
  >
    <div
      className={undefined}
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "height": "100%",
            "overflow": "auto",
          }
        }
      >
        <h1>
          Column one
        </h1>
      </div>
      <div
        className={undefined}
      />
    </div>
  </div>
</div>
`;

exports[`Layout should render Layout TwoColumns 1`] = `
<div
  className="tc-layout"
>
  <div
    className="tc-layout-header"
  >
    <h1>
      Header
    </h1>
  </div>
  <div
    className="tc-layout-two-columns"
  >
    <div
      className="tc-layout-two-columns-left"
    >
      <h1>
        Column one
      </h1>
    </div>
    <div
      className="tc-layout-two-columns-main"
    >
      <div
        className={undefined}
      >
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "height": "100%",
              "overflow": "auto",
            }
          }
        >
          <h1>
            Column two
          </h1>
        </div>
        <div
          className={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Layout should render layout with Drawer component 1`] = `
<div
  className="tc-layout"
>
  <div
    className="tc-layout-header"
  >
    <h1>
      Header
    </h1>
  </div>
  <div
    className="tc-layout-two-columns"
  >
    <div
      className="tc-layout-two-columns-left"
    >
      <h1>
        Column one
      </h1>
    </div>
    <div
      className="tc-layout-two-columns-main"
    >
      <div
        className={undefined}
      >
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "height": "100%",
              "overflow": "auto",
            }
          }
        >
          <h1>
            Column two
          </h1>
        </div>
        <div
          className={undefined}
        >
          <div
            className="tc-with-drawer-wrapper"
            onTransitionEnd={[Function]}
            style={
              Object {
                "transform": "translateX(100%)",
              }
            }
          >
            <span
              style={
                Object {
                  "opacity": 0.9,
                }
              }
            />
            <div
              style={
                Object {
                  "width": 500,
                }
              }
              transitioned={false}
            >
              <h1>
                Hello drawers
              </h1>
              <p>
                You should not being able to read this because I'm first
              </p>
            </div>
          </div>
          <div
            className="tc-with-drawer-wrapper"
            onTransitionEnd={[Function]}
            style={
              Object {
                "transform": "translateX(100%)",
              }
            }
          >
            <span
              style={
                Object {
                  "opacity": 0.9,
                }
              }
            />
            <div
              style={
                Object {
                  "width": 400,
                }
              }
              transitioned={false}
            >
              <h1>
                Hello drawers
              </h1>
              <p>
                The content dictate the width
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Layout should render layout with SubHeader 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubHeaderBar
    onGoBack={[Function]}
    t={[Function]}
    title="defaultTitle"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ActionBar
        className="tc-subheader-navbar"
>
        <SubHeaderBarActions
                center={false}
                className={undefined}
                components={
                        Array [
                                Object {
                                  "injectedComponent": <Action
                                    bsStyle="link"
                                    className="tc-subheader-back-button"
                                    hideLabel={true}
                                    icon="talend-arrow-left"
                                    id="backArrow"
                                    label="Go Back"
                                    onClick={[Function]}
                        />,
                                },
                                Object {
                                  "injectedComponent": <InputTitleSubHeader
                                    editMode={false}
                                    t={[Function]}
                                    title="defaultTitle"
                        />,
                                },
                              ]
                }
                left={true}
                right={false}
        />
</ActionBar>,
      "className": "tc-subheader",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <SubHeaderBarActions
            center={false}
            className={undefined}
            components={
                        Array [
                                    Object {
                                      "injectedComponent": <Action
                                        bsStyle="link"
                                        className="tc-subheader-back-button"
                                        hideLabel={true}
                                        icon="talend-arrow-left"
                                        id="backArrow"
                                        label="Go Back"
                                        onClick={[Function]}
                        />,
                                    },
                                    Object {
                                      "injectedComponent": <InputTitleSubHeader
                                        editMode={false}
                                        t={[Function]}
                                        title="defaultTitle"
                        />,
                                    },
                                  ]
            }
            left={true}
            right={false}
/>,
          false,
          false,
        ],
        "className": "tc-subheader-navbar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "center": false,
            "className": undefined,
            "components": Array [
              Object {
                "injectedComponent": <Action
                  bsStyle="link"
                  className="tc-subheader-back-button"
                  hideLabel={true}
                  icon="talend-arrow-left"
                  id="backArrow"
                  label="Go Back"
                  onClick={[Function]}
/>,
              },
              Object {
                "injectedComponent": <InputTitleSubHeader
                  editMode={false}
                  t={[Function]}
                  title="defaultTitle"
/>,
              },
            ],
            "left": true,
            "right": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": [Function],
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ActionBar
          className="tc-subheader-navbar"
>
          <SubHeaderBarActions
                    center={false}
                    className={undefined}
                    components={
                              Array [
                                        Object {
                                          "injectedComponent": <Action
                                            bsStyle="link"
                                            className="tc-subheader-back-button"
                                            hideLabel={true}
                                            icon="talend-arrow-left"
                                            id="backArrow"
                                            label="Go Back"
                                            onClick={[Function]}
                              />,
                                        },
                                        Object {
                                          "injectedComponent": <InputTitleSubHeader
                                            editMode={false}
                                            t={[Function]}
                                            title="defaultTitle"
                              />,
                                        },
                                      ]
                    }
                    left={true}
                    right={false}
          />
</ActionBar>,
        "className": "tc-subheader",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <SubHeaderBarActions
              center={false}
              className={undefined}
              components={
                            Array [
                                          Object {
                                            "injectedComponent": <Action
                                              bsStyle="link"
                                              className="tc-subheader-back-button"
                                              hideLabel={true}
                                              icon="talend-arrow-left"
                                              id="backArrow"
                                              label="Go Back"
                                              onClick={[Function]}
                            />,
                                          },
                                          Object {
                                            "injectedComponent": <InputTitleSubHeader
                                              editMode={false}
                                              t={[Function]}
                                              title="defaultTitle"
                            />,
                                          },
                                        ]
              }
              left={true}
              right={false}
/>,
            false,
            false,
          ],
          "className": "tc-subheader-navbar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "center": false,
              "className": undefined,
              "components": Array [
                Object {
                  "injectedComponent": <Action
                    bsStyle="link"
                    className="tc-subheader-back-button"
                    hideLabel={true}
                    icon="talend-arrow-left"
                    id="backArrow"
                    label="Go Back"
                    onClick={[Function]}
/>,
                },
                Object {
                  "injectedComponent": <InputTitleSubHeader
                    editMode={false}
                    t={[Function]}
                    title="defaultTitle"
/>,
                },
              ],
              "left": true,
              "right": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
        ],
        "type": [Function],
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Layout should render layout with TabBar component 1`] = `
<div
  className="tc-layout"
>
  <div
    className="tc-layout-header"
  >
    <h1>
      Header
    </h1>
  </div>
  <div
    className="tc-layout-two-columns"
  >
    <div
      className="tc-layout-two-columns-left"
    >
      <h1>
        Column one
      </h1>
    </div>
    <div
      className="tc-layout-two-columns-main"
    >
      <div
        className={undefined}
      >
        <nav
          className="nav tc-tab-bar"
        >
          <ul
            className="nav nav-tabs tc-tab-bar-actions"
          >
            <li
              className="tc-tab-bar-action"
            >
              <button
                className="btn btn-link"
                disabled={false}
                id="tab-bar-action-1"
                onClick={[Function]}
                onMouseDown={[Function]}
                role={null}
                type="button"
              >
                <span>
                  Tab1
                </span>
              </button>
            </li>
            <li
              className="tc-tab-bar-action active"
            >
              <button
                className="btn btn-link"
                disabled={false}
                id="tab-bar-action-2"
                onClick={[Function]}
                onMouseDown={[Function]}
                role={null}
                type="button"
              >
                <span>
                  Tab2
                </span>
              </button>
            </li>
            <li
              className="tc-tab-bar-action"
            >
              <button
                className="btn btn-link"
                disabled={false}
                id="tab-bar-action-3"
                onClick={[Function]}
                onMouseDown={[Function]}
                role={null}
                type="button"
              >
                <span>
                  Tab3
                </span>
              </button>
            </li>
          </ul>
        </nav>
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "height": "100%",
              "overflow": "auto",
            }
          }
        >
          <h1>
            Column two
          </h1>
        </div>
        <div
          className={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Layout should render layout with footer component 1`] = `
<div
  className="tc-layout"
>
  <div
    className="tc-layout-header"
  >
    <h1>
      Header
    </h1>
  </div>
  <div
    className="tc-layout-one-column"
  >
    <div
      className={undefined}
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "height": "100%",
            "overflow": "auto",
          }
        }
      >
        <h1>
          Column one
        </h1>
      </div>
      <div
        className={undefined}
      />
    </div>
  </div>
  <footer
    className="tc-layout-footer"
    role="contentinfo"
  >
    <h3>
      Footer
    </h3>
  </footer>
</div>
`;

exports[`Layout should render layout without header 1`] = `
<div
  className="tc-layout"
>
  <div
    className="tc-layout-one-column"
  >
    <div
      className={undefined}
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "height": "100%",
            "overflow": "auto",
          }
        }
      >
        <h1>
          Column one
        </h1>
      </div>
      <div
        className={undefined}
      />
    </div>
  </div>
</div>
`;
