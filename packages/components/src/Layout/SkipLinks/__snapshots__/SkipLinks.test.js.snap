// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Skip links should render navigation link 1`] = `
<withI18nextTranslation(SkipLinks)
  mainId="#my-custom-main-id"
  navigationId="#my-custom-nav-id"
  t={[Function]}
>
  <nav
    aria-label="Skip links"
    className="theme-tc-skip-links"
  >
    <ul>
      <li
        key="navigation"
      >
        <SkipTo
          href="#my-custom-nav-id"
          label="Skip to navigation"
        >
          <a
            href="#my-custom-nav-id"
          >
            <span
              className="theme-icon"
            >
              <ForwardRef
                name="talend-arrow-left"
                transform="rotate-270"
              >
                <styled.svg
                  aria-hidden="true"
                  className="tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                  focusable="false"
                  name="talend-arrow-left"
                >
                  <StyledComponent
                    aria-hidden="true"
                    className="tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                    focusable="false"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "dOvxkt",
                          "rules": Array [
                            "
	width: ",
                            "1.6rem",
                            ";
	height: ",
                            "1.6rem",
                            ";
	transform-origin: center;

	circle,
	path,
	polygon,
	polyline {
		",
                            [Function],
                            ";
		",
                            [Function],
                            ";
	}

	.ti-background {
		",
                            [Function],
                            ";
	}

	.ti-border {
		",
                            [Function],
                            ";
	}

	&.spin {
		animation-name: svg-spin;
		animation-duration: 2s;
		animation-iteration-count: infinite;
		animation-timing-function: linear;
	}
	&.rotate-45 {
		transform: rotate(45deg);
	}
	&.rotate-90 {
		transform: rotate(90deg);
	}
	&.rotate-180 {
		transform: rotate(180deg);
	}
	&.rotate-270 {
		transform: rotate(270deg);
	}
	&.flip-vertical {
		transform: scaleY(-1);
	}
	&.flip-horizontal {
		transform: scaleX(-1);
	}
	@keyframes svg-spin {
		0% {
			transform: rotate(0deg);
		}

		100% {
			transform: rotate(360deg);
		}
	}
",
                          ],
                        },
                        "displayName": "styled.svg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": <svg
                          aria-hidden="true"
                          class="sc-EHOje dOvxkt tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                          focusable="false"
                          name="talend-arrow-left"
                        />,
                      }
                    }
                    name="talend-arrow-left"
                  >
                    <svg
                      aria-hidden="true"
                      className="sc-EHOje dOvxkt tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                      focusable="false"
                      name="talend-arrow-left"
                    />
                  </StyledComponent>
                </styled.svg>
              </ForwardRef>
            </span>
            <span
              className="theme-text"
            >
              Skip to navigation
            </span>
          </a>
        </SkipTo>
      </li>
      <li
        key="main"
      >
        <SkipTo
          href="#my-custom-main-id"
          label="Skip to main content"
        >
          <a
            href="#my-custom-main-id"
          >
            <span
              className="theme-icon"
            >
              <ForwardRef
                name="talend-arrow-left"
                transform="rotate-270"
              >
                <styled.svg
                  aria-hidden="true"
                  className="tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                  focusable="false"
                  name="talend-arrow-left"
                >
                  <StyledComponent
                    aria-hidden="true"
                    className="tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                    focusable="false"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "dOvxkt",
                          "rules": Array [
                            "
	width: ",
                            "1.6rem",
                            ";
	height: ",
                            "1.6rem",
                            ";
	transform-origin: center;

	circle,
	path,
	polygon,
	polyline {
		",
                            [Function],
                            ";
		",
                            [Function],
                            ";
	}

	.ti-background {
		",
                            [Function],
                            ";
	}

	.ti-border {
		",
                            [Function],
                            ";
	}

	&.spin {
		animation-name: svg-spin;
		animation-duration: 2s;
		animation-iteration-count: infinite;
		animation-timing-function: linear;
	}
	&.rotate-45 {
		transform: rotate(45deg);
	}
	&.rotate-90 {
		transform: rotate(90deg);
	}
	&.rotate-180 {
		transform: rotate(180deg);
	}
	&.rotate-270 {
		transform: rotate(270deg);
	}
	&.flip-vertical {
		transform: scaleY(-1);
	}
	&.flip-horizontal {
		transform: scaleX(-1);
	}
	@keyframes svg-spin {
		0% {
			transform: rotate(0deg);
		}

		100% {
			transform: rotate(360deg);
		}
	}
",
                          ],
                        },
                        "displayName": "styled.svg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": <svg
                          aria-hidden="true"
                          class="sc-EHOje dOvxkt tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                          focusable="false"
                          name="talend-arrow-left"
                        />,
                      }
                    }
                    name="talend-arrow-left"
                  >
                    <svg
                      aria-hidden="true"
                      className="sc-EHOje dOvxkt tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                      focusable="false"
                      name="talend-arrow-left"
                    />
                  </StyledComponent>
                </styled.svg>
              </ForwardRef>
            </span>
            <span
              className="theme-text"
            >
              Skip to main content
            </span>
          </a>
        </SkipTo>
      </li>
    </ul>
  </nav>
</withI18nextTranslation(SkipLinks)>
`;

exports[`Skip links should render only main link 1`] = `
<withI18nextTranslation(SkipLinks)
  mainId="#my-custom-main-id"
  t={[Function]}
>
  <nav
    aria-label="Skip links"
    className="theme-tc-skip-links"
  >
    <ul>
      <li
        key="main"
      >
        <SkipTo
          href="#my-custom-main-id"
          label="Skip to main content"
        >
          <a
            href="#my-custom-main-id"
          >
            <span
              className="theme-icon"
            >
              <ForwardRef
                name="talend-arrow-left"
                transform="rotate-270"
              >
                <styled.svg
                  aria-hidden="true"
                  className="tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                  focusable="false"
                  name="talend-arrow-left"
                >
                  <StyledComponent
                    aria-hidden="true"
                    className="tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                    focusable="false"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "dOvxkt",
                          "rules": Array [
                            "
	width: ",
                            "1.6rem",
                            ";
	height: ",
                            "1.6rem",
                            ";
	transform-origin: center;

	circle,
	path,
	polygon,
	polyline {
		",
                            [Function],
                            ";
		",
                            [Function],
                            ";
	}

	.ti-background {
		",
                            [Function],
                            ";
	}

	.ti-border {
		",
                            [Function],
                            ";
	}

	&.spin {
		animation-name: svg-spin;
		animation-duration: 2s;
		animation-iteration-count: infinite;
		animation-timing-function: linear;
	}
	&.rotate-45 {
		transform: rotate(45deg);
	}
	&.rotate-90 {
		transform: rotate(90deg);
	}
	&.rotate-180 {
		transform: rotate(180deg);
	}
	&.rotate-270 {
		transform: rotate(270deg);
	}
	&.flip-vertical {
		transform: scaleY(-1);
	}
	&.flip-horizontal {
		transform: scaleX(-1);
	}
	@keyframes svg-spin {
		0% {
			transform: rotate(0deg);
		}

		100% {
			transform: rotate(360deg);
		}
	}
",
                          ],
                        },
                        "displayName": "styled.svg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": <svg
                          aria-hidden="true"
                          class="sc-EHOje dOvxkt tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                          focusable="false"
                          name="talend-arrow-left"
                        />,
                      }
                    }
                    name="talend-arrow-left"
                  >
                    <svg
                      aria-hidden="true"
                      className="sc-EHOje dOvxkt tc-svg-icon rotate-270 tc-icon-name-talend-arrow-left"
                      focusable="false"
                      name="talend-arrow-left"
                    />
                  </StyledComponent>
                </styled.svg>
              </ForwardRef>
            </span>
            <span
              className="theme-text"
            >
              Skip to main content
            </span>
          </a>
        </SkipTo>
      </li>
    </ul>
  </nav>
</withI18nextTranslation(SkipLinks)>
`;
