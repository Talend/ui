// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Action should apply transformation on icon 1`] = `
<Button
  active={false}
  aria-label="Click me"
  block={false}
  bsClass="btn"
  bsStyle="default"
  data-feature="action.feature"
  disabled={false}
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <Icon
    name="talend-caret-down"
    transform="rotate-180"
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should display a Progress indicator if set 1`] = `
<Button
  active={false}
  aria-label="{{label}} (in progress)"
  block={false}
  bsClass="btn"
  bsStyle="default"
  className="navbar-btn theme-btn-disabled"
  data-feature="action.feature"
  disabled={true}
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <CircularProgress
    size="small"
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should display a disabled Icon 1`] = `
<Button
  active={false}
  aria-label="Click me"
  block={false}
  bsClass="btn"
  bsStyle="default"
  className="navbar-btn theme-btn-disabled"
  data-feature="action.feature"
  disabled={true}
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <Icon
    name="talend-caret-down"
    transform={undefined}
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should pass all props to the Button 1`] = `
<Button
  active={false}
  aria-label="Click me"
  block={false}
  bsClass="btn"
  bsStyle="default"
  className="navbar-btn"
  data-feature="action.feature"
  disabled={false}
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <Icon
    name="talend-caret-down"
    transform={undefined}
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should render a button 1`] = `
<Button
  active={false}
  aria-label="Click me"
  block={false}
  bsClass="btn"
  bsStyle="default"
  data-feature="action.feature"
  disabled={false}
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <Icon
    name="talend-caret-down"
    transform={undefined}
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should render a button with a overlay component 1`] = `
<span>
  <OverlayTrigger
    defaultOverlayShown={false}
    overlay={
      <Popover
        bsClass="popover"
        id="myOverlayId"
        placement="right"
      >
        [Function]
      </Popover>
    }
    placement="bottom"
    rootClose={true}
    trigger="click"
  >
    <Button
      active={false}
      aria-label="Click me"
      block={false}
      bsClass="btn"
      bsStyle="default"
      data-feature="action.feature"
      disabled={false}
      onClick={null}
      onMouseDown={null}
      role={null}
      title="Title to describe click me button"
    >
      <Icon
        name="talend-caret-down"
        transform={undefined}
      />
      <span>
        Click me
      </span>
    </Button>
  </OverlayTrigger>
</span>
`;

exports[`Action should render a button with loading state 1`] = `
<Translate(Skeleton)
  type="button"
/>
`;

exports[`Action should render a button without an overlay component if inProgress is true 1`] = `
<Button
  active={false}
  aria-label="{{label}} (in progress)"
  block={false}
  bsClass="btn"
  bsStyle="default"
  className="theme-btn-disabled"
  data-feature="action.feature"
  disabled={true}
  onClick={null}
  onMouseDown={null}
  role={null}
  title="Title to describe click me button"
>
  <CircularProgress
    size="small"
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should render a link button with loading state 1`] = `
<Button
  active={false}
  aria-label=" {{type}} (loading)"
  block={false}
  bsClass="btn"
  bsStyle="link"
  disabled={false}
  onClick={[Function]}
  onMouseDown={[Function]}
  role="link"
>
  <Translate(Skeleton)
    className="theme-tc-action-button-skeleton-circle tc-action-button-skeleton-circle"
    size="small"
    type="circle"
  />
  <Translate(Skeleton)
    size="medium"
    type="text"
  />
</Button>
`;

exports[`Action should render action with html property name = props.name if set 1`] = `
<Button
  active={false}
  aria-label="Click me"
  block={false}
  bsClass="btn"
  bsStyle="default"
  data-feature="action.feature"
  disabled={false}
  name="custom_name"
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <Icon
    name="talend-caret-down"
    transform={undefined}
  />
  <span>
    Click me
  </span>
</Button>
`;

exports[`Action should reverse icon/label 1`] = `
<Button
  active={false}
  aria-label="Click me"
  block={false}
  bsClass="btn"
  bsStyle="default"
  data-feature="action.feature"
  disabled={false}
  onClick={[Function]}
  onMouseDown={[Function]}
  role={null}
  title="Title to describe click me button"
>
  <span>
    Click me
  </span>
  <Icon
    name="talend-caret-down"
    transform={undefined}
  />
</Button>
`;
