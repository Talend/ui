// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Status should render a label 1`] = `
<div
  className="theme-tc-status tc-status theme-action"
  role="status"
>
  <span
    className="theme-tc-status-icon tc-status-icon theme-success"
  >
    
  </span>
  <span
    className="theme-tc-status-label tc-status-label"
  >
    Successful
  </span>
  <span
    className="theme-tc-status-actions tc-status-actions"
  >
    <div
      className="tc-actions btn-group"
    >
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-cancel"
          focusable="false"
          title={null}
        />
        <span>
          cancel
        </span>
      </button>
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-delete"
          focusable="false"
          title={null}
        />
        <span>
          delete
        </span>
      </button>
    </div>
  </span>
</div>
`;

exports[`Status should render a label with Icon 1`] = `
<div
  className="theme-tc-status tc-status theme-action"
  role="status"
>
  <span
    className="theme-tc-status-icon tc-status-icon theme-success"
  >
    <i
      aria-hidden="true"
      className="fa fa-check"
      focusable="false"
      title={null}
    />
  </span>
  <span
    className="theme-tc-status-label tc-status-label"
  >
    Successful
  </span>
  <span
    className="theme-tc-status-actions tc-status-actions"
  >
    <div
      className="tc-actions btn-group"
    >
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-cancel"
          focusable="false"
          title={null}
        />
        <span>
          cancel
        </span>
      </button>
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-delete"
          focusable="false"
          title={null}
        />
        <span>
          delete
        </span>
      </button>
    </div>
  </span>
</div>
`;

exports[`Status should render a label with Icon without actions 1`] = `
<div
  className="theme-tc-status tc-status"
  role="status"
>
  <span
    className="theme-tc-status-icon tc-status-icon theme-success"
  >
    <i
      aria-hidden="true"
      className="fa fa-check"
      focusable="false"
      title={null}
    />
  </span>
  <span
    className="theme-tc-status-label tc-status-label"
  >
    Successful
  </span>
  <span
    className="theme-tc-status-actions tc-status-actions"
  >
    <div
      className="tc-actions btn-group"
    />
  </span>
</div>
`;

exports[`Status should render a label with a continuous circular progress 1`] = `
<div
  className="theme-tc-status tc-status theme-action"
  role="status"
>
  <span
    className="theme-tc-status-icon tc-status-icon theme-info"
  >
    <svg
      className="tc-circular-progress theme-loader theme-animate theme-small"
      focusable="false"
      viewBox="0 0 50 50"
    >
      <circle
        className="theme-path"
        cx={25}
        cy={25}
        fill="none"
        r={20}
        style={
          Object {
            "strokeDasharray": 12.566370614359172,
            "strokeDashoffset": 0,
          }
        }
      />
    </svg>
  </span>
  <span
    className="theme-tc-status-label tc-status-label"
  >
    In Progress
  </span>
  <span
    className="theme-tc-status-actions tc-status-actions"
  >
    <div
      className="tc-actions btn-group"
    >
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-cancel"
          focusable="false"
          title={null}
        />
        <span>
          cancel
        </span>
      </button>
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-delete"
          focusable="false"
          title={null}
        />
        <span>
          delete
        </span>
      </button>
    </div>
  </span>
</div>
`;

exports[`Status should render a label with a fixed circular progress 1`] = `
<div
  className="theme-tc-status tc-status theme-action"
  role="status"
>
  <span
    className="theme-tc-status-icon tc-status-icon theme-info"
  >
    <svg
      className="tc-circular-progress theme-loader theme-animate theme-small"
      focusable="false"
      viewBox="0 0 50 50"
    >
      <circle
        className="theme-path"
        cx={25}
        cy={25}
        fill="none"
        r={20}
        style={
          Object {
            "strokeDasharray": 12.566370614359172,
            "strokeDashoffset": 0,
          }
        }
      />
    </svg>
  </span>
  <span
    className="theme-tc-status-label tc-status-label"
  >
    In Progress
  </span>
  <span
    className="theme-tc-status-actions tc-status-actions"
  >
    <div
      className="tc-actions btn-group"
    >
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-cancel"
          focusable="false"
          title={null}
        />
        <span>
          cancel
        </span>
      </button>
      <button
        className="btn btn-sm btn-default"
        disabled={false}
        onClick={[Function]}
        onMouseDown={[Function]}
        role={null}
        type="button"
      >
        <i
          aria-hidden="true"
          className="fa fa-delete"
          focusable="false"
          title={null}
        />
        <span>
          delete
        </span>
      </button>
    </div>
  </span>
</div>
`;
