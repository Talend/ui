// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ObjectViewer.List should render List with props data as an array 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    data={
        Array [
            Object {
              "field0": "header1",
            },
            Object {
              "field1": "header2",
            },
          ]
    }
    flat={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <li>
          <JSONLike
                    data={
                              Object {
                                        "field0": "header1",
                                      }
                    }
                    flat={true}
                    jsonpath="$[0]"
          />
</li>,
        <li>
          <JSONLike
                    data={
                              Object {
                                        "field1": "header2",
                                      }
                    }
                    flat={true}
                    jsonpath="$[1]"
          />
</li>,
      ],
      "className": "undefined tc-object-viewer list-unstyled",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": <JSONLike
            data={
                        Object {
                                    "field0": "header1",
                                  }
            }
            flat={true}
            jsonpath="$[0]"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Object {
              "field0": "header1",
            },
            "flat": true,
            "jsonpath": "$[0]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "li",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <JSONLike
            data={
                        Object {
                                    "field1": "header2",
                                  }
            }
            flat={true}
            jsonpath="$[1]"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Object {
              "field1": "header2",
            },
            "flat": true,
            "jsonpath": "$[1]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "li",
      },
    ],
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li>
            <JSONLike
                        data={
                                    Object {
                                                "field0": "header1",
                                              }
                        }
                        flat={true}
                        jsonpath="$[0]"
            />
</li>,
          <li>
            <JSONLike
                        data={
                                    Object {
                                                "field1": "header2",
                                              }
                        }
                        flat={true}
                        jsonpath="$[1]"
            />
</li>,
        ],
        "className": "undefined tc-object-viewer list-unstyled",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <JSONLike
              data={
                            Object {
                                          "field0": "header1",
                                        }
              }
              flat={true}
              jsonpath="$[0]"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data": Object {
                "field0": "header1",
              },
              "flat": true,
              "jsonpath": "$[0]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <JSONLike
              data={
                            Object {
                                          "field1": "header2",
                                        }
              }
              flat={true}
              jsonpath="$[1]"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data": Object {
                "field1": "header2",
              },
              "flat": true,
              "jsonpath": "$[1]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`ObjectViewer.List should render List with props data as an object 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    data={
        Object {
            "dataset": Array [
              Object {
                "field0": "header1",
              },
              Object {
                "field1": "header2",
              },
            ],
            "schema": Map {
              "field0" => "type1",
              "field1" => "type2",
            },
          }
    }
    flat={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <li>
          <JSONLike
                    data={
                              Object {
                                        "field0": "header1",
                                      }
                    }
                    flat={true}
                    jsonpath="$[0]"
          />
</li>,
        <li>
          <JSONLike
                    data={
                              Object {
                                        "field1": "header2",
                                      }
                    }
                    flat={true}
                    jsonpath="$[1]"
          />
</li>,
      ],
      "className": "undefined tc-object-viewer list-unstyled",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": <JSONLike
            data={
                        Object {
                                    "field0": "header1",
                                  }
            }
            flat={true}
            jsonpath="$[0]"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Object {
              "field0": "header1",
            },
            "flat": true,
            "jsonpath": "$[0]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "li",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <JSONLike
            data={
                        Object {
                                    "field1": "header2",
                                  }
            }
            flat={true}
            jsonpath="$[1]"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Object {
              "field1": "header2",
            },
            "flat": true,
            "jsonpath": "$[1]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "li",
      },
    ],
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li>
            <JSONLike
                        data={
                                    Object {
                                                "field0": "header1",
                                              }
                        }
                        flat={true}
                        jsonpath="$[0]"
            />
</li>,
          <li>
            <JSONLike
                        data={
                                    Object {
                                                "field1": "header2",
                                              }
                        }
                        flat={true}
                        jsonpath="$[1]"
            />
</li>,
        ],
        "className": "undefined tc-object-viewer list-unstyled",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <JSONLike
              data={
                            Object {
                                          "field0": "header1",
                                        }
              }
              flat={true}
              jsonpath="$[0]"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data": Object {
                "field0": "header1",
              },
              "flat": true,
              "jsonpath": "$[0]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <JSONLike
              data={
                            Object {
                                          "field1": "header2",
                                        }
              }
              flat={true}
              jsonpath="$[1]"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data": Object {
                "field1": "header2",
              },
              "flat": true,
              "jsonpath": "$[1]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
