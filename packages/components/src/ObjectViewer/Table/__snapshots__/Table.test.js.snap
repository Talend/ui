// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table should render Table with props data as an array 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Table
    data={
        Array [
            Object {
              "field0": "header1",
            },
            Object {
              "field1": "header2",
            },
          ]
    }
    flat={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <thead>
          <tr>
                    <td>
                              field0
                    </td>
          </tr>
</thead>,
        <tbody>
          <tr>
                    <td>
                              <JSONLike
                                        data="header1"
                                        jsonpath="$[0]['field0']"
                              />
                    </td>
          </tr>
          <tr>
                    <td>
                              <JSONLike
                                        data={undefined}
                                        jsonpath="$[1]['field0']"
                              />
                    </td>
          </tr>
</tbody>,
      ],
      "className": "tc-object-viewer table table-bordered table-striped table-hover",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <tr>
            <td>
                        field0
            </td>
</tr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <td>
                field0
</td>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": "field0",
              },
              "ref": null,
              "rendered": "field0",
              "type": "td",
            },
          ],
          "type": "tr",
        },
        "type": "thead",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <tr>
              <td>
                            <JSONLike
                                          data="header1"
                                          jsonpath="$[0]['field0']"
                            />
              </td>
</tr>,
            <tr>
              <td>
                            <JSONLike
                                          data={undefined}
                                          jsonpath="$[1]['field0']"
                            />
              </td>
</tr>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  <JSONLike
                                    data="header1"
                                    jsonpath="$[0]['field0']"
                  />
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": <JSONLike
                    data="header1"
                    jsonpath="$[0]['field0']"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "data": "header1",
                    "jsonpath": "$[0]['field0']",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "td",
              },
            ],
            "type": "tr",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  <JSONLike
                                    data={undefined}
                                    jsonpath="$[1]['field0']"
                  />
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": <JSONLike
                    data={undefined}
                    jsonpath="$[1]['field0']"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "data": undefined,
                    "jsonpath": "$[1]['field0']",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "td",
              },
            ],
            "type": "tr",
          },
        ],
        "type": "tbody",
      },
    ],
    "type": "table",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
                        <td>
                                    field0
                        </td>
            </tr>
</thead>,
          <tbody>
            <tr>
                        <td>
                                    <JSONLike
                                                data="header1"
                                                jsonpath="$[0]['field0']"
                                    />
                        </td>
            </tr>
            <tr>
                        <td>
                                    <JSONLike
                                                data={undefined}
                                                jsonpath="$[1]['field0']"
                                    />
                        </td>
            </tr>
</tbody>,
        ],
        "className": "tc-object-viewer table table-bordered table-striped table-hover",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <td>
                            field0
              </td>
</tr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  field0
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": "field0",
                },
                "ref": null,
                "rendered": "field0",
                "type": "td",
              },
            ],
            "type": "tr",
          },
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr>
                <td>
                                <JSONLike
                                                data="header1"
                                                jsonpath="$[0]['field0']"
                                />
                </td>
</tr>,
              <tr>
                <td>
                                <JSONLike
                                                data={undefined}
                                                jsonpath="$[1]['field0']"
                                />
                </td>
</tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    <JSONLike
                                        data="header1"
                                        jsonpath="$[0]['field0']"
                    />
</td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "host",
                  "props": Object {
                    "children": <JSONLike
                      data="header1"
                      jsonpath="$[0]['field0']"
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "data": "header1",
                      "jsonpath": "$[0]['field0']",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    <JSONLike
                                        data={undefined}
                                        jsonpath="$[1]['field0']"
                    />
</td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "host",
                  "props": Object {
                    "children": <JSONLike
                      data={undefined}
                      jsonpath="$[1]['field0']"
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "data": undefined,
                      "jsonpath": "$[1]['field0']",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "td",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "tbody",
        },
      ],
      "type": "table",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Table should render Table with props data as an object 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Table
    data={
        Object {
            "dataset": Array [
              Object {
                "field0": "header1",
              },
              Object {
                "field1": "header2",
              },
            ],
            "schema": Map {
              "field0" => "type1",
              "field1" => "type2",
            },
          }
    }
    flat={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <thead>
          <tr>
                    <td>
                              <div>
                                        field0
                              </div>
                              <div
                                        className="text-right"
                              >
                                        type1
                              </div>
                    </td>
          </tr>
</thead>,
        <tbody>
          <tr>
                    <td>
                              <JSONLike
                                        data="header1"
                                        jsonpath="$[0]['field0']"
                              />
                    </td>
          </tr>
          <tr>
                    <td>
                              <JSONLike
                                        data={undefined}
                                        jsonpath="$[1]['field0']"
                              />
                    </td>
          </tr>
</tbody>,
      ],
      "className": "tc-object-viewer table table-bordered table-striped table-hover",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <tr>
            <td>
                        <div>
                                    field0
                        </div>
                        <div
                                    className="text-right"
                        >
                                    type1
                        </div>
            </td>
</tr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <td>
                <div>
                                field0
                </div>
                <div
                                className="text-right"
                >
                                type1
                </div>
</td>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    field0
</div>,
                  <div
                    className="text-right"
>
                    type1
</div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "field0",
                  },
                  "ref": null,
                  "rendered": "field0",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "type1",
                    "className": "text-right",
                  },
                  "ref": null,
                  "rendered": "type1",
                  "type": "div",
                },
              ],
              "type": "td",
            },
          ],
          "type": "tr",
        },
        "type": "thead",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <tr>
              <td>
                            <JSONLike
                                          data="header1"
                                          jsonpath="$[0]['field0']"
                            />
              </td>
</tr>,
            <tr>
              <td>
                            <JSONLike
                                          data={undefined}
                                          jsonpath="$[1]['field0']"
                            />
              </td>
</tr>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  <JSONLike
                                    data="header1"
                                    jsonpath="$[0]['field0']"
                  />
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": <JSONLike
                    data="header1"
                    jsonpath="$[0]['field0']"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "data": "header1",
                    "jsonpath": "$[0]['field0']",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "td",
              },
            ],
            "type": "tr",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  <JSONLike
                                    data={undefined}
                                    jsonpath="$[1]['field0']"
                  />
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": <JSONLike
                    data={undefined}
                    jsonpath="$[1]['field0']"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "data": undefined,
                    "jsonpath": "$[1]['field0']",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "td",
              },
            ],
            "type": "tr",
          },
        ],
        "type": "tbody",
      },
    ],
    "type": "table",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
                        <td>
                                    <div>
                                                field0
                                    </div>
                                    <div
                                                className="text-right"
                                    >
                                                type1
                                    </div>
                        </td>
            </tr>
</thead>,
          <tbody>
            <tr>
                        <td>
                                    <JSONLike
                                                data="header1"
                                                jsonpath="$[0]['field0']"
                                    />
                        </td>
            </tr>
            <tr>
                        <td>
                                    <JSONLike
                                                data={undefined}
                                                jsonpath="$[1]['field0']"
                                    />
                        </td>
            </tr>
</tbody>,
        ],
        "className": "tc-object-viewer table table-bordered table-striped table-hover",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <td>
                            <div>
                                          field0
                            </div>
                            <div
                                          className="text-right"
                            >
                                          type1
                            </div>
              </td>
</tr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  <div>
                                    field0
                  </div>
                  <div
                                    className="text-right"
                  >
                                    type1
                  </div>
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      field0
</div>,
                    <div
                      className="text-right"
>
                      type1
</div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "field0",
                    },
                    "ref": null,
                    "rendered": "field0",
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "type1",
                      "className": "text-right",
                    },
                    "ref": null,
                    "rendered": "type1",
                    "type": "div",
                  },
                ],
                "type": "td",
              },
            ],
            "type": "tr",
          },
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr>
                <td>
                                <JSONLike
                                                data="header1"
                                                jsonpath="$[0]['field0']"
                                />
                </td>
</tr>,
              <tr>
                <td>
                                <JSONLike
                                                data={undefined}
                                                jsonpath="$[1]['field0']"
                                />
                </td>
</tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    <JSONLike
                                        data="header1"
                                        jsonpath="$[0]['field0']"
                    />
</td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "host",
                  "props": Object {
                    "children": <JSONLike
                      data="header1"
                      jsonpath="$[0]['field0']"
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "data": "header1",
                      "jsonpath": "$[0]['field0']",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    <JSONLike
                                        data={undefined}
                                        jsonpath="$[1]['field0']"
                    />
</td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "host",
                  "props": Object {
                    "children": <JSONLike
                      data={undefined}
                      jsonpath="$[1]['field0']"
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "data": undefined,
                      "jsonpath": "$[1]['field0']",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "td",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "tbody",
        },
      ],
      "type": "table",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Table should render if data is empty 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Table
    data={Array []}
    flat={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <thead>
          <tr>
                    <td>
                              $
                    </td>
          </tr>
</thead>,
        <tbody>
          
</tbody>,
      ],
      "className": "tc-object-viewer table table-bordered table-striped table-hover",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <tr>
            <td>
                        $
            </td>
</tr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <td>
                $
</td>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": "$",
              },
              "ref": null,
              "rendered": "$",
              "type": "td",
            },
          ],
          "type": "tr",
        },
        "type": "thead",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": "tbody",
      },
    ],
    "type": "table",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
                        <td>
                                    $
                        </td>
            </tr>
</thead>,
          <tbody>
            
</tbody>,
        ],
        "className": "tc-object-viewer table table-bordered table-striped table-hover",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <td>
                            $
              </td>
</tr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <td>
                  $
</td>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": "$",
                },
                "ref": null,
                "rendered": "$",
                "type": "td",
              },
            ],
            "type": "tr",
          },
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": "tbody",
        },
      ],
      "type": "table",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Table should render null if data.datas is not an array 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Table
    data={
        Object {
            "dataset": "toto",
          }
    }
    flat={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`buildContentHeaders should return a jsx array with a type 1`] = `
Array [
  <td>
    <div>
        myHeader1
    </div>
    <div
        className="text-right"
    >
        type1
    </div>
</td>,
  <td>
    <div>
        myHeader2
    </div>
    <div
        className="text-right"
    >
        type2
    </div>
</td>,
]
`;

exports[`buildContentHeaders should return a jsx array with no type 1`] = `
Array [
  <td>
    myHeader1
</td>,
  <td>
    myHeader2
</td>,
]
`;
