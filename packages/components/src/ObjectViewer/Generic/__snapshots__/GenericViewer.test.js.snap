// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenericViewer should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GenericViewer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <HierarchicTree
        dataKey={undefined}
        getJSONPath={[Function]}
        jsonpath="$"
        level={0}
        value={undefined}
/>,
      "className": "theme-tc-hierarchic tc-hierarchic",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "dataKey": undefined,
        "getJSONPath": [Function],
        "jsonpath": "$",
        "level": 0,
        "value": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <HierarchicTree
          dataKey={undefined}
          getJSONPath={[Function]}
          jsonpath="$"
          level={0}
          value={undefined}
/>,
        "className": "theme-tc-hierarchic tc-hierarchic",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "dataKey": undefined,
          "getJSONPath": [Function],
          "jsonpath": "$",
          "level": 0,
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
