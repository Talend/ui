// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HierarchicTree should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HierarchicTree
    getJSONPath={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <TreeItem
        getDataType={[Function]}
        getJSONPath={[Function]}
        highlighted={Array []}
        jsonpath=""
        level={undefined}
        opened={Array []}
        type={undefined}
        value=""
/>,
      "className": "theme-tc-hierarchic-item tc-hierarchic-item",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "getDataType": [Function],
        "getJSONPath": [Function],
        "highlighted": Array [],
        "jsonpath": "",
        "level": undefined,
        "opened": Array [],
        "type": undefined,
        "value": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <TreeItem
          getDataType={[Function]}
          getJSONPath={[Function]}
          highlighted={Array []}
          jsonpath=""
          level={undefined}
          opened={Array []}
          type={undefined}
          value=""
/>,
        "className": "theme-tc-hierarchic-item tc-hierarchic-item",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "getDataType": [Function],
          "getJSONPath": [Function],
          "highlighted": Array [],
          "jsonpath": "",
          "level": undefined,
          "opened": Array [],
          "type": undefined,
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`TreeItem should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TreeItem
    getDataType={[Function]}
    highlighted={Array []}
    jsonpath=""
    opened={Array []}
    value=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "className": "theme-tc-hierarchic-item-content tc-hierarchic-item-content",
      "getDataType": [Function],
      "getDisplayKey": [Function],
      "getDisplayValue": [Function],
      "getQuality": [Function],
      "highlighted": Array [],
      "isOpened": false,
      "jsonpath": "",
      "onClick": undefined,
      "opened": Array [],
      "style": Object {
        "paddingLeft": NaN,
      },
      "type": "string",
      "value": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "className": "theme-tc-hierarchic-item-content tc-hierarchic-item-content",
        "getDataType": [Function],
        "getDisplayKey": [Function],
        "getDisplayValue": [Function],
        "getQuality": [Function],
        "highlighted": Array [],
        "isOpened": false,
        "jsonpath": "",
        "onClick": undefined,
        "opened": Array [],
        "style": Object {
          "paddingLeft": NaN,
        },
        "type": "string",
        "value": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
