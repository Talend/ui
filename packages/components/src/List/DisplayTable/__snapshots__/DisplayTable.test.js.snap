// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CellContent should render 1`] = `
<TooltipTrigger
  label="hello"
  tooltipPlacement="top"
>
  <span
    className="item-text"
  >
    hello
  </span>
</TooltipTrigger>
`;

exports[`CellContent should render array 1`] = `
<Actions
  actions={
    Array [
      Object {
        "label": "action",
      },
    ]
  }
  hideLabel={true}
  link={true}
/>
`;

exports[`CellContent should render title 1`] = `
<ItemTitle
  id="my-id-title"
  item={
    Object {
      "test": "hello",
    }
  }
  titleProps={
    Object {
      "foo": "bar",
    }
  }
/>
`;

exports[`CellContent should render undefined 1`] = `
<TooltipTrigger
  label=""
  tooltipPlacement="top"
>
  <span
    className="item-text"
  />
</TooltipTrigger>
`;

exports[`ColumnHeader should render 1`] = `
<th>
  <span
    className={undefined}
  >
    Test
  </span>
  <div
    aria-hidden="true"
  >
    Test
  </div>
</th>
`;

exports[`ColumnHeader should render an invisible screen reader compatible column header 1`] = `
<th>
  <span
    className="sr-only"
  >
    Test
  </span>
</th>
`;

exports[`ColumnHeader should render with sort 1`] = `
<th>
  <Action
    aria-label="Sort on Test field"
    available={true}
    bsStyle="default"
    className={undefined}
    disabled={false}
    icon="talend-caret-down"
    iconPosition="right"
    iconTransform={null}
    inProgress={false}
    label="Test"
    link={true}
    onClick={[Function]}
    tooltipPlacement="top"
  />
  <div
    aria-hidden="true"
  >
    Test
  </div>
</th>
`;

exports[`ListHeaders should render 1`] = `
<tr>
  <ColumnHeader
    column={
      Object {
        "item": "value",
      }
    }
    index={0}
    sort={
      Object {
        "foo": "bar",
      }
    }
  />
</tr>
`;

exports[`RowRenderer should render 1`] = `
<tr
  className=""
  id={undefined}
>
  <td>
    <div
      className="tc-list-display-table-td"
    >
      <div
        className="cell"
      >
        <CellContent
          column={
            Object {
              "key": "foo",
            }
          }
          id={undefined}
          isTitle={true}
          item={
            Object {
              "baz": "hello",
              "foo": "bar",
            }
          }
          titleProps={
            Object {
              "key": "foo",
            }
          }
        />
      </div>
    </div>
  </td>
  <td>
    <div
      className="tc-list-display-table-td"
    >
      <div
        className="cell"
      >
        <CellContent
          column={
            Object {
              "key": "baz",
            }
          }
          id={undefined}
          isTitle={false}
          item={
            Object {
              "baz": "hello",
              "foo": "bar",
            }
          }
          titleProps={
            Object {
              "key": "foo",
            }
          }
        />
      </div>
    </div>
  </td>
</tr>
`;
