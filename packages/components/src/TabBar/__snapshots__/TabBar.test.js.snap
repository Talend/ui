// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabBar component should render with selected children from item definition 1`] = `
<Uncontrolled(TabContainer)
  activeKey="3"
  className="tabs-classname"
  id="my-tabs"
  onKeyDown={[Function]}
  onSelect={[Function]}
>
  <div>
    <Nav
      bsClass="nav"
      bsStyle="tabs"
      className="tc-tab-bar theme-tc-responsive-tab-bar"
      justified={false}
      pullLeft={false}
      pullRight={false}
      stacked={false}
    >
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.1"
        disabled={false}
        eventKey="1"
        label="Tab1"
      >
        Tab1
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.2"
        disabled={false}
        eventKey="2"
        label="Tab2"
      >
        Tab2
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.3"
        disabled={false}
        eventKey="3"
        label="Tab3"
      >
        Tab3
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.4"
        disabled={false}
        eventKey="4"
        label="Tab4"
      >
        Tab4
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.5"
        disabled={false}
        eventKey="5"
        label="Tab5"
      >
        Tab5
      </NavItem>
    </Nav>
    <TabContent
      animation={true}
      bsClass="tab"
      componentClass="div"
      mountOnEnter={false}
      unmountOnExit={false}
    >
      <TabPane
        bsClass="tab-pane"
        eventKey="1"
      >
        <div>
          child 
          0
        </div>
      </TabPane>
      <TabPane
        bsClass="tab-pane"
        eventKey="2"
      >
        <div>
          child 
          1
        </div>
      </TabPane>
      <TabPane
        bsClass="tab-pane"
        eventKey="3"
      >
        <div>
          child 
          2
        </div>
      </TabPane>
      <TabPane
        bsClass="tab-pane"
        eventKey="4"
      >
        <div>
          child 
          3
        </div>
      </TabPane>
      <TabPane
        bsClass="tab-pane"
        eventKey="5"
      >
        <div>
          child 
          4
        </div>
      </TabPane>
    </TabContent>
  </div>
</Uncontrolled(TabContainer)>
`;

exports[`TabBar component should render with selected children managed by user 1`] = `
<Uncontrolled(TabContainer)
  activeKey="3"
  className="tabs-classname"
  id="my-tabs"
  onKeyDown={[Function]}
  onSelect={[Function]}
>
  <div>
    <Nav
      bsClass="nav"
      bsStyle="tabs"
      className="tc-tab-bar theme-tc-responsive-tab-bar"
      justified={false}
      pullLeft={false}
      pullRight={false}
      stacked={false}
    >
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.1"
        disabled={false}
        eventKey="1"
        label="Tab1"
      >
        Tab1
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.2"
        disabled={false}
        eventKey="2"
        label="Tab2"
      >
        Tab2
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.3"
        disabled={false}
        eventKey="3"
        label="Tab3"
      >
        Tab3
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.4"
        disabled={false}
        eventKey="4"
        label="Tab4"
      >
        Tab4
      </NavItem>
      <NavItem
        active={false}
        componentClass="button"
        data-feature="action.5"
        disabled={false}
        eventKey="5"
        label="Tab5"
      >
        Tab5
      </NavItem>
    </Nav>
    <TabContent
      animation={true}
      bsClass="tab"
      componentClass="div"
      mountOnEnter={false}
      unmountOnExit={false}
    >
      <TabPane
        bsClass="tab-pane"
        eventKey="1"
      />
      <TabPane
        bsClass="tab-pane"
        eventKey="2"
      />
      <TabPane
        bsClass="tab-pane"
        eventKey="3"
      >
        I'm the content
      </TabPane>
      <TabPane
        bsClass="tab-pane"
        eventKey="4"
      />
      <TabPane
        bsClass="tab-pane"
        eventKey="5"
      />
    </TabContent>
  </div>
</Uncontrolled(TabContainer)>
`;
