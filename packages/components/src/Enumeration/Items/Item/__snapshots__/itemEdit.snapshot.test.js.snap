// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item should display input value with error 1`] = `
<li
  className="tc-enumeration-item has-error"
  id="0-item"
>
  <div
    className="checkbox-container"
  >
    <div
      className="checkbox"
    >
      <label
        htmlFor="checkbox-undefined"
      >
        <input
          checked={false}
          id="checkbox-undefined"
          onChange={[Function]}
          type="checkbox"
        />
        <span>
          <span
            className="sr-only"
          >
            toto
          </span>
        </span>
      </label>
    </div>
    <input
      autoFocus={true}
      className="tc-enumeration-item-label"
      onChange={[Function]}
      onKeyDown={[Function]}
      type="text"
    />
  </div>
  <div
    className="tc-enumeration-item-actions"
  >
    <button
      aria-describedby={42}
      className="btn btn-link"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="link"
      type="button"
    />
    <button
      aria-describedby={42}
      className="btn btn-link"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="link"
      type="button"
    />
  </div>
  <div
    className="tc-enumeration-item-error"
  >
    an error occured
  </div>
</li>
`;

exports[`Item should display input value with two buttons 1`] = `
<li
  className="tc-enumeration-item"
  id="0-item"
>
  <div
    className="checkbox-container"
  >
    <div
      className="checkbox"
    >
      <label
        htmlFor="checkbox-undefined"
      >
        <input
          checked={false}
          id="checkbox-undefined"
          onChange={[Function]}
          type="checkbox"
        />
        <span>
          <span
            className="sr-only"
          >
            toto
          </span>
        </span>
      </label>
    </div>
    <input
      autoFocus={true}
      className="tc-enumeration-item-label"
      onChange={[Function]}
      onKeyDown={[Function]}
      type="text"
    />
  </div>
  <div
    className="tc-enumeration-item-actions"
  >
    <button
      aria-describedby={42}
      className="btn btn-link"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="link"
      type="button"
    />
    <button
      aria-describedby={42}
      className="btn btn-link"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="link"
      type="button"
    />
  </div>
</li>
`;

exports[`Item should display input value with two buttons. The validate button is disabled 1`] = `
<li
  className="tc-enumeration-item"
  id="0-item"
>
  <div
    className="checkbox-container"
  >
    <div
      className="checkbox"
    >
      <label
        htmlFor="checkbox-undefined"
      >
        <input
          checked={false}
          id="checkbox-undefined"
          onChange={[Function]}
          type="checkbox"
        />
        <span>
          <span
            className="sr-only"
          >
            toto
          </span>
        </span>
      </label>
    </div>
    <input
      autoFocus={true}
      className="tc-enumeration-item-label"
      onChange={[Function]}
      onKeyDown={[Function]}
      type="text"
    />
  </div>
  <div
    className="tc-enumeration-item-actions"
  >
    <button
      aria-describedby={42}
      className="btn btn-link"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="link"
      type="button"
    />
    <button
      aria-describedby={42}
      className="btn btn-link"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      role="link"
      type="button"
    />
  </div>
</li>
`;
