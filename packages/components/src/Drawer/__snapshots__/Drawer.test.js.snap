// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer should not render if no children 1`] = `null`;

exports[`Drawer should render 1`] = `
<DrawerContainer
  className={undefined}
  stacked={undefined}
  style={undefined}
>
  <DrawerTitle
    onCancelAction={undefined}
    title="My drawer"
  />
  <div
    className="tc-drawer-main theme-tc-drawer-main"
  >
    <DrawerContent>
      <h1>
        Hello world
      </h1>
    </DrawerContent>
    <div
      className="tc-drawer-actionbar-container theme-tc-drawer-actionbar-container"
    >
      <ActionBar
        className="tc-drawer-actionbar theme-tc-drawer-actionbar"
      />
    </div>
  </div>
</DrawerContainer>
`;

exports[`Drawer should render stacked 1`] = `
<DrawerContainer
  className={undefined}
  stacked={true}
  style={undefined}
>
  <DrawerTitle
    onCancelAction={undefined}
    title="My drawer"
  />
  <div
    className="tc-drawer-main theme-tc-drawer-main"
  >
    <DrawerContent>
      <h1>
        Hello world
      </h1>
    </DrawerContent>
    <div
      className="tc-drawer-actionbar-container theme-tc-drawer-actionbar-container"
    >
      <ActionBar
        className="tc-drawer-actionbar theme-tc-drawer-actionbar"
      />
    </div>
  </div>
</DrawerContainer>
`;

exports[`Drawer should render using custom className 1`] = `
<DrawerContainer
  className="my-custom-drawer"
  stacked={undefined}
  style={undefined}
>
  <DrawerTitle
    onCancelAction={undefined}
    title="My drawer"
  />
  <div
    className="tc-drawer-main theme-tc-drawer-main"
  >
    <DrawerContent>
      <h1>
        Hello world
      </h1>
    </DrawerContent>
    <div
      className="tc-drawer-actionbar-container theme-tc-drawer-actionbar-container"
    >
      <ActionBar
        className="tc-drawer-actionbar theme-tc-drawer-actionbar"
      />
    </div>
  </div>
</DrawerContainer>
`;

exports[`Drawer should render using custom styles 1`] = `
<DrawerContainer
  className={undefined}
  stacked={undefined}
  style={
    Object {
      "top": 45,
    }
  }
>
  <DrawerTitle
    onCancelAction={undefined}
    title="My drawer"
  />
  <div
    className="tc-drawer-main theme-tc-drawer-main"
  >
    <DrawerContent>
      <h1>
        Hello world
      </h1>
    </DrawerContent>
    <div
      className="tc-drawer-actionbar-container theme-tc-drawer-actionbar-container"
    >
      <ActionBar
        className="tc-drawer-actionbar theme-tc-drawer-actionbar"
      />
    </div>
  </div>
</DrawerContainer>
`;

exports[`Drawer should render with tabs 1`] = `
<DrawerContainer
  className={undefined}
  stacked={undefined}
  style={undefined}
>
  <DrawerTitle
    onCancelAction={undefined}
    title="My drawer"
  />
  <div
    className="tc-drawer-tabs-container theme-tc-drawer-tabs-container"
  >
    <TabBar
      className="tc-drawer-tabs theme-tc-drawer-tabs"
      items={
        Array [
          Object {
            "key": "1",
            "label": "Tab 1",
          },
          Object {
            "key": "2",
            "label": "Tab 2",
          },
        ]
      }
      onSelect={[Function]}
      selectedKey="2"
    />
  </div>
  <div
    className="tc-drawer-main theme-tc-drawer-main"
  >
    <DrawerContent>
      <h1>
        Hello world
      </h1>
    </DrawerContent>
    <div
      className="tc-drawer-actionbar-container theme-tc-drawer-actionbar-container"
    >
      <ActionBar
        className="tc-drawer-actionbar theme-tc-drawer-actionbar"
      />
    </div>
  </div>
</DrawerContainer>
`;

exports[`Drawer.Animation should wrap drawer in a CSSTransition 1`] = `
<CSSTransition
  active={true}
  defaultStyle={
    Object {
      "transform": "translateX(100%)",
    }
  }
  enterStyle={
    Object {
      "transform": Array [
        "translateX(0%)",
      ],
    }
  }
  leaveStyle={
    Object {
      "transform": Array [
        "translateX(100%)",
      ],
    }
  }
  onTransitionComplete={[Function]}
  transitionAppear={true}
>
  <DrawerContent />
</CSSTransition>
`;

exports[`Drawer.Content should render 1`] = `
<div
  className="tc-drawer-content theme-tc-drawer-content"
>
  <h1>
    Hello world
  </h1>
</div>
`;

exports[`Drawer.Content should render content with extra className 1`] = `
<div
  className="tc-drawer-content theme-tc-drawer-content extraClass"
>
  <h1>
    Hello world
  </h1>
</div>
`;
