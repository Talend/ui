// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PieChartButton snapshots render should render a PieChartButton 1`] = `
<Button
  active={false}
  block={false}
  bsClass="btn"
  bsStyle="link"
  className="theme-tc-pie-chart-button tc-pie-chart-button"
  disabled={false}
  onClick={null}
  onMouseDown={null}
  role="button"
>
  <Translate(PieChartIcon)
    display="small"
    model={
      Array [
        Object {
          "color": "rio-grande",
          "percentage": 50,
        },
        Object {
          "color": "chestnut-rose",
          "percentage": 12,
        },
        Object {
          "color": "lightning-yellow",
          "percentage": 1,
        },
        Object {
          "color": "dove-gray",
          "percentage": 4,
        },
        Object {
          "color": "silver-chalice",
          "percentage": 3,
        },
      ]
    }
  />
</Button>
`;

exports[`PieChartButton snapshots render should render a PieChartButton with an overlay 1`] = `
<span>
  <OverlayTrigger
    defaultOverlayShown={false}
    overlay={
      <Popover
        bsClass="popover"
        id="id-popover"
        placement="right"
      >
        <div>
          I am an overlay
        </div>
      </Popover>
    }
    placement="bottom"
    rootClose={true}
    trigger="click"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="link"
      className="theme-tc-pie-chart-button tc-pie-chart-button"
      disabled={false}
      onClick={null}
      onMouseDown={null}
      role="button"
    >
      <Translate(PieChartIcon)
        display="medium"
        labelIndex={2}
        model={
          Array [
            Object {
              "color": "rio-grande",
              "percentage": 50,
            },
            Object {
              "color": "chestnut-rose",
              "percentage": 12,
            },
            Object {
              "color": "lightning-yellow",
              "percentage": 1,
            },
            Object {
              "color": "dove-gray",
              "percentage": 4,
            },
            Object {
              "color": "silver-chalice",
              "percentage": 3,
            },
          ]
        }
      />
    </Button>
  </OverlayTrigger>
</span>
`;

exports[`decorateWithOverlay should return the component wrapped 1`] = `
<span>
  <OverlayTrigger
    defaultOverlayShown={false}
    overlay={
      <Popover
        bsClass="popover"
        id="id-test"
        placement="right"
      >
        <div
          className="fake-overlay"
        />
      </Popover>
    }
    placement="top"
    rootClose={true}
    trigger="click"
  >
    <div
      className="fake-button-element"
    />
  </OverlayTrigger>
</span>
`;
