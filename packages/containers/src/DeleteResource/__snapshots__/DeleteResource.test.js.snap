// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Container DeleteResource should render with proper resourceInfo params 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ConfirmDialog
    cancelAction={
        Object {
            "actionCreator": "deleteResource:cancel",
            "id": "dialog:delete:cancel",
            "label": "No",
            "model": Object {
              "resourceInfo": Object {
                "found": true,
                "id": "myResourceID",
                "label": "myLabel",
                "resourceType": "myResourceType",
                "uri": "/myEndpoint",
              },
            },
            "onClick": [Function],
          }
    }
    header="My header title"
    show={true}
    validateAction={
        Object {
            "actionCreator": "deleteResource:validate",
            "bsStyle": "danger",
            "id": "dialog:delete:validate",
            "label": "Yes",
            "model": Object {
              "resourceInfo": Object {
                "found": true,
                "id": "myResourceID",
                "label": "myLabel",
                "resourceType": "myResourceType",
                "uri": "/myEndpoint",
              },
            },
            "onClick": [Function],
          }
    }
>
    <div>
        myLabel
    </div>
</ConfirmDialog>,
  "nodes": Array [
    <ConfirmDialog
      cancelAction={
            Object {
                  "actionCreator": "deleteResource:cancel",
                  "id": "dialog:delete:cancel",
                  "label": "No",
                  "model": Object {
                    "resourceInfo": Object {
                      "found": true,
                      "id": "myResourceID",
                      "label": "myLabel",
                      "resourceType": "myResourceType",
                      "uri": "/myEndpoint",
                    },
                  },
                  "onClick": [Function],
                }
      }
      header="My header title"
      show={true}
      validateAction={
            Object {
                  "actionCreator": "deleteResource:validate",
                  "bsStyle": "danger",
                  "id": "dialog:delete:validate",
                  "label": "Yes",
                  "model": Object {
                    "resourceInfo": Object {
                      "found": true,
                      "id": "myResourceID",
                      "label": "myLabel",
                      "resourceType": "myResourceType",
                      "uri": "/myEndpoint",
                    },
                  },
                  "onClick": [Function],
                }
      }
>
      <div>
            myLabel
      </div>
</ConfirmDialog>,
  ],
  "options": Object {
    "context": Object {
      "store": Object {
        "getState": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "store": Object {
          "getState": [Function],
        },
      },
      "_currentElement": <Container(DeleteResource)
        cancel-action="dialog:delete:cancel"
        header="My header title"
        params={
                Object {
                        "id": "myResourceID",
                      }
        }
        resourceType="myResourceType"
        uri="/myEndpoint"
        validate-action="dialog:delete:validate"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": DeleteResource {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "registry": undefined,
          "store": Object {
            "getState": [Function],
          },
        },
        "getActions": [Function],
        "getLabel": [Function],
        "props": Object {
          "cancel-action": "dialog:delete:cancel",
          "header": "My header title",
          "params": Object {
            "id": "myResourceID",
          },
          "resourceType": "myResourceType",
          "uri": "/myEndpoint",
          "validate-action": "dialog:delete:validate",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ConfirmDialog
          cancelAction={
                    Object {
                              "actionCreator": "deleteResource:cancel",
                              "id": "dialog:delete:cancel",
                              "label": "No",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": true,
                                  "id": "myResourceID",
                                  "label": "myLabel",
                                  "resourceType": "myResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
          header="My header title"
          show={true}
          validateAction={
                    Object {
                              "actionCreator": "deleteResource:validate",
                              "bsStyle": "danger",
                              "id": "dialog:delete:validate",
                              "label": "Yes",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": true,
                                  "id": "myResourceID",
                                  "label": "myLabel",
                                  "resourceType": "myResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
>
          <div>
                    myLabel
          </div>
</ConfirmDialog>,
        "_debugID": 2,
        "_renderedOutput": <ConfirmDialog
          cancelAction={
                    Object {
                              "actionCreator": "deleteResource:cancel",
                              "id": "dialog:delete:cancel",
                              "label": "No",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": true,
                                  "id": "myResourceID",
                                  "label": "myLabel",
                                  "resourceType": "myResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
          header="My header title"
          show={true}
          validateAction={
                    Object {
                              "actionCreator": "deleteResource:validate",
                              "bsStyle": "danger",
                              "id": "dialog:delete:validate",
                              "label": "Yes",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": true,
                                  "id": "myResourceID",
                                  "label": "myLabel",
                                  "resourceType": "myResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
>
          <div>
                    myLabel
          </div>
</ConfirmDialog>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Container(DeleteResource)
    cancel-action="dialog:delete:cancel"
    header="My header title"
    params={
        Object {
            "id": "myResourceID",
          }
    }
    resourceType="myResourceType"
    uri="/myEndpoint"
    validate-action="dialog:delete:validate"
/>,
}
`;

exports[`Container DeleteResource should render with wrong resourceInfo params 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ConfirmDialog
    cancelAction={
        Object {
            "actionCreator": "deleteResource:cancel",
            "id": "dialog:delete:cancel",
            "label": "No",
            "model": Object {
              "resourceInfo": Object {
                "found": false,
                "id": "myResourceID",
                "label": "",
                "resourceType": "unknownResourceType",
                "uri": "/myEndpoint",
              },
            },
            "onClick": [Function],
          }
    }
    header="My header title"
    show={true}
    validateAction={
        Object {
            "actionCreator": "deleteResource:validate",
            "bsStyle": "danger",
            "id": "dialog:delete:validate",
            "label": "Yes",
            "model": Object {
              "resourceInfo": Object {
                "found": false,
                "id": "myResourceID",
                "label": "",
                "resourceType": "unknownResourceType",
                "uri": "/myEndpoint",
              },
            },
            "onClick": [Function],
          }
    }
>
    <div />
</ConfirmDialog>,
  "nodes": Array [
    <ConfirmDialog
      cancelAction={
            Object {
                  "actionCreator": "deleteResource:cancel",
                  "id": "dialog:delete:cancel",
                  "label": "No",
                  "model": Object {
                    "resourceInfo": Object {
                      "found": false,
                      "id": "myResourceID",
                      "label": "",
                      "resourceType": "unknownResourceType",
                      "uri": "/myEndpoint",
                    },
                  },
                  "onClick": [Function],
                }
      }
      header="My header title"
      show={true}
      validateAction={
            Object {
                  "actionCreator": "deleteResource:validate",
                  "bsStyle": "danger",
                  "id": "dialog:delete:validate",
                  "label": "Yes",
                  "model": Object {
                    "resourceInfo": Object {
                      "found": false,
                      "id": "myResourceID",
                      "label": "",
                      "resourceType": "unknownResourceType",
                      "uri": "/myEndpoint",
                    },
                  },
                  "onClick": [Function],
                }
      }
>
      <div />
</ConfirmDialog>,
  ],
  "options": Object {
    "context": Object {
      "store": Object {
        "getState": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "store": Object {
          "getState": [Function],
        },
      },
      "_currentElement": <Container(DeleteResource)
        cancel-action="dialog:delete:cancel"
        header="My header title"
        params={
                Object {
                        "id": "myResourceID",
                      }
        }
        resourceType="unknownResourceType"
        uri="/myEndpoint"
        validate-action="dialog:delete:validate"
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": DeleteResource {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "registry": undefined,
          "store": Object {
            "getState": [Function],
          },
        },
        "getActions": [Function],
        "getLabel": [Function],
        "props": Object {
          "cancel-action": "dialog:delete:cancel",
          "header": "My header title",
          "params": Object {
            "id": "myResourceID",
          },
          "resourceType": "unknownResourceType",
          "uri": "/myEndpoint",
          "validate-action": "dialog:delete:validate",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ConfirmDialog
          cancelAction={
                    Object {
                              "actionCreator": "deleteResource:cancel",
                              "id": "dialog:delete:cancel",
                              "label": "No",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": false,
                                  "id": "myResourceID",
                                  "label": "",
                                  "resourceType": "unknownResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
          header="My header title"
          show={true}
          validateAction={
                    Object {
                              "actionCreator": "deleteResource:validate",
                              "bsStyle": "danger",
                              "id": "dialog:delete:validate",
                              "label": "Yes",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": false,
                                  "id": "myResourceID",
                                  "label": "",
                                  "resourceType": "unknownResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
>
          <div />
</ConfirmDialog>,
        "_debugID": 4,
        "_renderedOutput": <ConfirmDialog
          cancelAction={
                    Object {
                              "actionCreator": "deleteResource:cancel",
                              "id": "dialog:delete:cancel",
                              "label": "No",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": false,
                                  "id": "myResourceID",
                                  "label": "",
                                  "resourceType": "unknownResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
          header="My header title"
          show={true}
          validateAction={
                    Object {
                              "actionCreator": "deleteResource:validate",
                              "bsStyle": "danger",
                              "id": "dialog:delete:validate",
                              "label": "Yes",
                              "model": Object {
                                "resourceInfo": Object {
                                  "found": false,
                                  "id": "myResourceID",
                                  "label": "",
                                  "resourceType": "unknownResourceType",
                                  "uri": "/myEndpoint",
                                },
                              },
                              "onClick": [Function],
                            }
          }
>
          <div />
</ConfirmDialog>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Container(DeleteResource)
    cancel-action="dialog:delete:cancel"
    header="My header title"
    params={
        Object {
            "id": "myResourceID",
          }
    }
    resourceType="unknownResourceType"
    uri="/myEndpoint"
    validate-action="dialog:delete:validate"
/>,
}
`;
