exports[`Component HomeListView should children transformed as array in props.drawer 1`] = `
Array [
  <h1>
    Hello children
</h1>,
]
`;

exports[`Component HomeListView should render with element props 1`] = `
<Layout
  drawers={
    Array [
      <h1>
        Hello children
    </h1>,
    ]
  }
  header={
    <Connect(AppHeaderBar)
      $$typeof={Symbol(react.element)}
      _owner={null}
      _store={Object {}}
      props={
        Object {
          "children": "hello app",
        }
      }
      type="div" />
  }
  mode="TwoColumns"
  one={
    <Connect(CMF(undefined))
      $$typeof={Symbol(react.element)}
      _owner={null}
      _store={Object {}}
      props={
        Object {
          "children": "hello sidepanel",
        }
      }
      type="div" />
  }>
  <Connect(CMF(Container(List)))
    $$typeof={Symbol(react.element)}
    _owner={null}
    _store={Object {}}
    props={
      Object {
        "children": "hello list",
      }
    }
    type="div" />
</Layout>
`;

exports[`Component HomeListView should render with object props 1`] = `
<Layout
  drawers={
    Array [
      <h1>
        Hello children
    </h1>,
    ]
  }
  header={
    <Connect(AppHeaderBar)
      app="hello app" />
  }
  mode="TwoColumns"
  one={
    <Connect(CMF(undefined))
      actionIds={
        Array [
          "menu:demo",
          "menu:article",
        ]
      } />
  }>
  <Connect(CMF(Container(List)))
    actions={Object {}}
    items={
      Array [
        Object {
          "author": "Jean-Pierre DUPONT",
          "className": "item-0-class",
          "created": "2016-09-22",
          "display": "text",
          "icon": "fa fa-file-excel-o",
          "id": 1,
          "label": "Title with actions",
          "modified": "2016-09-22",
        },
      ]
    }
    list={
      Object {
        "columns": Array [
          Object {
            "key": "id",
            "label": "Id",
          },
          Object {
            "key": "label",
            "label": "Name",
          },
        ],
        "titleProps": Object {
          "key": "label",
        },
      }
    }
    toolbar={
      Object {
        "filter": Object {
          "placeholder": "find an object",
        },
        "sort": Object {
          "field": "id",
          "options": Array [
            Object {
              "id": "id",
              "name": "Id",
            },
            Object {
              "id": "label",
              "name": "Name",
            },
          ],
        },
      }
    } />
</Layout>
`;
