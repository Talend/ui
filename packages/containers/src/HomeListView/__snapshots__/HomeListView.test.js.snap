// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component HomeListView should be able to render theme 1`] = `
<Layout
  drawers={
    [
      <h1>
        Hello children
      </h1>,
    ]
  }
  hasTheme={true}
  header={
    <div>
      hello app
    </div>
  }
  mode="TwoColumns"
  one={
    <div>
      hello sidepanel
    </div>
  }
>
  <div>
    hello list
  </div>
</Layout>
`;

exports[`Component HomeListView should children transformed as array in props.drawers 1`] = `
[
  {
    "props": {
      "children": {
        "props": {
          "children": {
            "props": {
              "children": null,
            },
          },
          "label": "foo",
        },
      },
      "foo": "bar",
    },
  },
  {
    "props": {
      "children": {
        "props": {
          "children": null,
        },
      },
      "label": "foo",
    },
  },
  {
    "props": {
      "children": null,
    },
  },
]
`;

exports[`Component HomeListView should render with element props 1`] = `
<Layout
  drawers={
    [
      <h1>
        Hello children
      </h1>,
    ]
  }
  header={
    <div>
      hello app
    </div>
  }
  mode="TwoColumns"
  one={
    <div>
      hello sidepanel
    </div>
  }
>
  <div>
    hello list
  </div>
</Layout>
`;

exports[`Component HomeListView should render with object props 1`] = `
<Layout
  drawers={
    [
      <h1>
        Hello children
      </h1>,
    ]
  }
  header={
    <withI18nextTranslation(HeaderBar)
      app="hello app"
      t={[Function]}
    />
  }
  mode="TwoColumns"
  one={
    <Memo(Connect(CMF(Container(SidePanel))))
      actionIds={
        [
          "menu:demo",
          "menu:article",
        ]
      }
    />
  }
>
  <Memo(Connect(CMF(Container(List))))
    actions={{}}
    items={
      Immutable.List [
        Immutable.Map {
          "id": 1,
          "label": "Title with actions",
          "created": "2016-09-22",
          "modified": "2016-09-22",
          "author": "Jean-Pierre DUPONT",
          "icon": "fa fa-file-excel-o",
          "display": "text",
          "className": "item-0-class",
        },
      ]
    }
    list={
      {
        "columns": [
          {
            "key": "id",
            "label": "Id",
          },
          {
            "key": "label",
            "label": "Name",
          },
        ],
        "titleProps": {
          "key": "label",
        },
      }
    }
    toolbar={
      {
        "filter": {
          "placeholder": "find an object",
        },
        "sort": {
          "field": "id",
          "options": [
            {
              "id": "id",
              "name": "Id",
            },
            {
              "id": "label",
              "name": "Name",
            },
          ],
        },
      }
    }
  />
</Layout>
`;
