"use strict";(self.webpackChunk_talend_react_containers=self.webpackChunk_talend_react_containers||[]).push([[382],{"./src/Slider/Slider.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Slider_stories});var immutable=__webpack_require__("../../node_modules/immutable/dist/immutable.js"),immutable_default=__webpack_require__.n(immutable),lib_esm=__webpack_require__("../cmf/lib-esm/index.js"),react=__webpack_require__("../../node_modules/react/index.js"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),lodash=__webpack_require__("../../node_modules/lodash/lodash.js"),components_lib_esm=__webpack_require__("../components/lib-esm/index.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const VALUE_ATTR="value",DEFAULT_STATE=new(immutable_default().Map)({[VALUE_ATTR]:void 0});class Slider extends react.Component{constructor(props){super(props),this.onChange=this.onChange.bind(this),this.onAfterChange=this.onAfterChange.bind(this)}onAfterChange(value){this.props.onAfterChange&&this.props.onAfterChange(value)}onChange(value){this.props.setState((prevState=>prevState.state.set("value",value))),this.props.onChange&&this.props.onChange(value)}render(){const state=this.props.state||DEFAULT_STATE,props={...(0,lodash.omit)(this.props,lib_esm.TJ.INJECTED_PROPS),value:state.get("value",this.props.value),onChange:this.onChange,onAfterChange:this.onAfterChange};return(0,jsx_runtime.jsx)(components_lib_esm.Slider,{...props})}}Slider.displayName="Slider",_defineProperty(Slider,"displayName","Container(Slider)"),_defineProperty(Slider,"propTypes",{...lib_esm.TJ.propTypes,id:prop_types_default().string,value:prop_types_default().number}),_defineProperty(Slider,"defaultProps",{value:0});const Slider_container=Slider,Slider_connect=(0,lib_esm.TJ)({componentId:ownProps=>ownProps.id,defaultState:DEFAULT_STATE,omitCMFProps:!0,withComponentRegistry:!0,withDispatch:!0,withDispatchActionCreator:!0,withComponentId:!0})(Slider_container);function getComponentState(state,idComponent){return state.cmf.components.getIn(["Container(Slider)",idComponent],DEFAULT_STATE)}Slider_connect.selectors={getComponentState,getValue:function getValue(state,idComponent){return getComponentState(state,idComponent).get("value","")}};const src_Slider=Slider_connect;const icons=["talend-smiley-angry","talend-smiley-unhappy","talend-smiley-neutral","talend-smiley-satisfied","talend-smiley-enthusiast"],delimiterStyle={paddingTop:"25px",paddingBottom:"25px",borderBottom:"1px dashed grey"},paragraphStyle={paddingLeft:"10px"},actions=[{id:"icon1",label:"Click Me",icon:"talend-smiley-angry","data-feature":"action",link:!0,hideLabel:!0},{id:"icon2",label:"Click Me",icon:"talend-smiley-neutral","data-feature":"action",link:!0,hideLabel:!0},{id:"icon3",label:"Click Me",icon:"talend-smiley-neutral","data-feature":"action",link:!0,hideLabel:!0},{id:"icon4",label:"Click Me",icon:"talend-smiley-neutral","data-feature":"action",link:!0,hideLabel:!0},{id:"icon5",label:"Click Me",icon:"talend-smiley-satisfied","data-feature":"action",link:!0,hideLabel:!0}],functionToFormat=value=>`${value}`,nullState=new immutable.Map,initialState=new immutable.Map({value:50}),Slider_stories={parameters:{storySource:{source:"import { Map } from 'immutable';\n\nimport Slider from '.';\n\nconst icons = [\n\t'talend-smiley-angry',\n\t'talend-smiley-unhappy',\n\t'talend-smiley-neutral',\n\t'talend-smiley-satisfied',\n\t'talend-smiley-enthusiast',\n];\n\nconst delimiterStyle = {\n\tpaddingTop: '25px',\n\tpaddingBottom: '25px',\n\tborderBottom: '1px dashed grey',\n};\n\nconst paragraphStyle = {\n\tpaddingLeft: '10px',\n};\n\nconst actions = [\n\t{\n\t\tid: 'icon1',\n\t\tlabel: 'Click Me',\n\t\ticon: 'talend-smiley-angry',\n\t\t'data-feature': 'action',\n\t\tlink: true,\n\t\thideLabel: true,\n\t},\n\t{\n\t\tid: 'icon2',\n\t\tlabel: 'Click Me',\n\t\ticon: 'talend-smiley-neutral',\n\t\t'data-feature': 'action',\n\t\tlink: true,\n\t\thideLabel: true,\n\t},\n\t{\n\t\tid: 'icon3',\n\t\tlabel: 'Click Me',\n\t\ticon: 'talend-smiley-neutral',\n\t\t'data-feature': 'action',\n\t\tlink: true,\n\t\thideLabel: true,\n\t},\n\t{\n\t\tid: 'icon4',\n\t\tlabel: 'Click Me',\n\t\ticon: 'talend-smiley-neutral',\n\t\t'data-feature': 'action',\n\t\tlink: true,\n\t\thideLabel: true,\n\t},\n\t{\n\t\tid: 'icon5',\n\t\tlabel: 'Click Me',\n\t\ticon: 'talend-smiley-satisfied',\n\t\t'data-feature': 'action',\n\t\tlink: true,\n\t\thideLabel: true,\n\t},\n];\n\nconst functionToFormat = value => `${value}`;\n\nconst nullState = new Map();\nconst initialState = new Map({\n\tvalue: 50,\n});\n\nexport default {\n\ttitle: 'Slider',\n};\n\nexport const Default = () => (\n\t<div style={{ padding: '0 0.75rem' }}>\n\t\t<div style={delimiterStyle}>\n\t\t\t<p style={paragraphStyle}>default</p>\n\t\t\t<Slider id=\"slider1\" initialState={initialState} />\n\t\t</div>\n\t\t<div style={delimiterStyle}>\n\t\t\t<p style={paragraphStyle}>with some icons</p>\n\t\t\t<Slider id=\"slider2\" captionIcons={icons} initialState={nullState} />\n\t\t</div>\n\t\t<div style={delimiterStyle}>\n\t\t\t<p style={paragraphStyle}>with some actions icons</p>\n\t\t\t<Slider id=\"slider3\" captionActions={actions} initialState={initialState} />\n\t\t</div>\n\t\t<div style={delimiterStyle}>\n\t\t\t<p style={paragraphStyle}>with step number</p>\n\t\t\t<Slider\n\t\t\t\tid=\"slider4\"\n\t\t\t\tinitialState={initialState}\n\t\t\t\tcaptionsFormat={functionToFormat}\n\t\t\t\tcaptionTextStepNumber={5}\n\t\t\t/>\n\t\t</div>\n\t</div>\n);\n",locationsMap:{default:{startLoc:{col:23,line:77},endLoc:{col:1,line:101},startBody:{col:23,line:77},endBody:{col:1,line:101}}}}},title:"Slider"},Default=()=>(0,jsx_runtime.jsxs)("div",{style:{padding:"0 0.75rem"},children:[(0,jsx_runtime.jsxs)("div",{style:delimiterStyle,children:[(0,jsx_runtime.jsx)("p",{style:paragraphStyle,children:"default"}),(0,jsx_runtime.jsx)(src_Slider,{id:"slider1",initialState})]}),(0,jsx_runtime.jsxs)("div",{style:delimiterStyle,children:[(0,jsx_runtime.jsx)("p",{style:paragraphStyle,children:"with some icons"}),(0,jsx_runtime.jsx)(src_Slider,{id:"slider2",captionIcons:icons,initialState:nullState})]}),(0,jsx_runtime.jsxs)("div",{style:delimiterStyle,children:[(0,jsx_runtime.jsx)("p",{style:paragraphStyle,children:"with some actions icons"}),(0,jsx_runtime.jsx)(src_Slider,{id:"slider3",captionActions:actions,initialState})]}),(0,jsx_runtime.jsxs)("div",{style:delimiterStyle,children:[(0,jsx_runtime.jsx)("p",{style:paragraphStyle,children:"with step number"}),(0,jsx_runtime.jsx)(src_Slider,{id:"slider4",initialState,captionsFormat:functionToFormat,captionTextStepNumber:5})]})]});Default.displayName="Default",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => <div style={{\n  padding: \'0 0.75rem\'\n}}>\n        <div style={delimiterStyle}>\n            <p style={paragraphStyle}>default</p>\n            <Slider id="slider1" initialState={initialState} />\n        </div>\n        <div style={delimiterStyle}>\n            <p style={paragraphStyle}>with some icons</p>\n            <Slider id="slider2" captionIcons={icons} initialState={nullState} />\n        </div>\n        <div style={delimiterStyle}>\n            <p style={paragraphStyle}>with some actions icons</p>\n            <Slider id="slider3" captionActions={actions} initialState={initialState} />\n        </div>\n        <div style={delimiterStyle}>\n            <p style={paragraphStyle}>with step number</p>\n            <Slider id="slider4" initialState={initialState} captionsFormat={functionToFormat} captionTextStepNumber={5} />\n        </div>\n    </div>',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);