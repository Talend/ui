"use strict";(self.webpackChunk_talend_react_containers=self.webpackChunk_talend_react_containers||[]).push([[65],{"./src/Notification/Notification.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Notification_stories});var Notification_actions_namespaceObject={};__webpack_require__.r(Notification_actions_namespaceObject),__webpack_require__.d(Notification_actions_namespaceObject,{pushError:()=>pushError,pushGeneric:()=>pushGeneric,pushInfo:()=>pushInfo,pushWarning:()=>pushWarning});var immutable=__webpack_require__("../../node_modules/immutable/dist/immutable.js"),immutable_default=__webpack_require__.n(immutable),lib_esm=__webpack_require__("../cmf/lib-esm/index.js"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),components_lib_esm=__webpack_require__("../components/lib-esm/index.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const DEFAULT_STATE=new immutable.Map({notifications:new immutable.List});function Notification(props){const state=(props.state||DEFAULT_STATE).toJS();return(0,jsx_runtime.jsx)(components_lib_esm.Notification,{leaveFn:i=>props.deleteNotification(i),notifications:state.notifications,autoLeaveError:props.autoLeaveError})}Notification.displayName="Notification",Notification.displayName="Container(Notification)",Notification.propTypes={deleteNotification:prop_types_default().func,autoLeaveError:prop_types_default().bool,...lib_esm.TJ.propTypes};const Notification_container=Notification;const Notification_connect=(0,lib_esm.TJ)({componentId:function componentId(ownProps){return ownProps&&ownProps.id||"Notification"},defaultState:DEFAULT_STATE,defaultProps:{saga:"Notification#default"},mergeProps:function mergeProps(stateProps,dispatchProps,ownProps){return{deleteNotification(i){dispatchProps.setState(function deleteNotification(indexNotification){return function mutator(prevStateProps){const notifications=prevStateProps.state.get("notifications"),index=notifications.indexOf(indexNotification);if(index>-1){const newNotif=notifications.delete(index);return prevStateProps.state.set("notifications",newNotif)}return prevStateProps.state}}(i))},...ownProps,...stateProps,...dispatchProps}},omitCMFProps:!0,withComponentRegistry:!0,withDispatch:!0,withDispatchActionCreator:!0,withComponentId:!0})(Notification_container);var utils_lib_esm=__webpack_require__("../utils/lib-esm/index.js"),lodash=__webpack_require__("../../node_modules/lodash/lodash.js");const Notification_constants={PUSH_NOTIFICATION:"PUSH_NOTIFICATION",TYPE_INFO:"info",TYPE_WARNING:"warning",TYPE_ERROR:"error"};function pushGeneric(notification){return{type:Notification_constants.PUSH_NOTIFICATION,notification}}function pushInfo(notification){return pushGeneric({...notification,type:Notification_constants.TYPE_INFO})}function pushWarning(notification){return pushGeneric({...notification,type:Notification_constants.TYPE_WARNING})}function pushError(notification){return pushGeneric({...notification,type:Notification_constants.TYPE_ERROR})}var redux_saga_effects_npm_proxy_esm=__webpack_require__("../../node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js"),process=__webpack_require__("../../node_modules/process/browser.js");const CMF_CONST=lib_esm.Ay.constants,onError=lib_esm.Ay.onError;function*onPushNotification(action){const newComponentState=(yield(0,redux_saga_effects_npm_proxy_esm.Lt)(state=>Notification_connect.getState(state,"Notification"))).updateIn(["notifications"],notifications=>notifications.push({id:(0,utils_lib_esm.N4)(),...action.notification})),updateStateAction=Notification_connect.setStateAction(newComponentState,"Notification");yield(0,redux_saga_effects_npm_proxy_esm.yJ)(updateStateAction)}function*onCMFError(action){if(process.env.DISABLE_JS_ERROR_NOTIFICATION)return;const error=action.error,download={href:onError.createObjectURL(error),label:"Download details",download:"report.json","data-feature":"download-on-error-details"},notification={type:"error",title:error.name,message:error.message,action:download};yield(0,redux_saga_effects_npm_proxy_esm.yJ)(pushError(notification))}const Notification_sagas={"Notification#default":function*defaultHandler(){yield(0,redux_saga_effects_npm_proxy_esm.jP)(Notification_constants.PUSH_NOTIFICATION,onPushNotification),yield(0,redux_saga_effects_npm_proxy_esm.jP)(CMF_CONST.ERROR,onCMFError)}};Notification_connect.push=function pushNotification(state,notification){if(!(0,lodash.get)(notification,"message"))return state;const path=["Container(Notification)","Notification","notifications"];let notifs=state.cmf.components.getIn(path,new(immutable_default().List));notifs=notifs.push({id:(0,utils_lib_esm.N4)(),...notification});const newState={...state};return newState.cmf.components=state.cmf.components.setIn(path,notifs),newState},Notification_connect.clear=function clearNotifications(state){const path=["Container(Notification)","Notification","notifications"];let notifs=state.cmf.components.getIn(path);if(!notifs)return state;notifs=notifs.clear();const newState={...state};return newState.cmf.components=state.cmf.components.setIn(path,notifs),newState},Notification_connect.actions=Notification_actions_namespaceObject,Notification_connect.constants=Notification_constants,Notification_connect.sagas=Notification_sagas;const src_Notification=Notification_connect;const initialState=new immutable.Map({notifications:new immutable.List([{id:"story-1",message:"This is a feedback of your operation1, This is a feedback of your operation1"},{id:"story-2",type:"error",message:["This is a feedback of your operation2","This is a feedback of your operation1, This is a feedback of your operation1"]},{id:"story-3",type:"warning",message:["This is a feedback of your operation3","details"]}])}),Notification_stories={title:"Notification",parameters:{storySource:{source:"import { List, Map } from 'immutable';\nimport Notification from '.';\n\nconst initialState = new Map({\n\tnotifications: new List([\n\t\t{\n\t\t\tid: 'story-1',\n\t\t\tmessage: 'This is a feedback of your operation1, This is a feedback of your operation1',\n\t\t},\n\t\t{\n\t\t\tid: 'story-2',\n\t\t\ttype: 'error',\n\t\t\tmessage: [\n\t\t\t\t'This is a feedback of your operation2',\n\t\t\t\t'This is a feedback of your operation1, This is a feedback of your operation1',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tid: 'story-3',\n\t\t\ttype: 'warning',\n\t\t\tmessage: ['This is a feedback of your operation3', 'details'],\n\t\t},\n\t]),\n});\n\nexport default {\n\ttitle: 'Notification',\n\tparameters: {\n\t\t// Disables Chromatic's snapshotting on a story level\n\t\tchromatic: { disableSnapshot: true },\n\t},\n};\n\nexport const Default = () => <Notification initialState={initialState} />;\n",locationsMap:{default:{startLoc:{col:23,line:34},endLoc:{col:73,line:34},startBody:{col:23,line:34},endBody:{col:73,line:34}}}},chromatic:{disableSnapshot:!0}}},Default=()=>(0,jsx_runtime.jsx)(src_Notification,{initialState});Default.displayName="Default",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <Notification initialState={initialState} />",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);