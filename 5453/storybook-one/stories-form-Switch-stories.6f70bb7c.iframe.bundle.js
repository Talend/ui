"use strict";(self.webpackChunk_talend_ui_storybook_one=self.webpackChunk_talend_ui_storybook_one||[]).push([[8178],{"../design-system/src/stories/form/Switch.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Uncontrolled:()=>Uncontrolled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../design-system/src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Form/Switch",component:___WEBPACK_IMPORTED_MODULE_1__.dO},Default=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.dO,{...props});Default.args={values:["input","both","output"]};const Uncontrolled=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("value f");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("p",{children:["Selected value: ",value]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.dO,{values:["value a","value b","value c","value d","value e","value f"],defaultValue:"value f",onChange:(_,v)=>setValue(v)})]})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(props: any) => <Switch {...props} />",...Default.parameters?.docs?.source}}},Uncontrolled.parameters={...Uncontrolled.parameters,docs:{...Uncontrolled.parameters?.docs,source:{originalSource:"() => {\n  const defaultValue = 'value f';\n  const [value, setValue] = useState(defaultValue);\n  return <>\n            <p>Selected value: {value}</p>\n            <Switch values={['value a', 'value b', 'value c', 'value d', 'value e', 'value f']} defaultValue={defaultValue} onChange={(_: MouseEvent<HTMLButtonElement>, v: string) => setValue(v)} />\n        </>;\n}",...Uncontrolled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Uncontrolled"]}}]);